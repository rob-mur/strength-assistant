name: Deploy PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'app/**'
      - 'lib/**'
      - 'package.json'
      - 'package-lock.json'
      - 'expo.json'
      - 'app.json'

concurrency:
  group: preview-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.repo.full_name == github.repository

    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4

      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: npm

      - name: 🏗 Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🚀 Build web app
        run: |
          npm run build
        env:
          NODE_ENV: production

      - name: 🔥 Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_STRENGTH_ASSISTANT_DEV }}
          expires: 30d
          channelId: pr-${{ github.event.number }}
          projectId: strength-assistant-dev
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks

      - name: 📝 Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const channelId = `pr-${pr.number}`;
            const previewUrl = `https://${channelId}--strength-assistant-dev.web.app`;
            
            const comment = `## 🔗 Preview Deployment
            
            **Preview URL**: ${previewUrl}
            
            This preview will be automatically cleaned up when the PR is closed or after 30 days.
            
            Built from commit: ${context.sha}`;
            
            // Find existing preview comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
            });
            
            const existingComment = comments.data.find(
              comment => comment.body.includes('## 🔗 Preview Deployment')
            );
            
            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: comment,
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: comment,
              });
            }