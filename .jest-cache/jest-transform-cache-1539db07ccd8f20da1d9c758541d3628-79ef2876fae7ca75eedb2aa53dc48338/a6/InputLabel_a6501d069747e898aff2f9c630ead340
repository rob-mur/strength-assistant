ad0d16b13837ae23c4e1c66d658b0178
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _AnimatedText = _interopRequireDefault(require("../../Typography/AnimatedText"));
var _helpers = require("../helpers");
function _interopRequireDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}
var InputLabel = function InputLabel(props) {
  var labeled = props.labeled,
    wiggle = props.wiggle,
    error = props.error,
    focused = props.focused,
    opacity = props.opacity,
    labelLayoutWidth = props.labelLayoutWidth,
    labelLayoutHeight = props.labelLayoutHeight,
    labelBackground = props.labelBackground,
    label = props.label,
    labelError = props.labelError,
    onLayoutAnimatedText = props.onLayoutAnimatedText,
    onLabelTextLayout = props.onLabelTextLayout,
    hasActiveOutline = props.hasActiveOutline,
    activeColor = props.activeColor,
    placeholderStyle = props.placeholderStyle,
    baseLabelTranslateX = props.baseLabelTranslateX,
    baseLabelTranslateY = props.baseLabelTranslateY,
    font = props.font,
    fontSize = props.fontSize,
    lineHeight = props.lineHeight,
    fontWeight = props.fontWeight,
    placeholderOpacity = props.placeholderOpacity,
    wiggleOffsetX = props.wiggleOffsetX,
    labelScale = props.labelScale,
    topPosition = props.topPosition,
    paddingLeft = props.paddingLeft,
    paddingRight = props.paddingRight,
    backgroundColor = props.backgroundColor,
    roundness = props.roundness,
    placeholderColor = props.placeholderColor,
    errorColor = props.errorColor,
    labelTranslationXOffset = props.labelTranslationXOffset,
    maxFontSizeMultiplier = props.maxFontSizeMultiplier,
    testID = props.testID,
    isV3 = props.isV3,
    inputContainerLayout = props.inputContainerLayout,
    scaledLabel = props.scaledLabel;
  var _ref = (0, _helpers.getConstants)(isV3),
    INPUT_PADDING_HORIZONTAL = _ref.INPUT_PADDING_HORIZONTAL;
  var _ref2 = (0, _reactNative.useWindowDimensions)(),
    width = _ref2.width;
  var isWeb = _reactNative.Platform.OS === 'web';
  var paddingOffset = paddingLeft && paddingRight ? {
    paddingLeft: paddingLeft,
    paddingRight: paddingRight
  } : {};
  var labelTranslationX = {
    transform: [{
      translateX: labeled.interpolate({
        inputRange: [0, 1],
        outputRange: [baseLabelTranslateX, labelTranslationXOffset || 0]
      })
    }]
  };
  var labelStyle = Object.assign({}, font, {
    fontSize: fontSize,
    lineHeight: lineHeight,
    fontWeight: fontWeight,
    opacity: labeled.interpolate({
      inputRange: [0, 1],
      outputRange: [hasActiveOutline ? 1 : 0, 0]
    }),
    transform: [{
      translateX: wiggle ? error.interpolate({
        inputRange: [0, 0.5, 1],
        outputRange: [0, wiggleOffsetX, 0]
      }) : 0
    }, {
      translateY: baseLabelTranslateY !== 0 ? labeled.interpolate({
        inputRange: [0, 1],
        outputRange: [baseLabelTranslateY, 0]
      }) : 0
    }, {
      scale: labelScale !== 0 ? labeled.interpolate({
        inputRange: [0, 1],
        outputRange: [labelScale, 1]
      }) : labeled
    }]
  });
  var labelWidth = (inputContainerLayout.width + INPUT_PADDING_HORIZONTAL / 2) / (scaledLabel ? labelScale : 1);
  var commonStyles = [placeholderStyle, {
    top: topPosition
  }, {
    maxWidth: labelWidth
  }, labelStyle, paddingOffset || {}];
  var textColor = labelError && errorColor ? errorColor : placeholderColor;
  return (_react.default.createElement(_reactNative.View, {
      pointerEvents: "none",
      style: [_reactNative.StyleSheet.absoluteFill, styles.overflow, styles.labelContainer]
    }, _react.default.createElement(_reactNative.Animated.View, {
      pointerEvents: "none",
      style: [_reactNative.StyleSheet.absoluteFill, !isWeb && {
        width: width
      }, {
        opacity: opacity
      }, labelTranslationX]
    }, _react.default.createElement(_reactNative.View, {
      style: {
        width: labelWidth
      }
    }, labelBackground === null || labelBackground === void 0 ? void 0 : labelBackground({
      labeled: labeled,
      labelLayoutWidth: labelLayoutWidth,
      labelLayoutHeight: labelLayoutHeight,
      labelStyle: labelStyle,
      placeholderStyle: placeholderStyle,
      baseLabelTranslateX: baseLabelTranslateX,
      topPosition: topPosition,
      label: label,
      backgroundColor: backgroundColor,
      roundness: roundness,
      maxFontSizeMultiplier: maxFontSizeMultiplier,
      testID: testID
    }), _react.default.createElement(_AnimatedText.default, {
      variant: "bodySmall",
      onLayout: onLayoutAnimatedText,
      onTextLayout: onLabelTextLayout,
      style: [commonStyles, {
        color: activeColor
      }],
      numberOfLines: 1,
      maxFontSizeMultiplier: maxFontSizeMultiplier,
      testID: `${testID}-label-active`
    }, label), _react.default.createElement(_AnimatedText.default, {
      variant: focused ? 'bodyLarge' : 'bodySmall',
      style: [commonStyles, {
        color: textColor,
        opacity: placeholderOpacity
      }],
      numberOfLines: 1,
      maxFontSizeMultiplier: maxFontSizeMultiplier,
      testID: `${testID}-label-inactive`
    }, label))))
  );
};
var styles = _reactNative.StyleSheet.create({
  overflow: {
    overflow: 'hidden'
  },
  labelContainer: {
    zIndex: 3
  }
});
var _default = exports.default = _react.default.memo(InputLabel);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,