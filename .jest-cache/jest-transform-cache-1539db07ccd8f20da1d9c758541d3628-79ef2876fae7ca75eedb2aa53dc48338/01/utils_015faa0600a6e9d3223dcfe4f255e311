3dd7bfe90f56117ba478dd29e1c49865
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSelectionControlIOSColor = exports.getAndroidSelectionControlColor = void 0;
var _color = _interopRequireDefault(require("color"));
function _interopRequireDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}
var getAndroidCheckedColor = function getAndroidCheckedColor(_ref) {
  var theme = _ref.theme,
    customColor = _ref.customColor;
  if (customColor) {
    return customColor;
  }
  if (theme.isV3) {
    return theme.colors.primary;
  }
  return theme.colors.accent;
};
var getAndroidUncheckedColor = function getAndroidUncheckedColor(_ref2) {
  var theme = _ref2.theme,
    customUncheckedColor = _ref2.customUncheckedColor;
  if (customUncheckedColor) {
    return customUncheckedColor;
  }
  if (theme.isV3) {
    return theme.colors.onSurfaceVariant;
  }
  if (theme.dark) {
    return (0, _color.default)(theme.colors.text).alpha(0.7).rgb().string();
  }
  return (0, _color.default)(theme.colors.text).alpha(0.54).rgb().string();
};
var getAndroidRippleColor = function getAndroidRippleColor(_ref3) {
  var theme = _ref3.theme,
    checkedColor = _ref3.checkedColor,
    disabled = _ref3.disabled;
  if (disabled) {
    if (theme.isV3) {
      return (0, _color.default)(theme.colors.onSurface).alpha(0.16).rgb().string();
    }
    return (0, _color.default)(theme.colors.text).alpha(0.16).rgb().string();
  }
  return (0, _color.default)(checkedColor).fade(0.32).rgb().string();
};
var getAndroidControlColor = function getAndroidControlColor(_ref4) {
  var theme = _ref4.theme,
    checked = _ref4.checked,
    disabled = _ref4.disabled,
    checkedColor = _ref4.checkedColor,
    uncheckedColor = _ref4.uncheckedColor;
  if (disabled) {
    if (theme.isV3) {
      return theme.colors.onSurfaceDisabled;
    }
    return theme.colors.disabled;
  }
  if (checked) {
    return checkedColor;
  }
  return uncheckedColor;
};
var getAndroidSelectionControlColor = function getAndroidSelectionControlColor(_ref5) {
  var theme = _ref5.theme,
    disabled = _ref5.disabled,
    checked = _ref5.checked,
    customColor = _ref5.customColor,
    customUncheckedColor = _ref5.customUncheckedColor;
  var checkedColor = getAndroidCheckedColor({
    theme: theme,
    customColor: customColor
  });
  var uncheckedColor = getAndroidUncheckedColor({
    theme: theme,
    customUncheckedColor: customUncheckedColor
  });
  return {
    rippleColor: getAndroidRippleColor({
      theme: theme,
      checkedColor: checkedColor,
      disabled: disabled
    }),
    selectionControlColor: getAndroidControlColor({
      theme: theme,
      disabled: disabled,
      checked: checked,
      checkedColor: checkedColor,
      uncheckedColor: uncheckedColor
    })
  };
};
exports.getAndroidSelectionControlColor = getAndroidSelectionControlColor;
var getIOSCheckedColor = function getIOSCheckedColor(_ref6) {
  var theme = _ref6.theme,
    disabled = _ref6.disabled,
    customColor = _ref6.customColor;
  if (disabled) {
    if (theme.isV3) {
      return theme.colors.onSurfaceDisabled;
    }
    return theme.colors.disabled;
  }
  if (customColor) {
    return customColor;
  }
  if (theme.isV3) {
    return theme.colors.primary;
  }
  return theme.colors.accent;
};
var getIOSRippleColor = function getIOSRippleColor(_ref7) {
  var theme = _ref7.theme,
    checkedColor = _ref7.checkedColor,
    disabled = _ref7.disabled;
  if (disabled) {
    if (theme.isV3) {
      return (0, _color.default)(theme.colors.onSurface).alpha(0.16).rgb().string();
    }
    return (0, _color.default)(theme.colors.text).alpha(0.16).rgb().string();
  }
  return (0, _color.default)(checkedColor).fade(0.32).rgb().string();
};
var getSelectionControlIOSColor = function getSelectionControlIOSColor(_ref8) {
  var theme = _ref8.theme,
    disabled = _ref8.disabled,
    customColor = _ref8.customColor;
  var checkedColor = getIOSCheckedColor({
    theme: theme,
    disabled: disabled,
    customColor: customColor
  });
  return {
    checkedColor: checkedColor,
    rippleColor: getIOSRippleColor({
      theme: theme,
      checkedColor: checkedColor,
      disabled: disabled
    })
  };
};
exports.getSelectionControlIOSColor = getSelectionControlIOSColor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29sb3IiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsImUiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImdldEFuZHJvaWRDaGVja2VkQ29sb3IiLCJfcmVmIiwidGhlbWUiLCJjdXN0b21Db2xvciIsImlzVjMiLCJjb2xvcnMiLCJwcmltYXJ5IiwiYWNjZW50IiwiZ2V0QW5kcm9pZFVuY2hlY2tlZENvbG9yIiwiX3JlZjIiLCJjdXN0b21VbmNoZWNrZWRDb2xvciIsIm9uU3VyZmFjZVZhcmlhbnQiLCJkYXJrIiwidGV4dCIsImFscGhhIiwicmdiIiwic3RyaW5nIiwiZ2V0QW5kcm9pZFJpcHBsZUNvbG9yIiwiX3JlZjMiLCJjaGVja2VkQ29sb3IiLCJkaXNhYmxlZCIsIm9uU3VyZmFjZSIsImZhZGUiLCJnZXRBbmRyb2lkQ29udHJvbENvbG9yIiwiX3JlZjQiLCJjaGVja2VkIiwidW5jaGVja2VkQ29sb3IiLCJvblN1cmZhY2VEaXNhYmxlZCIsImdldEFuZHJvaWRTZWxlY3Rpb25Db250cm9sQ29sb3IiLCJfcmVmNSIsInJpcHBsZUNvbG9yIiwic2VsZWN0aW9uQ29udHJvbENvbG9yIiwiZXhwb3J0cyIsImdldElPU0NoZWNrZWRDb2xvciIsIl9yZWY2IiwiZ2V0SU9TUmlwcGxlQ29sb3IiLCJfcmVmNyIsImdldFNlbGVjdGlvbkNvbnRyb2xJT1NDb2xvciIsIl9yZWY4Il0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvQ2hlY2tib3gvdXRpbHMudHMiXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUEwQixTQUFBRCx1QkFBQUUsQ0FBQTtFQUFBLE9BQUFBLENBQUEsSUFBQUEsQ0FBQSxDQUFBQyxVQUFBLEdBQUFELENBQUE7SUFBQUUsT0FBQSxFQUFBRjtFQUFBO0FBQUE7QUFJMUIsSUFBTUcsc0JBQXNCLEdB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