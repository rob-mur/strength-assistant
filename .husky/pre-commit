#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Constitutional Amendment v2.6.0: Enhanced Pre-commit Hook
# Enforces task completion validation, constitutional compliance, and performance requirements

echo "üèõÔ∏è  Constitutional Amendment v2.6.0: Pre-commit validation starting..."

# Amendment v2.6.0: Task completion validation
echo "üìã Validating task completion format..."

# Check for recent commits with proper task completion format
RECENT_COMMIT_MSG=$(git log -1 --pretty=format:"%B" 2>/dev/null)

if [ -n "$RECENT_COMMIT_MSG" ]; then
  # Check for Amendment v2.6.0 task completion format
  if echo "$RECENT_COMMIT_MSG" | grep -q "## Task Completion Validation (Amendment v2.6.0)"; then
    echo "‚úÖ Task completion validation format detected in recent commit"
    
    # Extract and validate the expected test outcome
    if echo "$RECENT_COMMIT_MSG" | grep -q "**Expected Test Outcome**: \(PASS\|FAIL\)"; then
      echo "‚úÖ Test expectation declaration found"
    else
      echo "‚ùå CONSTITUTIONAL VIOLATION: Missing test expectation declaration"
      echo "   Amendment v2.6.0 requires explicit PASS/FAIL prediction with reasoning"
      exit 1
    fi
    
    # Check for validation execution
    if echo "$RECENT_COMMIT_MSG" | grep -q "devbox run test; echo \"Exit code:"; then
      echo "‚úÖ Validation execution command found"
    else
      echo "‚ùå CONSTITUTIONAL VIOLATION: Missing validation execution"
      echo "   Amendment v2.6.0 requires: devbox run test; echo \"Exit code: \$?\""
      exit 1
    fi
  else
    echo "‚ÑπÔ∏è  No Amendment v2.6.0 task completion format detected"
    echo "   For task completion commits, include proper validation format"
  fi
fi

# Amendment v2.5.0: Binary exit code validation
echo "üî¢ Validating TypeScript compilation (Amendment v2.5.0 integration)..."
if ! npx tsc --noEmit; then
  echo "‚ùå CONSTITUTIONAL VIOLATION: TypeScript compilation failed"
  echo "   Amendment v2.5.0 requires binary exit code compliance"
  exit 1
fi
echo "‚úÖ TypeScript compilation successful"

# Amendment v2.4.0: Test governance compliance
echo "üìä Validating test governance compliance..."

# Check for skip patterns in staged files
STAGED_TEST_FILES=$(git diff --cached --name-only | grep -E '\.(test|spec)\.(ts|tsx|js|jsx)$' || true)

if [ -n "$STAGED_TEST_FILES" ]; then
  echo "üîç Checking staged test files for skip patterns..."
  
  SKIP_VIOLATIONS=""
  for file in $STAGED_TEST_FILES; do
    if [ -f "$file" ]; then
      # Check for prohibited skip patterns
      if grep -n -E '(it\.skip|describe\.skip|test\.skip|xit|xdescribe)' "$file"; then
        SKIP_VIOLATIONS="$SKIP_VIOLATIONS\n$file"
      fi
    fi
  done
  
  if [ -n "$SKIP_VIOLATIONS" ]; then
    echo "‚ùå CONSTITUTIONAL VIOLATION: Skip patterns detected in staged files"
    echo "   Amendment v2.6.0 prohibits test skipping without constitutional justification"
    echo "   Violating files:$SKIP_VIOLATIONS"
    exit 1
  fi
  echo "‚úÖ No skip patterns detected in staged test files"
else
  echo "‚ÑπÔ∏è  No test files staged for commit"
fi

# Amendment v2.6.0: Performance compliance pre-check
echo "‚è±Ô∏è  Performing performance compliance pre-check..."

# Run constitutional contract tests only (faster than full suite)
PERF_START_TIME=$(date +%s)

if npx jest --testPathPattern="contracts" --passWithNoTests --silent --maxWorkers=1 --timeout=30000 2>/dev/null; then
  PERF_END_TIME=$(date +%s)
  PERF_DURATION=$((PERF_END_TIME - PERF_START_TIME))
  
  if [ $PERF_DURATION -gt 30 ]; then
    echo "‚ö†Ô∏è  Constitutional performance warning: Contract tests took ${PERF_DURATION}s (>30s)"
    echo "   Full test suite may exceed 60-second constitutional limit"
    echo "   Consider running selective test execution before commit"
  else
    echo "‚úÖ Performance pre-check passed (${PERF_DURATION}s)"
  fi
else
  echo "‚ö†Ô∏è  Constitutional contract tests had issues - proceed with caution"
fi

# Memory constraint pre-check
echo "üß† Checking memory usage..."
MEMORY_USAGE_MB=$(ps -o rss= -p $$ | awk '{print int($1/1024)}')
if [ $MEMORY_USAGE_MB -gt 6144 ]; then # 6GB warning threshold
  echo "‚ö†Ô∏è  High memory usage detected: ${MEMORY_USAGE_MB}MB"
  echo "   Approaching constitutional 8GB limit"
fi

# Amendment integration validation
echo "üîó Validating amendment integration..."

# Check if constitutional framework files are staged
CONSTITUTIONAL_FILES=$(git diff --cached --name-only | grep -E '(constitutional|amendment|compliance)' || true)
if [ -n "$CONSTITUTIONAL_FILES" ]; then
  echo "üèõÔ∏è  Constitutional framework changes detected"
  echo "   Files: $CONSTITUTIONAL_FILES"
  
  # Require extra validation for constitutional changes
  echo "üìã Performing enhanced validation for constitutional changes..."
  
  # Validate TypeScript interfaces for constitutional files
  for file in $CONSTITUTIONAL_FILES; do
    if [[ "$file" == *.ts ]] && [ -f "$file" ]; then
      echo "üîç Validating TypeScript interfaces in $file..."
      if ! npx tsc --noEmit "$file"; then
        echo "‚ùå CONSTITUTIONAL VIOLATION: TypeScript validation failed for $file"
        exit 1
      fi
    fi
  done
  
  echo "‚úÖ Constitutional framework validation passed"
fi

# Selective test execution for performance optimization
echo "üß™ Running optimized test validation..."

# Check if we need full test suite or can use selective execution
CHANGED_FILES=$(git diff --cached --name-only || true)
NEEDS_FULL_SUITE=false

# Check if constitutional files changed (requires full suite)
if echo "$CHANGED_FILES" | grep -E '(constitutional|amendment|compliance|jest\.config|package\.json)'; then
  NEEDS_FULL_SUITE=true
  echo "üèõÔ∏è  Constitutional or configuration changes detected - full test suite required"
fi

if [ "$NEEDS_FULL_SUITE" = true ]; then
  echo "üß™ Running full constitutional test suite..."
  # Use timeout to enforce constitutional 90-second limit for pre-commit
  if timeout 90 devbox run test; then
    echo "‚úÖ Full test suite passed within constitutional time limit"
  else
    EXIT_CODE=$?
    if [ $EXIT_CODE -eq 124 ]; then
      echo "‚ùå CONSTITUTIONAL VIOLATION: Test suite exceeded 90-second pre-commit limit"
      echo "   Amendment v2.6.0 requires optimized test execution"
      echo "   Consider implementing selective test execution"
    else
      echo "‚ùå CONSTITUTIONAL VIOLATION: Test suite failed"
    fi
    exit 1
  fi
else
  echo "üéØ Running selective test execution for performance..."
  # Run only affected tests for faster pre-commit validation
  if npx jest --onlyChanged --passWithNoTests --maxWorkers=1 --timeout=8000; then
    echo "‚úÖ Selective tests passed"
  else
    echo "‚ùå Selective tests failed - running constitutional minimum"
    # Fallback to constitutional tests only
    if npx jest --testPathPattern="(contracts|constitutional)" --passWithNoTests --maxWorkers=1; then
      echo "‚úÖ Constitutional tests passed"
    else
      echo "‚ùå CONSTITUTIONAL VIOLATION: Constitutional tests failed"
      exit 1
    fi
  fi
fi

# Final compliance summary
echo ""
echo "üèõÔ∏è  Constitutional Amendment Compliance Summary:"
echo "   ‚úÖ Amendment v2.4.0: Test Governance"
echo "   ‚úÖ Amendment v2.5.0: Binary Exit Code"
echo "   ‚úÖ Amendment v2.6.0: Task Completion Validation"
echo ""
echo "‚úÖ Pre-commit validation successful - commit allowed"

exit 0