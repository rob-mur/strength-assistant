9ef5c986ee5e1f1bd4e3e5573175e9b2
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _classCallCheck2 = _interopRequireDefault2(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault2(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault2(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault2(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault2(require("@babel/runtime/helpers/inherits"));
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.PortalContext = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _PortalManager = _interopRequireDefault(require("./PortalManager"));
function _interopRequireDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}
function _interopRequireWildcard(e, t) {
  if ("function" == typeof WeakMap) var r = new WeakMap(),
    n = new WeakMap();
  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {
    if (!t && e && e.__esModule) return e;
    var o,
      i,
      f = {
        __proto__: null,
        default: e
      };
    if (null === e || "object" != typeof e && "function" != typeof e) return f;
    if (o = t ? n : r) {
      if (o.has(e)) return o.get(e);
      o.set(e, f);
    }
    for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]);
    return f;
  })(e, t);
}
var PortalContext = exports.PortalContext = React.createContext(null);
var PortalHost = function (_React$Component) {
  function PortalHost() {
    var _this;
    (0, _classCallCheck2.default)(this, PortalHost);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, PortalHost, [].concat(args));
    _this.setManager = function (manager) {
      _this.manager = manager;
    };
    _this.mount = function (children) {
      var key = _this.nextKey++;
      if (_this.manager) {
        _this.manager.mount(key, children);
      } else {
        _this.queue.push({
          type: 'mount',
          key: key,
          children: children
        });
      }
      return key;
    };
    _this.update = function (key, children) {
      if (_this.manager) {
        _this.manager.update(key, children);
      } else {
        var op = {
          type: 'mount',
          key: key,
          children: children
        };
        var index = _this.queue.findIndex(function (o) {
          return o.type === 'mount' || o.type === 'update' && o.key === key;
        });
        if (index > -1) {
          _this.queue[index] = op;
        } else {
          _this.queue.push(op);
        }
      }
    };
    _this.unmount = function (key) {
      if (_this.manager) {
        _this.manager.unmount(key);
      } else {
        _this.queue.push({
          type: 'unmount',
          key: key
        });
      }
    };
    _this.nextKey = 0;
    _this.queue = [];
    return _this;
  }
  (0, _inherits2.default)(PortalHost, _React$Component);
  return (0, _createClass2.default)(PortalHost, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var manager = this.manager;
      var queue = this.queue;
      while (queue.length && manager) {
        var action = queue.pop();
        if (action) {
          switch (action.type) {
            case 'mount':
              manager.mount(action.key, action.children);
              break;
            case 'update':
              manager.update(action.key, action.children);
              break;
            case 'unmount':
              manager.unmount(action.key);
              break;
          }
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      return React.createElement(PortalContext.Provider, {
        value: {
          mount: this.mount,
          update: this.update,
          unmount: this.unmount
        }
      }, React.createElement(_reactNative.View, {
        style: styles.container,
        collapsable: false,
        pointerEvents: "box-none"
      }, this.props.children), React.createElement(_PortalManager.default, {
        ref: this.setManager
      }));
    }
  }]);
}(React.Component);
PortalHost.displayName = 'Portal.Host';
exports.default = PortalHost;
var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9Qb3J0YWxNYW5hZ2VyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsImUiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInQiLCJXZWFrTWFwIiwiciIsIm4iLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJoYXMiLCJnZXQiLCJzZXQiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIlBvcnRhbENvbnRleHQiLCJleHBvcnRzIiwiY3JlYXRlQ29udGV4dCIsIlBvcnRhbEhvc3QiLCJfUmVhY3QkQ29tcG9uZW50IiwiX3RoaXMiLCJfY2xhc3NDYWxsQ2hlY2syIiwiX2xlbiIsImFyZ3VtZW50cyIsImxlbmd0aCIsImFyZ3MiLCJBcnJheSIsIl9rZXkiLCJfY2FsbFN1cGVyIiwiY29uY2F0Iiwic2V0TWFuYWdlciIsIm1hbmFnZXIiLCJtb3VudCIsImNoaWxkcmVuIiwia2V5IiwibmV4dEtleSIsInF1ZXVlIiwicHVzaCIsInR5cGUiLCJ1cGRhdGUiLCJvcCIsImluZGV4IiwiZmluZEluZGV4IiwidW5tb3VudCIsIl9pbmhlcml0czIiLCJfY3JlYXRlQ2xhc3MyIiwidmFsdWUiLCJjb21wb25lbnREaWRNb3VudCIsImFjdGlvbiIsInBvcCIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJQcm92aWRlciIsIlZpZXciLCJzdHlsZSIsInN0eWxlcyIsImNvbnRhaW5lciIsImNvbGxhcHNhYmxlIiwicG9pbnRlckV2ZW50cyIsInByb3BzIiwicmVmIiwiQ29tcG9uZW50IiwiZGlzcGxheU5hbWUiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiZmxleCJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1BvcnRhbC9Qb3J0YWxIb3N0LnRzeCJdLCJzb3Vy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