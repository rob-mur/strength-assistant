{"version":3,"names":["_ExerciseRepoFactory","require","ExerciseRepo","exports","_classCallCheck2","default","delegate","ExerciseRepoFactory","getInstance","_createClass2","key","value","_addExercise","_asyncToGenerator2","userId","exercise","addExercise","_x","_x2","apply","arguments","getExercises","subscribeToExercises","uid","callback","_deleteExercise","exerciseId","deleteExercise","_x3","_x4","_getExerciseById","getExerciseById","_x5","_x6","isSyncing","isOnline","getPendingChangesCount","_forceSync","forceSync","hasErrors","getErrorMessage","getCurrentDataSource","instance"],"sources":["ExerciseRepo.ts"],"sourcesContent":["import { IExerciseRepo } from \"./IExerciseRepo\";\nimport { ExerciseRepoFactory } from \"./ExerciseRepoFactory\";\n\n/**\n * Factory-based ExerciseRepo that delegates to appropriate implementation\n * Uses ExerciseRepoFactory to determine whether to use Firebase or Supabase\n * \n * This class maintains backwards compatibility while enabling feature flag switching\n */\nexport class ExerciseRepo implements IExerciseRepo {\n\tprivate static instance: ExerciseRepo;\n\tprivate delegate: IExerciseRepo;\n\n\tprivate constructor() {\n\t\t// Initialize delegate - will be refreshed on each getInstance() call\n\t\tthis.delegate = ExerciseRepoFactory.getInstance();\n\t}\n\n\tpublic static getInstance(): ExerciseRepo {\n\t\tif (!ExerciseRepo.instance) {\n\t\t\tExerciseRepo.instance = new ExerciseRepo();\n\t\t}\n\t\t// Always refresh the delegate to respect environment variable changes\n\t\t// This ensures the repo uses the correct implementation even if USE_SUPABASE_DATA changes at runtime\n\t\tExerciseRepo.instance.delegate = ExerciseRepoFactory.getInstance();\n\t\treturn ExerciseRepo.instance;\n\t}\n\n\t/**\n\t * Add a new exercise - delegates to the configured implementation\n\t */\n\tasync addExercise(userId: string, exercise: import(\"../models/Exercise\").ExerciseInput): Promise<void> {\n\t\treturn this.delegate.addExercise(userId, exercise);\n\t}\n\n\t/**\n\t * Get all exercises as a reactive observable - delegates to the configured implementation\n\t */\n\tgetExercises(userId: string): import(\"@legendapp/state\").Observable<import(\"../models/Exercise\").Exercise[]> {\n\t\treturn this.delegate.getExercises(userId);\n\t}\n\n\t/**\n\t * Subscribe to real-time exercise updates - delegates to the configured implementation\n\t */\n\tsubscribeToExercises(uid: string, callback: (exercises: import(\"../models/Exercise\").Exercise[]) => void): () => void {\n\t\treturn this.delegate.subscribeToExercises(uid, callback);\n\t}\n\n\t/**\n\t * Delete an exercise - delegates to the configured implementation\n\t */\n\tasync deleteExercise(userId: string, exerciseId: string): Promise<void> {\n\t\treturn this.delegate.deleteExercise(userId, exerciseId);\n\t}\n\n\t/**\n\t * Get a specific exercise by ID - delegates to the configured implementation\n\t */\n\tasync getExerciseById(exerciseId: string, userId: string): Promise<import(\"../models/Exercise\").Exercise | undefined> {\n\t\treturn this.delegate.getExerciseById(exerciseId, userId);\n\t}\n\n\t// Offline-first capabilities - delegates to the configured implementation\n\t/**\n\t * Check if the repository is currently syncing data\n\t */\n\tisSyncing(): boolean {\n\t\treturn this.delegate.isSyncing();\n\t}\n\n\t/**\n\t * Check if the repository is currently online\n\t */\n\tisOnline(): boolean {\n\t\treturn this.delegate.isOnline();\n\t}\n\n\t/**\n\t * Get the count of pending changes that need to be synced\n\t */\n\tgetPendingChangesCount(): number {\n\t\treturn this.delegate.getPendingChangesCount();\n\t}\n\n\t/**\n\t * Force synchronization of pending changes\n\t */\n\tasync forceSync(): Promise<void> {\n\t\treturn this.delegate.forceSync();\n\t}\n\n\t/**\n\t * Check if there are any sync errors\n\t */\n\thasErrors(): boolean {\n\t\treturn this.delegate.hasErrors();\n\t}\n\n\t/**\n\t * Get the current error message if any\n\t */\n\tgetErrorMessage(): string | null {\n\t\treturn this.delegate.getErrorMessage();\n\t}\n\n\t/**\n\t * Get the current data source being used\n\t */\n\tgetCurrentDataSource(): 'firebase' | 'supabase' {\n\t\treturn ExerciseRepoFactory.getCurrentDataSource();\n\t}\n}\n"],"mappings":"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","ignoreList":[]}