{"version":3,"names":["_invariant","_interopRequireDefault","require","_reactNative","nativeEmitterSubscriptionKey","LegacyEventEmitter","exports","nativeModule","_classCallCheck2","default","_listenerCount","__expo_module_name__","_nativeModule","_eventEmitter","NativeEventEmitter","_createClass2","key","value","addListener","eventName","listener","_this","Platform","OS","startObserving","nativeEmitterSubscription","subscription","_defineProperty2","remove","removeSubscription","removeAllListeners","removedListenerCount","listenerCount","listeners","length","invariant","stopObserving","state","emit","_this$_eventEmitter","_len","arguments","params","Array","_key","apply","concat"],"sources":["LegacyEventEmitter.ts"],"sourcesContent":["import invariant from 'invariant';\nimport { NativeEventEmitter, Platform } from 'react-native';\n\nimport { EventSubscription } from './EventEmitter';\n\nconst nativeEmitterSubscriptionKey = '@@nativeEmitterSubscription@@' as const;\n\ntype SubscriptionState = {\n  // NOTE(@kitten): Since this is legacy/deprecated, we don't need to be exact about types here\n  [Key in typeof nativeEmitterSubscriptionKey]?: {\n    remove?(): void;\n  };\n} & EventSubscription;\n\ntype NativeModule = {\n  __expo_module_name__?: string;\n  startObserving?: () => void;\n  stopObserving?: () => void;\n\n  // Erase these types as they would conflict with the new NativeModule type.\n  // This EventEmitter is deprecated anyway.\n  addListener?: any;\n  removeListeners?: any;\n};\n\n/**\n * @deprecated Deprecated in favor of `EventEmitter`.\n */\nexport class LegacyEventEmitter {\n  _listenerCount = 0;\n\n  // @ts-expect-error\n  _nativeModule: NativeModule;\n\n  // @ts-expect-error\n  _eventEmitter: NativeEventEmitter;\n\n  constructor(nativeModule: NativeModule) {\n    // If the native module is a new module, just return it back as it's already an event emitter.\n    // This is for backwards compatibility until we stop using this legacy class in other packages.\n    if (nativeModule.__expo_module_name__) {\n      // @ts-expect-error\n      return nativeModule;\n    }\n    this._nativeModule = nativeModule;\n    this._eventEmitter = new NativeEventEmitter(nativeModule as any);\n  }\n\n  addListener<T>(eventName: string, listener: (event: T) => void): EventSubscription {\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.startObserving) {\n      this._nativeModule.startObserving();\n    }\n\n    this._listenerCount++;\n    const nativeEmitterSubscription = this._eventEmitter.addListener(eventName, listener);\n    const subscription: SubscriptionState = {\n      [nativeEmitterSubscriptionKey]: nativeEmitterSubscription,\n      remove: () => {\n        this.removeSubscription(subscription);\n      },\n    };\n    return subscription;\n  }\n\n  removeAllListeners(eventName: string): void {\n    // @ts-ignore: the EventEmitter interface has been changed in react-native@0.64.0\n    const removedListenerCount = this._eventEmitter.listenerCount\n      ? // @ts-ignore: this is available since 0.64\n        this._eventEmitter.listenerCount(eventName)\n      : // @ts-ignore: this is available in older versions\n        this._eventEmitter.listeners(eventName).length;\n    this._eventEmitter.removeAllListeners(eventName);\n    this._listenerCount -= removedListenerCount;\n    invariant(\n      this._listenerCount >= 0,\n      `EventEmitter must have a non-negative number of listeners`\n    );\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  removeSubscription(subscription: EventSubscription): void {\n    const state = subscription as SubscriptionState;\n    const nativeEmitterSubscription = state[nativeEmitterSubscriptionKey];\n    if (!nativeEmitterSubscription) {\n      return;\n    }\n\n    if ('remove' in nativeEmitterSubscription) {\n      nativeEmitterSubscription.remove?.();\n    }\n    this._listenerCount--;\n\n    // Ensure that the emitter's internal state remains correct even if `removeSubscription` is\n    // called again with the same subscription\n    delete state[nativeEmitterSubscriptionKey];\n\n    // Release closed-over references to the emitter\n    subscription.remove = () => {};\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  emit(eventName: string, ...params: any[]): void {\n    this._eventEmitter.emit(eventName, ...params);\n  }\n}\n"],"mappings":"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","ignoreList":[]}