1648ff9ad22488f02a8e9da27a7284d2
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ToggleButtonRow = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _ToggleButton = _interopRequireDefault(require("./ToggleButton"));
var _ToggleButtonGroup = _interopRequireDefault(require("./ToggleButtonGroup"));
function _interopRequireDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}
function _interopRequireWildcard(e, t) {
  if ("function" == typeof WeakMap) var r = new WeakMap(),
    n = new WeakMap();
  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {
    if (!t && e && e.__esModule) return e;
    var o,
      i,
      f = {
        __proto__: null,
        default: e
      };
    if (null === e || "object" != typeof e && "function" != typeof e) return f;
    if (o = t ? n : r) {
      if (o.has(e)) return o.get(e);
      o.set(e, f);
    }
    for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]);
    return f;
  })(e, t);
}
var ToggleButtonRow = function ToggleButtonRow(_ref) {
  var value = _ref.value,
    onValueChange = _ref.onValueChange,
    children = _ref.children,
    style = _ref.style;
  var count = React.Children.count(children);
  return React.createElement(_ToggleButtonGroup.default, {
    value: value,
    onValueChange: onValueChange
  }, React.createElement(_reactNative.View, {
    style: [styles.row, style]
  }, React.Children.map(children, function (child, i) {
    if (child && child.type === _ToggleButton.default) {
      return React.cloneElement(child, {
        style: [styles.button, i === 0 ? styles.first : i === count - 1 ? styles.last : styles.middle, child.props.style]
      });
    }
    return child;
  })));
};
exports.ToggleButtonRow = ToggleButtonRow;
ToggleButtonRow.displayName = 'ToggleButton.Row';
var styles = _reactNative.StyleSheet.create({
  row: {
    flexDirection: 'row'
  },
  button: {
    borderWidth: _reactNative.StyleSheet.hairlineWidth
  },
  first: {
    borderTopRightRadius: 0,
    borderBottomRightRadius: 0
  },
  middle: {
    borderRadius: 0,
    borderLeftWidth: 0
  },
  last: {
    borderLeftWidth: 0,
    borderTopLeftRadius: 0,
    borderBottomLeftRadius: 0
  }
});
var _default = exports.default = ToggleButtonRow;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9Ub2dnbGVCdXR0b24iLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX1RvZ2dsZUJ1dHRvbkdyb3VwIiwiZSIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidCIsIldlYWtNYXAiLCJyIiwibiIsIm8iLCJpIiwiZiIsIl9fcHJvdG9fXyIsImhhcyIsImdldCIsInNldCIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiVG9nZ2xlQnV0dG9uUm93IiwiX3JlZiIsInZhbHVlIiwib25WYWx1ZUNoYW5nZSIsImNoaWxkcmVuIiwic3R5bGUiLCJjb3VudCIsIkNoaWxkcmVuIiwiY3JlYXRlRWxlbWVudCIsIlZpZXciLCJzdHlsZXMiLCJyb3ciLCJtYXAiLCJjaGlsZCIsInR5cGUiLCJjbG9uZUVsZW1lbnQiLCJidXR0b24iLCJmaXJzdCIsImxhc3QiLCJtaWRkbGUiLCJwcm9wcyIsImV4cG9ydHMiLCJkaXNwbGF5TmFtZSIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJmbGV4RGlyZWN0aW9uIiwiYm9yZGVyV2lkdGgiLCJoYWlybGluZVdpZHRoIiwiYm9yZGVyVG9wUmlnaHRSYWRpdXMiLCJib3JkZXJCb3R0b21SaWdodFJhZGl1cyIsImJvcmRlclJhZGl1cyIsImJvcmRlckxlZnRXaWR0aCIsImJvcmRlclRvcExlZnRSYWRpdXMiLCJib3JkZXJCb3R0b21MZWZ0UmFkaXVzIiwiX2RlZmF1bHQiXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9Ub2dnbGVCdXR0b24vVG9nZ2xlQnV0dG9uUm93LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBQUEsS0FBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFB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