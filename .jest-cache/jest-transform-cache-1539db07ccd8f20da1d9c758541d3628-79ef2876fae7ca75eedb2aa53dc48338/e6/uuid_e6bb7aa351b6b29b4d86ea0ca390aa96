6d590a02bcb52a08ba7c3ce50d90ce7e
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _bytesToUuid = _interopRequireDefault(require("./lib/bytesToUuid"));
var _uuid = require("./uuid.types");
function uuidv4() {
  var _globalThis$expo;
  var nativeUuidv4 = globalThis == null || (_globalThis$expo = globalThis.expo) == null ? void 0 : _globalThis$expo.uuidv4;
  if (!nativeUuidv4) {
    throw Error("Native UUID version 4 generator implementation wasn't found in `expo-modules-core`");
  }
  return nativeUuidv4();
}
function uuidv5(name, namespace) {
  var _globalThis$expo2;
  var parsedNamespace = Array.isArray(namespace) && namespace.length === 16 ? (0, _bytesToUuid.default)(namespace) : namespace;
  if (Array.isArray(parsedNamespace)) {
    throw new Error('`namespace` must be a valid UUID string or an Array of 16 byte values');
  }
  var nativeUuidv5 = globalThis == null || (_globalThis$expo2 = globalThis.expo) == null ? void 0 : _globalThis$expo2.uuidv5;
  if (!nativeUuidv5) {
    throw Error("Native UUID type 5 generator implementation wasn't found in `expo-modules-core`");
  }
  return nativeUuidv5(name, parsedNamespace);
}
var uuid = {
  v4: uuidv4,
  v5: uuidv5,
  namespace: _uuid.Uuidv5Namespace
};
var _default = exports.default = uuid;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfYnl0ZXNUb1V1aWQiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl91dWlkIiwidXVpZHY0IiwiX2dsb2JhbFRoaXMkZXhwbyIsIm5hdGl2ZVV1aWR2NCIsImdsb2JhbFRoaXMiLCJleHBvIiwiRXJyb3IiLCJ1dWlkdjUiLCJuYW1lIiwibmFtZXNwYWNlIiwiX2dsb2JhbFRoaXMkZXhwbzIiLCJwYXJzZWROYW1lc3BhY2UiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJieXRlc1RvVXVpZCIsIm5hdGl2ZVV1aWR2NSIsInV1aWQiLCJ2NCIsInY1IiwiVXVpZHY1TmFtZXNwYWNlIiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbInV1aWQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJ5dGVzVG9VdWlkIGZyb20gJy4vbGliL2J5dGVzVG9VdWlkJztcbmltcG9ydCB7IFVVSUQsIFV1aWR2NU5hbWVzcGFjZSB9IGZyb20gJy4vdXVpZC50eXBlcyc7XG5cbmZ1bmN0aW9uIHV1aWR2NCgpOiBzdHJpbmcge1xuICBjb25zdCBuYXRpdmVVdWlkdjQgPSBnbG9iYWxUaGlzPy5leHBvPy51dWlkdjQ7XG5cbiAgaWYgKCFuYXRpdmVVdWlkdjQpIHtcbiAgICB0aHJvdyBFcnJvcihcbiAgICAgIFwiTmF0aXZlIFVVSUQgdmVyc2lvbiA0IGdlbmVyYXRvciBpbXBsZW1lbnRhdGlvbiB3YXNuJ3QgZm91bmQgaW4gYGV4cG8tbW9kdWxlcy1jb3JlYFwiXG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiBuYXRpdmVVdWlkdjQoKTtcbn1cblxuZnVuY3Rpb24gdXVpZHY1KG5hbWU6IHN0cmluZywgbmFtZXNwYWNlOiBzdHJpbmcgfCBudW1iZXJbXSkge1xuICBjb25zdCBwYXJzZWROYW1lc3BhY2UgPVxuICAgIEFycmF5LmlzQXJyYXkobmFtZXNwYWNlKSAmJiBuYW1lc3BhY2UubGVuZ3RoID09PSAxNiA/IGJ5dGVzVG9VdWlkKG5hbWVzcGFjZSkgOiBuYW1lc3BhY2U7XG5cbiAgLy8gSWYgcGFyc2VkIG5hbWVzcGFjZSBpcyBzdGlsbCBhbiBhcnJheSBpdCBtZWFucyB0aGF0IGl0IHdhc24ndCB2YWxpZFxuICBpZiAoQXJyYXkuaXNBcnJheShwYXJzZWROYW1lc3BhY2UpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdgbmFtZXNwYWNlYCBtdXN0IGJlIGEgdmFsaWQgVVVJRCBzdHJpbmcgb3IgYW4gQXJyYXkgb2YgMTYgYnl0ZSB2YWx1ZXMnKTtcbiAgfVxuXG4gIGNvbnN0IG5hdGl2ZVV1aWR2NSA9IGdsb2JhbFRoaXM/LmV4cG8/LnV1aWR2NTtcblxuICBpZiAoIW5hdGl2ZVV1aWR2NSkge1xuICAgIHRocm93IEVycm9yKFwiTmF0aXZlIFVVSUQgdHlwZSA1IGdlbmVyYXRvciBpbXBsZW1lbnRhdGlvbiB3YXNuJ3QgZm91bmQgaW4gYGV4cG8tbW9kdWxlcy1jb3JlYFwiKTtcbiAgfVxuXG4gIHJldHVybiBuYXRpdmVVdWlkdjUobmFtZSwgcGFyc2VkTmFtZXNwYWNlKTtcbn1cblxuY29uc3QgdXVpZDogVVVJRCA9IHtcbiAgdjQ6IHV1aWR2NCxcbiAgdjU6IHV1aWR2NSxcbiAgbmFtZXNwYWNlOiBVdWlkdjVOYW1lc3BhY2UsXG59O1xuZXhwb3J0IGRlZmF1bHQgdXVpZDtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxJQUFBQSxZQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxLQUFBLEdBQUFELE9BQUE7QUFFQSxTQUFTRSxNQUFNQSxDQUFBLEVBQVc7RUFBQSxJQUFBQyxnQkFBQTtFQUN4QixJQUFNQyxZQUFZLEdBQUdDLFVBQVUsYUFBQUYsZ0JBQUEsR0FBVkUsVUFBVSxDQUFFQyxJQUFJLHFCQUFoQkgsZ0JBQUEsQ0FBa0JELE1BQU07RUFFN0MsSUFBSSxDQUFDRSxZQUFZLEVBQUU7SUFDakIsTUFBTUcsS0FBSyxDQUNULG9GQUNGLENBQUM7RUFDSDtFQUVBLE9BQU9ILFlBQVksQ0FBQyxDQUFDO0FBQ3ZCO0FBRUEsU0FBU0ksTUFBTUEsQ0FBQ0MsSUFBWSxFQUFFQyxTQUE0QixFQUFFO0VBQUEsSUFBQUMsaUJBQUE7RUFDMUQsSUFBTUMsZUFBZSxHQUNuQkMsS0FBSyxDQUFDQyxPQUFPLENBQUNKLFNBQVMsQ0FBQyxJQUFJQSxTQUFTLENBQUNLLE1BQU0sS0FBSyxFQUFFLEdBQUcsSUFBQUMsb0JBQVcsRUFBQ04sU0FBUyxDQUFDLEdBQUdBLFNBQVM7RUFHMUYsSUFBSUcsS0FBSyxDQUFDQyxPQUFPLENBQUNGLGVBQWUsQ0FBQyxFQUFFO0lBQ2xDLE1BQU0sSUFBSUwsS0FBSyxDQUFDLHVFQUF1RSxDQUFDO0VBQzFGO0VBRUEsSUFBTVUsWUFBWSxHQUFHWixVQUFVLGFBQUFNLGlCQUFBLEdBQVZOLFVBQVUsQ0FBRUMsSUFBSSxxQkFBaEJLLGlCQUFBLENBQWtCSCxNQUFNO0VBRTdDLElBQUksQ0FBQ1MsWUFBWSxFQUFFO0lBQ2pCLE1BQU1WLEtBQUssQ0FBQyxpRkFBaUYsQ0FBQztFQUNoRztFQUVBLE9BQU9VLFlBQVksQ0FBQ1IsSUFBSSxFQUFFRyxlQUFlLENBQUM7QUFDNUM7QUFFQSxJQUFNTSxJQUFVLEdBQUc7RUFDakJDLEVBQUUsRUFBRWpCLE1BQU07RUFDVmtCLEVBQUUsRUFBRVosTUFBTTtFQUNWRSxTQUFTLEVBQUVXO0FBQ2IsQ0FBQztBQUFDLElBQUFDLFFBQUEsR0FBQUMsT0FBQSxDQUFBQyxPQUFBLEdBQ2FOLElBQUkiLCJpZ25vcmVMaXN0IjpbXX0=