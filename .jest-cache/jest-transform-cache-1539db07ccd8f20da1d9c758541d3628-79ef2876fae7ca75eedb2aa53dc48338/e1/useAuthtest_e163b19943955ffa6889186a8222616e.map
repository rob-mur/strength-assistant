{"version":3,"names":["_getJestObj","mock","initAuth","jest","fn","onAuthStateChangedWeb","signInAnonymouslyWeb","createAccountWeb","signInWeb","signOutWeb","getAuthInstance","__esModule","onAuthStateChangedNative","signInAnonymouslyNative","createAccountNative","signInNative","signOutNative","_interopRequireDefault","require","_asyncToGenerator2","_reactNative","_useAuth","AuthWeb","_interopRequireWildcard","AuthNative","e","t","WeakMap","r","n","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_require2","mockWebAuthFunctions","mockNativeAuthFunctions","mockedAuthWeb","mockedAuthNative","describe","originalEnv","process","env","beforeEach","clearAllMocks","assign","CHROME_TEST","CI","NODE_ENV","afterEach","test","_renderHook","renderHook","useAuth","result","expect","current","user","toBeNull","loading","toBe","error","_renderHook2","clearError","_renderHook3","act","signInAnonymously","toEqual","uid","email","isAnonymous","not","toHaveBeenCalled","_renderHook4","mockRejectedValue","Error","signIn","code","message","_renderHook5","_renderHook6","mockUser","mockResolvedValue","_renderHook7","createAccount","toHaveBeenCalledWith","testError","_renderHook8","_renderHook9","_renderHook0","undefined","_renderHook1","signOut","_renderHook10","_renderHook11","_renderHook12","_require","Platform","OS","_renderHook13","_renderHook14","_renderHook15","_renderHook16","mockImplementation","_renderHook17","Promise","resolve","setTimeout","mockUnsubscribe","mockReturnValue","_renderHook18","unmount","_renderHook19","_renderHook20","_renderHook21"],"sources":["useAuth-test.tsx"],"sourcesContent":["import { renderHook, act } from \"@testing-library/react-native\";\n\n// Mock auth functions for comprehensive testing\nconst mockWebAuthFunctions = {\n  initAuth: jest.fn(),\n  onAuthStateChangedWeb: jest.fn(),\n  signInAnonymouslyWeb: jest.fn(),\n  createAccountWeb: jest.fn(),\n  signInWeb: jest.fn(),\n  signOutWeb: jest.fn(),\n  getAuthInstance: jest.fn(),\n};\n\nconst mockNativeAuthFunctions = {\n  initAuth: jest.fn(),\n  onAuthStateChangedNative: jest.fn(),\n  signInAnonymouslyNative: jest.fn(),\n  createAccountNative: jest.fn(),\n  signInNative: jest.fn(),\n  signOutNative: jest.fn(),\n  getAuthInstance: jest.fn(),\n};\n\njest.mock(\"@/lib/data/firebase/auth.web\", () => ({\n  initAuth: jest.fn(),\n  onAuthStateChangedWeb: jest.fn(),\n  signInAnonymouslyWeb: jest.fn(),\n  createAccountWeb: jest.fn(),\n  signInWeb: jest.fn(),\n  signOutWeb: jest.fn(),\n  getAuthInstance: jest.fn(),\n  __esModule: true\n}));\n\njest.mock(\"@/lib/data/firebase/auth.native\", () => ({\n  initAuth: jest.fn(),\n  onAuthStateChangedNative: jest.fn(),\n  signInAnonymouslyNative: jest.fn(),\n  createAccountNative: jest.fn(),\n  signInNative: jest.fn(),\n  signOutNative: jest.fn(),\n  getAuthInstance: jest.fn(),\n  __esModule: true\n}));\n\n// Mock Platform will be handled by jest.setup.js\n\n// Import after mocks are set up\nimport { useAuth } from \"@/lib/hooks/useAuth\";\nimport * as AuthWeb from \"@/lib/data/firebase/auth.web\";\nimport * as AuthNative from \"@/lib/data/firebase/auth.native\";\n\n// Get references to mocked functions\nconst mockedAuthWeb = AuthWeb as jest.Mocked<typeof AuthWeb>;\nconst mockedAuthNative = AuthNative as jest.Mocked<typeof AuthNative>;\n\ndescribe(\"useAuth\", () => {\n  const originalEnv = process.env;\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    \n    // Reset process.env to avoid test environment detection\n    process.env = { ...originalEnv };\n    delete (process.env as any).CHROME_TEST;\n    delete (process.env as any).CI;\n    delete (process.env as any).NODE_ENV;\n  });\n\n  afterEach(() => {\n    process.env = originalEnv;\n  });\n\n  test(\"initializes with loading state\", () => {\n    const { result } = renderHook(() => useAuth());\n    \n    expect(result.current.user).toBeNull();\n    expect(result.current.loading).toBe(true);\n    expect(result.current.error).toBeNull();\n  });\n\n  test(\"clearError function is available\", () => {\n    const { result } = renderHook(() => useAuth());\n    \n    expect(typeof result.current.clearError).toBe(\"function\");\n  });\n\n  test(\"signInAnonymously creates mock user in test environment\", async () => {\n    // Set test environment\n    (process.env as any).NODE_ENV = 'test';\n    \n    const { result } = renderHook(() => useAuth());\n    \n    await act(async () => {\n      await result.current.signInAnonymously();\n    });\n    \n    expect(result.current.user).toEqual({\n      uid: \"test-user-chrome\",\n      email: null,\n      isAnonymous: true,\n    });\n    expect(result.current.loading).toBe(false);\n    expect(mockedAuthWeb.signInAnonymouslyWeb).not.toHaveBeenCalled();\n  });\n\n  test(\"clearError clears the error state\", async () => {\n    const { result } = renderHook(() => useAuth());\n    \n    // Simulate an error state by calling signIn with invalid credentials\n    mockedAuthWeb.signInWeb.mockRejectedValue(new Error(\"Invalid credentials\"));\n    \n    await act(async () => {\n      await result.current.signIn(\"test@example.com\", \"wrongpassword\");\n    });\n    \n    // Verify error state is set\n    expect(result.current.error).toEqual({\n      code: \"unknown\",\n      message: \"Invalid credentials\"\n    });\n    \n    // Clear the error\n    act(() => {\n      result.current.clearError();\n    });\n    \n    expect(result.current.error).toBeNull();\n  });\n\n  test(\"handles CHROME_TEST environment variable\", () => {\n    (process.env as any).CHROME_TEST = 'true';\n    \n    const { result } = renderHook(() => useAuth());\n    \n    // Should set error state (no user) in test environment\n    expect(result.current.user).toBeNull();\n    expect(result.current.loading).toBe(false);\n    expect(result.current.error).toBeNull();\n  });\n\n  test(\"handles CI environment variable\", () => {\n    (process.env as any).CI = 'true';\n    \n    const { result } = renderHook(() => useAuth());\n    \n    // Should set error state (no user) in CI environment\n    expect(result.current.user).toBeNull();\n    expect(result.current.loading).toBe(false);\n    expect(result.current.error).toBeNull();\n  });\n\n  test(\"createAccount calls correct platform function\", async () => {\n    const mockUser = { uid: \"test-uid\", email: \"test@example.com\", isAnonymous: false } as any;\n    mockedAuthWeb.createAccountWeb.mockResolvedValue(mockUser);\n    \n    const { result } = renderHook(() => useAuth());\n    \n    await act(async () => {\n      await result.current.createAccount(\"test@example.com\", \"password123\");\n    });\n    \n    expect(mockedAuthWeb.createAccountWeb).toHaveBeenCalledWith(\"test@example.com\", \"password123\");\n  });\n\n  test(\"createAccount handles errors\", async () => {\n    const testError = { code: \"auth/email-already-in-use\", message: \"Email already in use\" };\n    mockedAuthWeb.createAccountWeb.mockRejectedValue(testError);\n    \n    const { result } = renderHook(() => useAuth());\n    \n    await act(async () => {\n      await result.current.createAccount(\"test@example.com\", \"password123\");\n    });\n    \n    expect(result.current.error).toEqual({\n      code: \"auth/email-already-in-use\",\n      message: \"Email already in use\"\n    });\n    expect(result.current.loading).toBe(false);\n  });\n\n  test(\"signIn calls correct platform function\", async () => {\n    const mockUser = { uid: \"test-uid\", email: \"test@example.com\", isAnonymous: false } as any;\n    mockedAuthWeb.signInWeb.mockResolvedValue(mockUser);\n    \n    const { result } = renderHook(() => useAuth());\n    \n    await act(async () => {\n      await result.current.signIn(\"test@example.com\", \"password123\");\n    });\n    \n    expect(mockedAuthWeb.signInWeb).toHaveBeenCalledWith(\"test@example.com\", \"password123\");\n  });\n\n  test(\"signIn handles errors\", async () => {\n    const testError = { code: \"auth/wrong-password\", message: \"Wrong password\" };\n    mockedAuthWeb.signInWeb.mockRejectedValue(testError);\n    \n    const { result } = renderHook(() => useAuth());\n    \n    await act(async () => {\n      await result.current.signIn(\"test@example.com\", \"wrongpassword\");\n    });\n    \n    expect(result.current.error).toEqual({\n      code: \"auth/wrong-password\",\n      message: \"Wrong password\"\n    });\n    expect(result.current.loading).toBe(false);\n  });\n\n  test(\"signOut calls correct platform function\", async () => {\n    mockedAuthWeb.signOutWeb.mockResolvedValue(undefined);\n    \n    const { result } = renderHook(() => useAuth());\n    \n    await act(async () => {\n      await result.current.signOut();\n    });\n    \n    expect(mockedAuthWeb.signOutWeb).toHaveBeenCalledWith();\n  });\n\n  test(\"signOut handles errors\", async () => {\n    const testError = { code: \"auth/network-error\", message: \"Network error\" };\n    mockedAuthWeb.signOutWeb.mockRejectedValue(testError);\n    \n    const { result } = renderHook(() => useAuth());\n    \n    await act(async () => {\n      await result.current.signOut();\n    });\n    \n    expect(result.current.error).toEqual({\n      code: \"auth/network-error\",\n      message: \"Network error\"\n    });\n    expect(result.current.loading).toBe(false);\n  });\n\n  test(\"signInAnonymously in CHROME_TEST environment\", async () => {\n    (process.env as any).CHROME_TEST = 'true';\n    \n    const { result } = renderHook(() => useAuth());\n    \n    await act(async () => {\n      await result.current.signInAnonymously();\n    });\n    \n    expect(result.current.user).toEqual({\n      uid: \"test-user-chrome\",\n      email: null,\n      isAnonymous: true,\n    });\n    expect(result.current.loading).toBe(false);\n    expect(mockedAuthWeb.signInAnonymouslyWeb).not.toHaveBeenCalled();\n  });\n\n  test(\"signInAnonymously in CI environment\", async () => {\n    (process.env as any).CI = 'true';\n    \n    const { result } = renderHook(() => useAuth());\n    \n    await act(async () => {\n      await result.current.signInAnonymously();\n    });\n    \n    expect(result.current.user).toEqual({\n      uid: \"test-user-chrome\",\n      email: null,\n      isAnonymous: true,\n    });\n    expect(result.current.loading).toBe(false);\n    expect(mockedAuthWeb.signInAnonymouslyWeb).not.toHaveBeenCalled();\n  });\n\n  describe(\"Native Platform Tests\", () => {\n    const { Platform } = require(\"react-native\");\n\n    beforeEach(() => {\n      Platform.OS = \"ios\"; // Set to native platform\n      jest.clearAllMocks();\n    });\n\n    afterEach(() => {\n      Platform.OS = \"web\"; // Reset to default\n    });\n\n    test(\"createAccount calls native function on iOS\", async () => {\n      const mockUser = { uid: \"test-uid\", email: \"test@example.com\", isAnonymous: false } as any;\n      mockedAuthNative.createAccountNative.mockResolvedValue(mockUser);\n      \n      const { result } = renderHook(() => useAuth());\n      \n      await act(async () => {\n        await result.current.createAccount(\"test@example.com\", \"password123\");\n      });\n      \n      expect(mockedAuthNative.createAccountNative).toHaveBeenCalledWith(\"test@example.com\", \"password123\");\n      expect(mockedAuthWeb.createAccountWeb).not.toHaveBeenCalled();\n    });\n\n    test(\"signIn calls native function on iOS\", async () => {\n      const mockUser = { uid: \"test-uid\", email: \"test@example.com\", isAnonymous: false } as any;\n      mockedAuthNative.signInNative.mockResolvedValue(mockUser);\n      \n      const { result } = renderHook(() => useAuth());\n      \n      await act(async () => {\n        await result.current.signIn(\"test@example.com\", \"password123\");\n      });\n      \n      expect(mockedAuthNative.signInNative).toHaveBeenCalledWith(\"test@example.com\", \"password123\");\n      expect(mockedAuthWeb.signInWeb).not.toHaveBeenCalled();\n    });\n\n    test(\"signOut calls native function on iOS\", async () => {\n      mockedAuthNative.signOutNative.mockResolvedValue(undefined);\n      \n      const { result } = renderHook(() => useAuth());\n      \n      await act(async () => {\n        await result.current.signOut();\n      });\n      \n      expect(mockedAuthNative.signOutNative).toHaveBeenCalledWith();\n      expect(mockedAuthWeb.signOutWeb).not.toHaveBeenCalled();\n    });\n\n    test(\"signInAnonymously calls native function on iOS\", async () => {\n      const mockUser = { uid: \"test-uid\", email: null, isAnonymous: true } as any;\n      mockedAuthNative.signInAnonymouslyNative.mockResolvedValue(mockUser);\n      \n      const { result } = renderHook(() => useAuth());\n      \n      await act(async () => {\n        await result.current.signInAnonymously();\n      });\n      \n      expect(mockedAuthNative.signInAnonymouslyNative).toHaveBeenCalledWith();\n      expect(mockedAuthWeb.signInAnonymouslyWeb).not.toHaveBeenCalled();\n    });\n  });\n\n  describe(\"Auth Initialization and Error Scenarios\", () => {\n    beforeEach(() => {\n      jest.clearAllMocks();\n      // Clear test environment variables to test normal initialization\n      delete (process.env as any).CHROME_TEST;\n      delete (process.env as any).CI;\n      delete (process.env as any).NODE_ENV;\n    });\n\n    test(\"handles auth initialization timeout\", async () => {\n      // Mock initAuth to throw a timeout error  \n      mockedAuthWeb.initAuth.mockImplementation(() => {\n        throw new Error(\"Auth initialization timeout\");\n      });\n      \n      const { result } = renderHook(() => useAuth());\n      \n      // Wait for the initialization to complete\n      await act(async () => {\n        await new Promise(resolve => setTimeout(resolve, 100)); // Wait for initialization attempt\n      });\n      \n      // Should handle timeout gracefully\n      expect(result.current.user).toBeNull();\n      expect(result.current.loading).toBe(false);\n    });\n\n    test(\"handles auth listener setup\", async () => {\n      const mockUnsubscribe = jest.fn();\n      mockedAuthWeb.initAuth.mockReturnValue(undefined);\n      mockedAuthWeb.onAuthStateChangedWeb.mockReturnValue(mockUnsubscribe);\n      \n      const { unmount } = renderHook(() => useAuth());\n      \n      // Wait for initialization\n      await act(async () => {\n        await new Promise(resolve => setTimeout(resolve, 100));\n      });\n      \n      // Unmount to trigger cleanup\n      unmount();\n      \n      // The cleanup function should handle unsubscribe properly\n      // Note: The actual unsubscribe call happens in cleanup, which is tested by the error handling\n    });\n\n    test(\"handles signInAnonymously error in normal environment\", async () => {\n      const testError = { code: \"auth/network-error\", message: \"Network error\" };\n      mockedAuthWeb.signInAnonymouslyWeb.mockRejectedValue(testError);\n      \n      const { result } = renderHook(() => useAuth());\n      \n      await act(async () => {\n        await result.current.signInAnonymously();\n      });\n      \n      expect(result.current.error).toEqual({\n        code: \"auth/network-error\",\n        message: \"Network error\"\n      });\n      expect(result.current.loading).toBe(false);\n    });\n\n    test(\"handles auth functions with missing properties\", async () => {\n      const testError = { message: \"Auth error without code\" };\n      mockedAuthWeb.signInWeb.mockRejectedValue(testError);\n      \n      const { result } = renderHook(() => useAuth());\n      \n      await act(async () => {\n        await result.current.signIn(\"test@example.com\", \"password\");\n      });\n      \n      expect(result.current.error).toEqual({\n        code: \"unknown\",\n        message: \"Auth error without code\"\n      });\n    });\n\n    test(\"handles auth functions with no message\", async () => {\n      const testError = { code: \"auth/custom-error\" };\n      mockedAuthWeb.signOutWeb.mockRejectedValue(testError);\n      \n      const { result } = renderHook(() => useAuth());\n      \n      await act(async () => {\n        await result.current.signOut();\n      });\n      \n      expect(result.current.error).toEqual({\n        code: \"auth/custom-error\",\n        message: \"An error occurred\"\n      });\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}