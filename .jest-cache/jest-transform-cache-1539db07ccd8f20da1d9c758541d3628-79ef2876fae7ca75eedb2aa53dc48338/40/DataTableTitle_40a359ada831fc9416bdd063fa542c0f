02230af311619d65ead36cf5edff1de3
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["numeric", "children", "onPress", "sortDirection", "textStyle", "style", "theme", "numberOfLines", "maxFontSizeMultiplier"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.DataTableTitle = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _color = _interopRequireDefault(require("color"));
var _theming = require("../../core/theming");
var _MaterialCommunityIcon = _interopRequireDefault(require("../MaterialCommunityIcon"));
var _Text = _interopRequireDefault(require("../Typography/Text"));
function _interopRequireDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}
function _interopRequireWildcard(e, t) {
  if ("function" == typeof WeakMap) var r = new WeakMap(),
    n = new WeakMap();
  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {
    if (!t && e && e.__esModule) return e;
    var o,
      i,
      f = {
        __proto__: null,
        default: e
      };
    if (null === e || "object" != typeof e && "function" != typeof e) return f;
    if (o = t ? n : r) {
      if (o.has(e)) return o.get(e);
      o.set(e, f);
    }
    for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]);
    return f;
  })(e, t);
}
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
var DataTableTitle = function DataTableTitle(_ref) {
  var numeric = _ref.numeric,
    children = _ref.children,
    onPress = _ref.onPress,
    sortDirection = _ref.sortDirection,
    textStyle = _ref.textStyle,
    style = _ref.style,
    themeOverrides = _ref.theme,
    _ref$numberOfLines = _ref.numberOfLines,
    numberOfLines = _ref$numberOfLines === void 0 ? 1 : _ref$numberOfLines,
    maxFontSizeMultiplier = _ref.maxFontSizeMultiplier,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var _theme$colors;
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var _React$useRef = React.useRef(new _reactNative.Animated.Value(sortDirection === 'ascending' ? 0 : 1)),
    spinAnim = _React$useRef.current;
  React.useEffect(function () {
    _reactNative.Animated.timing(spinAnim, {
      toValue: sortDirection === 'ascending' ? 0 : 1,
      duration: 150,
      useNativeDriver: true
    }).start();
  }, [sortDirection, spinAnim]);
  var textColor = theme.isV3 ? theme.colors.onSurface : theme === null || theme === void 0 || (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.text;
  var alphaTextColor = (0, _color.default)(textColor).alpha(0.6).rgb().string();
  var spin = spinAnim.interpolate({
    inputRange: [0, 1],
    outputRange: ['0deg', '180deg']
  });
  var icon = sortDirection ? React.createElement(_reactNative.Animated.View, {
    style: [styles.icon, {
      transform: [{
        rotate: spin
      }]
    }]
  }, React.createElement(_MaterialCommunityIcon.default, {
    name: "arrow-up",
    size: 16,
    color: textColor,
    direction: _reactNative.I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'
  })) : null;
  return React.createElement(_reactNative.Pressable, _extends({
    disabled: !onPress,
    onPress: onPress
  }, rest, {
    style: [styles.container, numeric && styles.right, style]
  }), icon, React.createElement(_Text.default, {
    style: [styles.cell, {
      maxHeight: 24 * _reactNative.PixelRatio.getFontScale() * numberOfLines
    }, numberOfLines > 1 ? numeric ? _reactNative.I18nManager.getConstants().isRTL ? styles.leftText : styles.rightText : styles.centerText : {}, sortDirection ? styles.sorted : {
      color: alphaTextColor
    }, textStyle],
    numberOfLines: numberOfLines,
    maxFontSizeMultiplier: maxFontSizeMultiplier
  }, children));
};
exports.DataTableTitle = DataTableTitle;
DataTableTitle.displayName = 'DataTable.Title';
var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    flexDirection: 'row',
    alignContent: 'center',
    paddingVertical: 12
  },
  rightText: {
    textAlign: 'right'
  },
  leftText: {
    textAlign: 'left'
  },
  centerText: {
    textAlign: 'center'
  },
  right: {
    justifyContent: 'flex-end'
  },
  cell: {
    lineHeight: 24,
    fontSize: 12,
    fontWeight: '500',
    alignItems: 'center'
  },
  sorted: {
    marginLeft: 8
  },
  icon: {
    height: 24,
    justifyContent: 'center'
  }
});
var _default = exports.default = DataTableTitle;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,