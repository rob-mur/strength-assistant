{"version":3,"names":["_bytesToUuid","_interopRequireDefault","require","uuidToBytes","uuid","bytes","replace","hex","push","parseInt","stringToBytes","str","unescape","encodeURIComponent","Array","length","i","charCodeAt","_default","name","version","hashfunc","generateUUID","value","namespace","buf","offset","off","isArray","TypeError","concat","idx","bytesToUuid","_unused","DNS","URL"],"sources":["v35.ts"],"sourcesContent":["import bytesToUuid from './bytesToUuid';\n\nfunction uuidToBytes(uuid: string) {\n  // Note: We assume we're being passed a valid uuid string\n  const bytes: number[] = [];\n  uuid.replace(/[a-fA-F0-9]{2}/g, (hex: string) => {\n    bytes.push(parseInt(hex, 16));\n    return '';\n  });\n\n  return bytes;\n}\n\nfunction stringToBytes(str: string) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n  const bytes: number[] = new Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    bytes[i] = str.charCodeAt(i);\n  }\n  return bytes;\n}\n\nexport default function (\n  name: string,\n  version: number,\n  hashfunc: (bytes: number[] | string) => number[]\n) {\n  const generateUUID = function (\n    value: number[] | string,\n    namespace: number[] | string,\n    buf?: number[],\n    offset?: number\n  ): string {\n    const off = (buf && offset) || 0;\n\n    if (typeof value == 'string') value = stringToBytes(value);\n    if (typeof namespace == 'string') namespace = uuidToBytes(namespace);\n\n    if (!Array.isArray(value)) throw TypeError('value must be an array of bytes');\n    if (!Array.isArray(namespace) || namespace.length !== 16)\n      throw TypeError('namespace must be uuid string or an Array of 16 byte values');\n\n    // Per 4.3\n    const bytes = hashfunc(namespace.concat(value));\n    bytes[6] = (bytes[6] & 0x0f) | version;\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    if (buf) {\n      for (let idx = 0; idx < 16; ++idx) {\n        buf[off + idx] = bytes[idx];\n      }\n    }\n\n    return bytesToUuid(bytes);\n  };\n\n  // Function#name is not settable on some platforms (#270)\n  try {\n    generateUUID.name = name;\n  } catch {}\n\n  // Pre-defined namespaces, per Appendix C\n  generateUUID.DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\n  generateUUID.URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\n\n  return generateUUID;\n}\n"],"mappings":";;;;;AAAA,IAAAA,YAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,SAASC,WAAWA,CAACC,IAAY,EAAE;EAEjC,IAAMC,KAAe,GAAG,EAAE;EAC1BD,IAAI,CAACE,OAAO,CAAC,iBAAiB,EAAE,UAACC,GAAW,EAAK;IAC/CF,KAAK,CAACG,IAAI,CAACC,QAAQ,CAACF,GAAG,EAAE,EAAE,CAAC,CAAC;IAC7B,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,OAAOF,KAAK;AACd;AAEA,SAASK,aAAaA,CAACC,GAAW,EAAE;EAClCA,GAAG,GAAGC,QAAQ,CAACC,kBAAkB,CAACF,GAAG,CAAC,CAAC;EACvC,IAAMN,KAAe,GAAG,IAAIS,KAAK,CAACH,GAAG,CAACI,MAAM,CAAC;EAC7C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,GAAG,CAACI,MAAM,EAAEC,CAAC,EAAE,EAAE;IACnCX,KAAK,CAACW,CAAC,CAAC,GAAGL,GAAG,CAACM,UAAU,CAACD,CAAC,CAAC;EAC9B;EACA,OAAOX,KAAK;AACd;AAEe,SAAAa,SACbC,IAAY,EACZC,OAAe,EACfC,QAAgD,EAChD;EACA,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAChBC,KAAwB,EACxBC,SAA4B,EAC5BC,GAAc,EACdC,MAAe,EACP;IACR,IAAMC,GAAG,GAAIF,GAAG,IAAIC,MAAM,IAAK,CAAC;IAEhC,IAAI,OAAOH,KAAK,IAAI,QAAQ,EAAEA,KAAK,GAAGb,aAAa,CAACa,KAAK,CAAC;IAC1D,IAAI,OAAOC,SAAS,IAAI,QAAQ,EAAEA,SAAS,GAAGrB,WAAW,CAACqB,SAAS,CAAC;IAEpE,IAAI,CAACV,KAAK,CAACc,OAAO,CAACL,KAAK,CAAC,EAAE,MAAMM,SAAS,CAAC,iCAAiC,CAAC;IAC7E,IAAI,CAACf,KAAK,CAACc,OAAO,CAACJ,SAAS,CAAC,IAAIA,SAAS,CAACT,MAAM,KAAK,EAAE,EACtD,MAAMc,SAAS,CAAC,6DAA6D,CAAC;IAGhF,IAAMxB,KAAK,GAAGgB,QAAQ,CAACG,SAAS,CAACM,MAAM,CAACP,KAAK,CAAC,CAAC;IAC/ClB,KAAK,CAAC,CAAC,CAAC,GAAIA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAIe,OAAO;IACtCf,KAAK,CAAC,CAAC,CAAC,GAAIA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAI,IAAI;IAEnC,IAAIoB,GAAG,EAAE;MACP,KAAK,IAAIM,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,EAAE,EAAE,EAAEA,GAAG,EAAE;QACjCN,GAAG,CAACE,GAAG,GAAGI,GAAG,CAAC,GAAG1B,KAAK,CAAC0B,GAAG,CAAC;MAC7B;IACF;IAEA,OAAO,IAAAC,oBAAW,EAAC3B,KAAK,CAAC;EAC3B,CAAC;EAGD,IAAI;IACFiB,YAAY,CAACH,IAAI,GAAGA,IAAI;EAC1B,CAAC,CAAC,OAAAc,OAAA,EAAM,CAAC;EAGTX,YAAY,CAACY,GAAG,GAAG,sCAAsC;EACzDZ,YAAY,CAACa,GAAG,GAAG,sCAAsC;EAEzD,OAAOb,YAAY;AACrB","ignoreList":[]}