735115302846874458925fd6d72ca1d6
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["children", "size", "style", "theme", "visible"],
  _excluded2 = ["backgroundColor"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _theming = require("../core/theming");
var _colors = require("../styles/themes/v2/colors");
var _getContrastingColor = _interopRequireDefault(require("../utils/getContrastingColor"));
function _interopRequireDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}
function _interopRequireWildcard(e, t) {
  if ("function" == typeof WeakMap) var r = new WeakMap(),
    n = new WeakMap();
  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {
    if (!t && e && e.__esModule) return e;
    var o,
      i,
      f = {
        __proto__: null,
        default: e
      };
    if (null === e || "object" != typeof e && "function" != typeof e) return f;
    if (o = t ? n : r) {
      if (o.has(e)) return o.get(e);
      o.set(e, f);
    }
    for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]);
    return f;
  })(e, t);
}
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
var defaultSize = 20;
var Badge = function Badge(_ref) {
  var children = _ref.children,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? defaultSize : _ref$size,
    style = _ref.style,
    themeOverrides = _ref.theme,
    _ref$visible = _ref.visible,
    visible = _ref$visible === void 0 ? true : _ref$visible,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var _theme$colors;
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var _React$useRef = React.useRef(new _reactNative.Animated.Value(visible ? 1 : 0)),
    opacity = _React$useRef.current;
  var _ref2 = (0, _reactNative.useWindowDimensions)(),
    fontScale = _ref2.fontScale;
  var isFirstRendering = React.useRef(true);
  var scale = theme.animation.scale;
  React.useEffect(function () {
    if (isFirstRendering.current) {
      isFirstRendering.current = false;
      return;
    }
    _reactNative.Animated.timing(opacity, {
      toValue: visible ? 1 : 0,
      duration: 150 * scale,
      useNativeDriver: true
    }).start();
  }, [visible, opacity, scale]);
  var _ref3 = _reactNative.StyleSheet.flatten(style) || {},
    _ref3$backgroundColor = _ref3.backgroundColor,
    backgroundColor = _ref3$backgroundColor === void 0 ? theme.isV3 ? theme.colors.error : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.notification : _ref3$backgroundColor,
    restStyle = (0, _objectWithoutProperties2.default)(_ref3, _excluded2);
  var textColor = theme.isV3 ? theme.colors.onError : (0, _getContrastingColor.default)(backgroundColor, _colors.white, _colors.black);
  var borderRadius = size / 2;
  var paddingHorizontal = theme.isV3 ? 3 : 4;
  return React.createElement(_reactNative.Animated.Text, _extends({
    numberOfLines: 1,
    style: [Object.assign({
      opacity: opacity,
      backgroundColor: backgroundColor,
      color: textColor,
      fontSize: size * 0.5
    }, !theme.isV3 && theme.fonts.regular, {
      lineHeight: size / fontScale,
      height: size,
      minWidth: size,
      borderRadius: borderRadius,
      paddingHorizontal: paddingHorizontal
    }), styles.container, restStyle]
  }, rest), children);
};
var _default = exports.default = Badge;
var styles = _reactNative.StyleSheet.create({
  container: {
    alignSelf: 'flex-end',
    textAlign: 'center',
    textAlignVertical: 'center',
    overflow: 'hidden'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl90aGVtaW5nIiwiX2NvbG9ycyIsIl9nZXRDb250cmFzdGluZ0NvbG9yIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsImUiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInQiLCJXZWFrTWFwIiwiciIsIm4iLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJoYXMiLCJnZXQiLCJzZXQiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIl9leHRlbmRzIiwiYXNzaWduIiwiYmluZCIsImFyZ3VtZW50cyIsImxlbmd0aCIsImFwcGx5IiwiZGVmYXVsdFNpemUiLCJCYWRnZSIsIl9yZWYiLCJjaGlsZHJlbiIsIl9yZWYkc2l6ZSIsInNpemUiLCJzdHlsZSIsInRoZW1lT3ZlcnJpZGVzIiwidGhlbWUiLCJfcmVmJHZpc2libGUiLCJ2aXNpYmxlIiwicmVzdCIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllczIiLCJfZXhjbHVkZWQiLCJfdGhlbWUkY29sb3JzIiwidXNlSW50ZXJuYWxUaGVtZSIsIl9SZWFjdCR1c2VSZWYiLCJ1c2VSZWYiLCJBbmltYXRlZCIsIlZhbHVlIiwib3BhY2l0eSIsImN1cnJlbnQiLCJfcmVmMiIsInVzZVdpbmRvd0RpbWVuc2lvbnMiLCJmb250U2NhbGUiLCJpc0ZpcnN0UmVuZGVyaW5nIiwic2NhbGUiLCJhbmltYXRpb24iLCJ1c2VFZmZlY3QiLCJ0aW1pbmciLCJ0b1ZhbHVlIiwiZHVyYXRpb24iLCJ1c2VOYXRpdmVEcml2ZXIiLCJzdGFydCIsIl9yZWYzIiwiU3R5bGVTaGVldCIsImZsYXR0ZW4iLCJfcmVmMyRiYWNrZ3JvdW5kQ29sb3IiLCJiYWNrZ3JvdW5kQ29sb3IiLCJpc1YzIiwiY29sb3JzIiwiZXJyb3IiLCJub3RpZmljYXRpb24iLCJyZXN0U3R5bGUiLCJfZXhjbHVkZWQyIiwidGV4dENvbG9yIiwib25FcnJvciIsIndoaXRlIiwiYmxhY2siLCJib3JkZXJSYWRpdXMiLCJwYWRkaW5nSG9yaXpvbnRhbCIsImNyZWF0ZUVsZW1lbnQiLCJUZXh0IiwibnVtYmVyT2ZMaW5lcyIsImNvbG9yIiwiZm9udFNpemUiLCJmb250cyIsInJlZ3VsYXIiLCJsaW5lSGVpZ2h0IiwiaGVpZ2h0IiwibWluV2lkdGgiLCJzdHlsZXMiLCJjb250YWluZXIiLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJjcmVhdGUiLCJhbGlnblNlbGYiLCJ0ZXh0QWxpZ24iLCJ0ZXh0QWxpZ25WZXJ0aWNhbCIsIm92ZXJmbG93Il0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvQmFkZ2UudHN4Il0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsSUFBQUEsS0FBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBUUEsSUFBQUUsUUFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsT0FBQSxHQUFBSCxPQUFBO0FBRUEsSUFBQUksb0JBQUEsR0FBQUMsc0JBQUEsQ0FBQUwsT0FBQTtBQUErRCxTQUFBSyx1QkFBQUMsQ0FBQTtFQUFBLE9BQUFBLENBQUEsSUFBQUEsQ0FBQSxDQUFBQyxVQUFBLEdBQUFELENBQUE7SUFBQUUsT0FBQSxFQUFBRjtFQUFBO0FBQUE7QUFBQSxTQUFBUCx3QkFBQU8sQ0FBQSxFQUFBRyxDQUFBO0VBQUEseUJBQUFDLE9BQUEsTUFBQUMsQ0FBQSxPQUFBRCxPQUFBO0lBQUFFLENBQUEsT0FBQUYsT0FBQTtFQUFBLFFBQUFYLHVCQUFBLFlBQUFBLHdCQUFBTyxDQUFBLEVBQUFHLENBQUE7SUFBQSxLQUFBQSxDQUFBLElBQUFILENBQUEsSUFBQUEsQ0FBQSxDQUFBQyxVQUFBLFNBQUFELENBQUE7SUFBQSxJQUFBTyxDQUFBO01BQUFDLENBQUE7TUFBQUMs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