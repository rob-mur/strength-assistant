eb2e82ac0b9d0e55ad5c52a86d9de363
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getAssetForSource = getAssetForSource;
exports.loadSingleFontAsync = loadSingleFontAsync;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _expoAsset = require("expo-asset");
var _expoModulesCore = require("expo-modules-core");
var _ExpoFontLoader = _interopRequireDefault(require("./ExpoFontLoader"));
function getAssetForSource(source) {
  if (source instanceof _expoAsset.Asset) {
    return source;
  }
  if (typeof source === 'string') {
    return _expoAsset.Asset.fromURI(source);
  } else if (typeof source === 'number') {
    return _expoAsset.Asset.fromModule(source);
  } else if (typeof source === 'object' && typeof source.uri !== 'undefined') {
    return getAssetForSource(source.uri);
  }
  return source;
}
function loadSingleFontAsync(_x, _x2) {
  return _loadSingleFontAsync.apply(this, arguments);
}
function _loadSingleFontAsync() {
  _loadSingleFontAsync = (0, _asyncToGenerator2.default)(function* (name, input) {
    var asset = input;
    if (!asset.downloadAsync) {
      throw new _expoModulesCore.CodedError(`ERR_FONT_SOURCE`, '`loadSingleFontAsync` expected resource of type `Asset` from expo-asset on native');
    }
    yield asset.downloadAsync();
    if (!asset.downloaded) {
      throw new _expoModulesCore.CodedError(`ERR_DOWNLOAD`, `Failed to download asset for font "${name}"`);
    }
    yield _ExpoFontLoader.default.loadAsync(name, asset.localUri);
  });
  return _loadSingleFontAsync.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwb0Fzc2V0IiwicmVxdWlyZSIsIl9leHBvTW9kdWxlc0NvcmUiLCJfRXhwb0ZvbnRMb2FkZXIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiZ2V0QXNzZXRGb3JTb3VyY2UiLCJzb3VyY2UiLCJBc3NldCIsImZyb21VUkkiLCJmcm9tTW9kdWxlIiwidXJpIiwibG9hZFNpbmdsZUZvbnRBc3luYyIsIl94IiwiX3gyIiwiX2xvYWRTaW5nbGVGb250QXN5bmMiLCJhcHBseSIsImFyZ3VtZW50cyIsIl9hc3luY1RvR2VuZXJhdG9yMiIsImRlZmF1bHQiLCJuYW1lIiwiaW5wdXQiLCJhc3NldCIsImRvd25sb2FkQXN5bmMiLCJDb2RlZEVycm9yIiwiZG93bmxvYWRlZCIsIkV4cG9Gb250TG9hZGVyIiwibG9hZEFzeW5jIiwibG9jYWxVcmkiXSwic291cmNlcyI6WyIuLi9zcmMvRm9udExvYWRlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc3NldCB9IGZyb20gJ2V4cG8tYXNzZXQnO1xuaW1wb3J0IHsgQ29kZWRFcnJvciB9IGZyb20gJ2V4cG8tbW9kdWxlcy1jb3JlJztcblxuaW1wb3J0IEV4cG9Gb250TG9hZGVyIGZyb20gJy4vRXhwb0ZvbnRMb2FkZXInO1xuaW1wb3J0IHsgRm9udFJlc291cmNlLCBGb250U291cmNlIH0gZnJvbSAnLi9Gb250LnR5cGVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGdldEFzc2V0Rm9yU291cmNlKHNvdXJjZTogRm9udFNvdXJjZSk6IEFzc2V0IHwgRm9udFJlc291cmNlIHtcbiAgaWYgKHNvdXJjZSBpbnN0YW5jZW9mIEFzc2V0KSB7XG4gICAgcmV0dXJuIHNvdXJjZTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygc291cmNlID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBBc3NldC5mcm9tVVJJKHNvdXJjZSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHNvdXJjZSA9PT0gJ251bWJlcicpIHtcbiAgICByZXR1cm4gQXNzZXQuZnJvbU1vZHVsZShzb3VyY2UpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBzb3VyY2UgPT09ICdvYmplY3QnICYmIHR5cGVvZiBzb3VyY2UudXJpICE9PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBnZXRBc3NldEZvclNvdXJjZShzb3VyY2UudXJpKTtcbiAgfVxuXG4gIC8vIEB0cy1pZ25vcmUgRXJyb3I6IFR5cGUgJ3N0cmluZycgaXMgbm90IGFzc2lnbmFibGUgdG8gdHlwZSAnQXNzZXQnXG4gIC8vIFdlIGNhbid0IGhhdmUgYSBzdHJpbmcgaGVyZSwgd2Ugd291bGQgaGF2ZSB0aHJvd24gYW4gZXJyb3IgaWYgIWlzV2ViXG4gIC8vIG9yIHJldHVybmVkIEFzc2V0LmZyb21Nb2R1bGUgaWYgaXNXZWIuXG4gIHJldHVybiBzb3VyY2U7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBsb2FkU2luZ2xlRm9udEFzeW5jKFxuICBuYW1lOiBzdHJpbmcsXG4gIGlucHV0OiBBc3NldCB8IEZvbnRSZXNvdXJjZVxuKTogUHJvbWlzZTx2b2lkPiB7XG4gIGNvbnN0IGFzc2V0ID0gaW5wdXQgYXMgQXNzZXQ7XG4gIGlmICghYXNzZXQuZG93bmxvYWRBc3luYykge1xuICAgIHRocm93IG5ldyBDb2RlZEVycm9yKFxuICAgICAgYEVSUl9GT05UX1NPVVJDRWAsXG4gICAgICAnYGxvYWRTaW5nbGVGb250QXN5bmNgIGV4cGVjdGVkIHJlc291cmNlIG9mIHR5cGUgYEFzc2V0YCBmcm9tIGV4cG8tYXNzZXQgb24gbmF0aXZlJ1xuICAgICk7XG4gIH1cblxuICBhd2FpdCBhc3NldC5kb3dubG9hZEFzeW5jKCk7XG4gIGlmICghYXNzZXQuZG93bmxvYWRlZCkge1xuICAgIHRocm93IG5ldyBDb2RlZEVycm9yKGBFUlJfRE9XTkxPQURgLCBgRmFpbGVkIHRvIGRvd25sb2FkIGFzc2V0IGZvciBmb250IFwiJHtuYW1lfVwiYCk7XG4gIH1cbiAgYXdhaXQgRXhwb0ZvbnRMb2FkZXIubG9hZEFzeW5jKG5hbWUsIGFzc2V0LmxvY2FsVXJpKTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLElBQUFBLFVBQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLGdCQUFBLEdBQUFELE9BQUE7QUFFQSxJQUFBRSxlQUFBLEdBQUFDLHNCQUFBLENBQUFILE9BQUE7QUFHTSxTQUFVSSxpQkFBaUJBLENBQUNDLE1BQWtCO0VBQ2xELElBQUlBLE1BQU0sWUFBWUMsZ0JBQUssRUFBRTtJQUMzQixPQUFPRCxNQUFNO0VBQ2Y7RUFFQSxJQUFJLE9BQU9BLE1BQU0sS0FBSyxRQUFRLEVBQUU7SUFDOUIsT0FBT0MsZ0JBQUssQ0FBQ0MsT0FBTyxDQUFDRixNQUFNLENBQUM7RUFDOUIsQ0FBQyxNQUFNLElBQUksT0FBT0EsTUFBTSxLQUFLLFFBQVEsRUFBRTtJQUNyQyxPQUFPQyxnQkFBSyxDQUFDRSxVQUFVLENBQUNILE1BQU0sQ0FBQztFQUNqQyxDQUFDLE1BQU0sSUFBSSxPQUFPQSxNQUFNLEtBQUssUUFBUSxJQUFJLE9BQU9BLE1BQU0sQ0FBQ0ksR0FBRyxLQUFLLFdBQVcsRUFBRTtJQUMxRSxPQUFPTCxpQkFBaUIsQ0FBQ0MsTUFBTSxDQUFDSSxHQUFHLENBQUM7RUFDdEM7RUFLQSxPQUFPSixNQUFNO0FBQ2Y7QUFBQyxTQUVxQkssbUJBQW1CQSxDQUFBQyxFQUFBLEVBQUFDLEdBQUE7RUFBQSxPQUFBQyxvQkFBQSxDQUFBQyxLQUFBLE9BQUFDLFNBQUE7QUFBQTtBQUFBLFNBQUFGLHFCQUFBO0VBQUFBLG9CQUFBLE9BQUFHLGtCQUFBLENBQUFDLE9BQUEsRUFBbEMsV0FDTEMsSUFBWSxFQUNaQyxLQUEyQjtJQUUzQixJQUFNQyxLQUFLLEdBQUdELEtBQWM7SUFDNUIsSUFBSSxDQUFDQyxLQUFLLENBQUNDLGFBQWEsRUFBRTtNQUN4QixNQUFNLElBQUlDLDJCQUFVLENBQ2xCLGlCQUFpQixFQUNqQixtRkFBbUYsQ0FDcEY7SUFDSDtJQUVBLE1BQU1GLEtBQUssQ0FBQ0MsYUFBYSxFQUFFO0lBQzNCLElBQUksQ0FBQ0QsS0FBSyxDQUFDRyxVQUFVLEVBQUU7TUFDckIsTUFBTSxJQUFJRCwyQkFBVSxDQUFDLGNBQWMsRUFBRSxzQ0FBc0NKLElBQUksR0FBRyxDQUFDO0lBQ3JGO0lBQ0EsTUFBTU0sdUJBQWMsQ0FBQ0MsU0FBUyxDQUFDUCxJQUFJLEVBQUVFLEtBQUssQ0FBQ00sUUFBUSxDQUFDO0VBQ3RELENBQUM7RUFBQSxPQUFBYixvQkFBQSxDQUFBQyxLQUFBLE9BQUFDLFNBQUE7QUFBQSIsImlnbm9yZUxpc3QiOltdfQ==