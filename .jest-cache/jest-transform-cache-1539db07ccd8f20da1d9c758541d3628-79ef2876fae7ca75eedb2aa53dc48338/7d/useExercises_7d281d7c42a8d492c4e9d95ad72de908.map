{"version":3,"names":["_react","require","_ExerciseRepo","_logger","useExercises","exports","uid","_useState","useState","_useState2","_slicedToArray2","default","exercises","setExercises","useEffect","logger","warn","service","platform","operation","exerciseRepo","ExerciseRepo","getInstance","unsubscribe","subscribeToExercises"],"sources":["useExercises.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Exercise } from \"../models/Exercise\";\nimport { ExerciseRepo } from \"../repo/ExerciseRepo\";\nimport { logger } from \"../data/firebase/logger\";\n\nexport const useExercises = (uid: string) => {\n  const [exercises, setExercises] = useState<Exercise[]>([]);\n\n  useEffect(() => {\n    if (!uid) {\n      logger.warn(\"useExercises: User not authenticated, exercises will be empty\", {\n        service: \"useExercises\",\n        platform: \"React Native\",\n        operation: \"fetch_exercises\"\n      });\n      setExercises([]);\n      return;\n    }\n\n    const exerciseRepo = ExerciseRepo.getInstance();\n    const unsubscribe = exerciseRepo.subscribeToExercises(uid, (exercises) => {\n      setExercises(exercises);\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [uid]);\n\n  return { exercises };\n};\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,aAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AAEO,IAAMG,YAAY,GAAAC,OAAA,CAAAD,YAAA,GAAG,SAAfA,YAAYA,CAAIE,GAAW,EAAK;EAC3C,IAAAC,SAAA,GAAkC,IAAAC,eAAQ,EAAa,EAAE,CAAC;IAAAC,UAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAJ,SAAA;IAAnDK,SAAS,GAAAH,UAAA;IAAEI,YAAY,GAAAJ,UAAA;EAE9B,IAAAK,gBAAS,EAAC,YAAM;IACd,IAAI,CAACR,GAAG,EAAE;MACRS,cAAM,CAACC,IAAI,CAAC,+DAA+D,EAAE;QAC3EC,OAAO,EAAE,cAAc;QACvBC,QAAQ,EAAE,cAAc;QACxBC,SAAS,EAAE;MACb,CAAC,CAAC;MACFN,YAAY,CAAC,EAAE,CAAC;MAChB;IACF;IAEA,IAAMO,YAAY,GAAGC,0BAAY,CAACC,WAAW,CAAC,CAAC;IAC/C,IAAMC,WAAW,GAAGH,YAAY,CAACI,oBAAoB,CAAClB,GAAG,EAAE,UAACM,SAAS,EAAK;MACxEC,YAAY,CAACD,SAAS,CAAC;IACzB,CAAC,CAAC;IAEF,OAAO,YAAM;MACXW,WAAW,CAAC,CAAC;IACf,CAAC;EACH,CAAC,EAAE,CAACjB,GAAG,CAAC,CAAC;EAET,OAAO;IAAEM,SAAS,EAATA;EAAU,CAAC;AACtB,CAAC","ignoreList":[]}