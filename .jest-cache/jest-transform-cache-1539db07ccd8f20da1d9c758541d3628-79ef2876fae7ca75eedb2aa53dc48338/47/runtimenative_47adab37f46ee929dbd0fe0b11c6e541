9a19f99ea0579bb6489b47b040cca8fc
var _PolyfillFunctions = require("react-native/Libraries/Utilities/PolyfillFunctions");
var _FormData = require("./FormData");
var _Symbol$asyncIterator;
var BUILTIN_SYMBOL = Symbol.for('expo.builtin');
function addBuiltinSymbol(obj) {
  Object.defineProperty(obj, BUILTIN_SYMBOL, {
    value: true,
    enumerable: false,
    configurable: false
  });
  return obj;
}
function install(name, getValue) {
  (0, _PolyfillFunctions.polyfillGlobal)(name, function () {
    return addBuiltinSymbol(getValue());
  });
}
install('TextDecoder', function () {
  return require('./TextDecoder').TextDecoder;
});
install('URL', function () {
  return require('./url').URL;
});
install('URLSearchParams', function () {
  return require('./url').URLSearchParams;
});
install('__ExpoImportMetaRegistry', function () {
  return require('./ImportMetaRegistry').ImportMetaRegistry;
});
(0, _FormData.installFormDataPatch)(FormData);
(_Symbol$asyncIterator = Symbol.asyncIterator) != null ? _Symbol$asyncIterator : Symbol.asyncIterator = Symbol.for('Symbol.asyncIterator');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfUG9seWZpbGxGdW5jdGlvbnMiLCJyZXF1aXJlIiwiX0Zvcm1EYXRhIiwiX1N5bWJvbCRhc3luY0l0ZXJhdG9yIiwiQlVJTFRJTl9TWU1CT0wiLCJTeW1ib2wiLCJmb3IiLCJhZGRCdWlsdGluU3ltYm9sIiwib2JqIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJpbnN0YWxsIiwibmFtZSIsImdldFZhbHVlIiwiaW5zdGFsbEdsb2JhbCIsIlRleHREZWNvZGVyIiwiVVJMIiwiVVJMU2VhcmNoUGFyYW1zIiwiSW1wb3J0TWV0YVJlZ2lzdHJ5IiwiaW5zdGFsbEZvcm1EYXRhUGF0Y2giLCJGb3JtRGF0YSIsImFzeW5jSXRlcmF0b3IiXSwic291cmNlcyI6WyJydW50aW1lLm5hdGl2ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgY29uZmlndXJlcyB0aGUgcnVudGltZSBlbnZpcm9ubWVudCB0byBpbmNyZWFzZSBjb21wYXRpYmlsaXR5IHdpdGggV2ludGVyQ0cuXG4vLyBodHRwczovL3dpbnRlcmNnLm9yZy9cblxuLy8gQHRzLWlnbm9yZTogUG9seWZpbGxGdW5jdGlvbnMgZG9lcyBub3QgaGF2ZSB0eXBlcyBleHBvcnRlZFxuaW1wb3J0IHsgcG9seWZpbGxHbG9iYWwgYXMgaW5zdGFsbEdsb2JhbCB9IGZyb20gJ3JlYWN0LW5hdGl2ZS9MaWJyYXJpZXMvVXRpbGl0aWVzL1BvbHlmaWxsRnVuY3Rpb25zJztcblxuaW1wb3J0IHsgaW5zdGFsbEZvcm1EYXRhUGF0Y2ggfSBmcm9tICcuL0Zvcm1EYXRhJztcbi8vIEFkZCBhIHdlbGwta25vd24gc2hhcmVkIHN5bWJvbCB0aGF0IGRvZXNuJ3Qgc2hvdyB1cCBpbiBpdGVyYXRpb24gb3IgaW5zcGVjdGlvblxuLy8gdGhpcyBjYW4gYmUgdXNlZCB0byBkZXRlY3QgaWYgdGhlIGdsb2JhbCBvYmplY3QgYWJpZGVzIGJ5IHRoZSBFeHBvIHRlYW0ncyBkb2N1bWVudGVkXG4vLyBidWlsdC1pbiByZXF1aXJlbWVudHMuXG5jb25zdCBCVUlMVElOX1NZTUJPTCA9IFN5bWJvbC5mb3IoJ2V4cG8uYnVpbHRpbicpO1xuXG5mdW5jdGlvbiBhZGRCdWlsdGluU3ltYm9sKG9iajogb2JqZWN0KSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIEJVSUxUSU5fU1lNQk9MLCB7XG4gICAgdmFsdWU6IHRydWUsXG4gICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgfSk7XG4gIHJldHVybiBvYmo7XG59XG5cbmZ1bmN0aW9uIGluc3RhbGwobmFtZTogc3RyaW5nLCBnZXRWYWx1ZTogKCkgPT4gYW55KSB7XG4gIGluc3RhbGxHbG9iYWwobmFtZSwgKCkgPT4gYWRkQnVpbHRpblN5bWJvbChnZXRWYWx1ZSgpKSk7XG59XG5cbi8vIGh0dHBzOi8vZW5jb2Rpbmcuc3BlYy53aGF0d2cub3JnLyN0ZXh0ZGVjb2RlclxuaW5zdGFsbCgnVGV4dERlY29kZXInLCAoKSA9PiByZXF1aXJlKCcuL1RleHREZWNvZGVyJykuVGV4dERlY29kZXIpO1xuLy8gaHR0cHM6Ly91cmwuc3BlYy53aGF0d2cub3JnLyN1cmxcbmluc3RhbGwoJ1VSTCcsICgpID0+IHJlcXVpcmUoJy4vdXJsJykuVVJMKTtcbi8vIGh0dHBzOi8vdXJsLnNwZWMud2hhdHdnLm9yZy8jdXJsc2VhcmNocGFyYW1zXG5pbnN0YWxsKCdVUkxTZWFyY2hQYXJhbXMnLCAoKSA9PiByZXF1aXJlKCcuL3VybCcpLlVSTFNlYXJjaFBhcmFtcyk7XG4vLyBodHRwczovL3N0cmVhbXMuc3BlYy53aGF0d2cub3JnLyNyc1xuLy8gUmVhZGFibGVTdHJlYW0gaXMgaW5qZWN0ZWQgYnkgTWV0cm8gYXMgYSBnbG9iYWxcblxuaW5zdGFsbCgnX19FeHBvSW1wb3J0TWV0YVJlZ2lzdHJ5JywgKCkgPT4gcmVxdWlyZSgnLi9JbXBvcnRNZXRhUmVnaXN0cnknKS5JbXBvcnRNZXRhUmVnaXN0cnkpO1xuXG5pbnN0YWxsRm9ybURhdGFQYXRjaChGb3JtRGF0YSk7XG5cbi8vIFBvbHlmaWxsIGFzeW5jIGl0ZXJhdG9yIHN5bWJvbCBmb3IgSGVybWVzLlxuLy8gQHRzLWV4cGVjdC1lcnJvcjogcmVhZG9ubHkgcHJvcGVydHkgb25seSBhcHBsaWVzIHdoZW4gdGhlIGVuZ2luZSBzdXBwb3J0cyBpdFxuU3ltYm9sLmFzeW5jSXRlcmF0b3IgPz89IFN5bWJvbC5mb3IoJ1N5bWJvbC5hc3luY0l0ZXJhdG9yJyk7XG4iXSwibWFwcGluZ3MiOiJBQUlBLElBQUFBLGtCQUFBLEdBQUFDLE9BQUE7QUFFQSxJQUFBQyxTQUFBLEdBQUFELE9BQUE7QUFBa0QsSUFBQUUscUJBQUE7QUFJbEQsSUFBTUMsY0FBYyxHQUFHQyxNQUFNLENBQUNDLEdBQUcsQ0FBQyxjQUFjLENBQUM7QUFFakQsU0FBU0MsZ0JBQWdCQSxDQUFDQyxHQUFXLEVBQUU7RUFDckNDLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDRixHQUFHLEVBQUVKLGNBQWMsRUFBRTtJQUN6Q08sS0FBSyxFQUFFLElBQUk7SUFDWEMsVUFBVSxFQUFFLEtBQUs7SUFDakJDLFlBQVksRUFBRTtFQUNoQixDQUFDLENBQUM7RUFDRixPQUFPTCxHQUFHO0FBQ1o7QUFFQSxTQUFTTSxPQUFPQSxDQUFDQyxJQUFZLEVBQUVDLFFBQW1CLEVBQUU7RUFDbEQsSUFBQUMsaUNBQWEsRUFBQ0YsSUFBSSxFQUFFO0lBQUEsT0FBTVIsZ0JBQWdCLENBQUNTLFFBQVEsQ0FBQyxDQUFDLENBQUM7RUFBQSxFQUFDO0FBQ3pEO0FBR0FGLE9BQU8sQ0FBQyxhQUFhLEVBQUU7RUFBQSxPQUFNYixPQUFPLENBQUMsZUFBZSxDQUFDLENBQUNpQixXQUFXO0FBQUEsRUFBQztBQUVsRUosT0FBTyxDQUFDLEtBQUssRUFBRTtFQUFBLE9BQU1iLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQ2tCLEdBQUc7QUFBQSxFQUFDO0FBRTFDTCxPQUFPLENBQUMsaUJBQWlCLEVBQUU7RUFBQSxPQUFNYixPQUFPLENBQUMsT0FBTyxDQUFDLENBQUNtQixlQUFlO0FBQUEsRUFBQztBQUlsRU4sT0FBTyxDQUFDLDBCQUEwQixFQUFFO0VBQUEsT0FBTWIsT0FBTyxDQUFDLHNCQUFzQixDQUFDLENBQUNvQixrQkFBa0I7QUFBQSxFQUFDO0FBRTdGLElBQUFDLDhCQUFvQixFQUFDQyxRQUFRLENBQUM7QUFJOUIsQ0FBQXBCLHFCQUFBLEdBQUFFLE1BQU0sQ0FBQ21CLGFBQWEsWUFBQXJCLHFCQUFBLEdBQXBCRSxNQUFNLENBQUNtQixhQUFhLEdBQUtuQixNQUFNLENBQUNDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==