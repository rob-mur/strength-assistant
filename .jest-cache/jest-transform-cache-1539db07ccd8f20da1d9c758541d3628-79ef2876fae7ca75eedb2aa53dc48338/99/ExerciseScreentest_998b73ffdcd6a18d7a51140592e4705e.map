{"version":3,"names":["_getJestObj","mock","useExercises","jest","fn","useAuth","_interopRequireDefault","require","_asyncToGenerator2","_exercises","_useExercises","_useAuth","_reactNative","_utils","_jsxRuntime","_require","describe","state","beforeEach","CommonTestState","mockReturnValue","user","uid","email","isAnonymous","loading","error","signInAnonymously","createAccount","signIn","signOut","clearError","test","default","exercises","render","jsx","press","screen","getByTestId","expect","mockRouter","navigate","toHaveBeenCalledWith","id","name","getByText","toBeVisible"],"sources":["ExerciseScreen-test.tsx"],"sourcesContent":["import ExerciseScreen from \"@/app/(tabs)/exercises\";\nimport { useExercises } from \"@/lib/hooks/useExercises\";\nimport { useAuth } from \"@/lib/hooks/useAuth\";\nimport { render, screen } from \"@testing-library/react-native\";\nimport { CommonTestState } from \"../../__test_utils__/utils\";\n\njest.mock(\"@/lib/hooks/useExercises\", () => ({\n  useExercises: jest.fn(),\n}));\n\njest.mock(\"@/lib/hooks/useAuth\", () => ({\n  useAuth: jest.fn(),\n}));\n\njest.mock(\"expo-router\");\n\ndescribe(\"<ExerciseScreen/>\", () => {\n  let state: CommonTestState;\n\n  beforeEach(() => {\n    state = new CommonTestState();\n    (useAuth as jest.Mock).mockReturnValue({\n      user: { uid: 'test-uid', email: 'test@example.com', isAnonymous: false },\n      loading: false,\n      error: null,\n      signInAnonymously: jest.fn(),\n      createAccount: jest.fn(),\n      signIn: jest.fn(),\n      signOut: jest.fn(),\n      clearError: jest.fn(),\n    });\n  });\n\n  test(\"When the user request to add an exercise their request is accepted\", async () => {\n    // Given\n    (useExercises as jest.Mock).mockReturnValue({ exercises: [] });\n    render(<ExerciseScreen />);\n\n    // When\n    await state.user.press(screen.getByTestId(\"add-exercise\"));\n\n    // Then\n    expect(state.mockRouter.navigate).toHaveBeenCalledWith(\"/exercises/add\");\n  });\n\n  test(\"displays exercises returned from the useExercises hook\", () => {\n    // Given\n    const exercises = [\n      { id: \"1\", name: \"Squat\" },\n      { id: \"2\", name: \"Bench Press\" },\n    ];\n    (useExercises as jest.Mock).mockReturnValue({ exercises });\n\n    // When\n    render(<ExerciseScreen />);\n\n    // Then\n    expect(screen.getByText(\"Squat\")).toBeVisible();\n    expect(screen.getByText(\"Bench Press\")).toBeVisible();\n  });\n});\n"],"mappings":"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","ignoreList":[]}