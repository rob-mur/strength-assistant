{"version":3,"names":["_Asset","require","_PlatformUtils","_resolveAssetSource","_interopRequireWildcard","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","IS_ENV_WITH_LOCAL_ASSETS","setTransformer","resolveAssetSource","setCustomSourceTransformer","resolver","asset","fileHashes","Asset","fromMetadata","uri","startsWith","ANDROID_EMBEDDED_URL_BASE_RESOURCE","resourceIdentifierWithoutScale","fromSource","downloaded","localUri","defaultAsset","_unused"],"sources":["../src/Asset.fx.ts"],"sourcesContent":["import type { default as AssetSourceResolver } from 'react-native/Libraries/Image/AssetSourceResolver';\n\nimport { Asset, ANDROID_EMBEDDED_URL_BASE_RESOURCE } from './Asset';\nimport { IS_ENV_WITH_LOCAL_ASSETS } from './PlatformUtils';\nimport resolveAssetSource, { setCustomSourceTransformer } from './resolveAssetSource';\n\n// Override React Native's asset resolution for `Image` components in contexts where it matters\nif (IS_ENV_WITH_LOCAL_ASSETS) {\n  const setTransformer =\n    resolveAssetSource.setCustomSourceTransformer || setCustomSourceTransformer;\n  setTransformer((resolver) => {\n    try {\n      // Bundler is using the hashAssetFiles plugin if and only if the fileHashes property exists\n      if ('fileHashes' in resolver.asset && resolver.asset.fileHashes) {\n        const asset = Asset.fromMetadata(resolver.asset);\n        if (asset.uri.startsWith(ANDROID_EMBEDDED_URL_BASE_RESOURCE)) {\n          // TODO(@kitten): See https://github.com/expo/expo/commit/ec940b57a87d99ab4f1d06d87126e662c3f04f04#r155340943\n          // It's unclear whether this is sound since this may be our own AssetSourceResolver, which doesn't have this method\n          // Please compare `AssetSourceResolver` type from `react-native/Libraries/Image/AssetSourceResolver` against `./AssetSourceResolver`\n          return (\n            resolver as unknown as AssetSourceResolver\n          ).resourceIdentifierWithoutScale() as any;\n        }\n        return resolver.fromSource(asset.downloaded ? asset.localUri! : asset.uri);\n      } else {\n        return resolver.defaultAsset();\n      }\n    } catch {\n      return resolver.defaultAsset();\n    }\n  });\n}\n"],"mappings":"AAEA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,cAAA,GAAAD,OAAA;AACA,IAAAE,mBAAA,GAAAC,uBAAA,CAAAH,OAAA;AAAsF,SAAAG,wBAAAC,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAH,uBAAA,YAAAA,wBAAAC,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,cAAAM,EAAA,IAAAd,CAAA,gBAAAc,EAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,EAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAW,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,EAAAc,EAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,EAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,EAAA,IAAAd,CAAA,CAAAc,EAAA,WAAAN,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAGtF,IAAImB,uCAAwB,EAAE;EAC5B,IAAMC,cAAc,GAClBC,2BAAkB,CAACC,0BAA0B,IAAIA,8CAA0B;EAC7EF,cAAc,CAAC,UAACG,QAAQ,EAAI;IAC1B,IAAI;MAEF,IAAI,YAAY,IAAIA,QAAQ,CAACC,KAAK,IAAID,QAAQ,CAACC,KAAK,CAACC,UAAU,EAAE;QAC/D,IAAMD,KAAK,GAAGE,YAAK,CAACC,YAAY,CAACJ,QAAQ,CAACC,KAAK,CAAC;QAChD,IAAIA,KAAK,CAACI,GAAG,CAACC,UAAU,CAACC,yCAAkC,CAAC,EAAE;UAI5D,OACEP,QACD,CAACQ,8BAA8B,EAAS;QAC3C;QACA,OAAOR,QAAQ,CAACS,UAAU,CAACR,KAAK,CAACS,UAAU,GAAGT,KAAK,CAACU,QAAS,GAAGV,KAAK,CAACI,GAAG,CAAC;MAC5E,CAAC,MAAM;QACL,OAAOL,QAAQ,CAACY,YAAY,EAAE;MAChC;IACF,CAAC,CAAC,OAAAC,OAAA,EAAM;MACN,OAAOb,QAAQ,CAACY,YAAY,EAAE;IAChC;EACF,CAAC,CAAC;AACJ","ignoreList":[]}