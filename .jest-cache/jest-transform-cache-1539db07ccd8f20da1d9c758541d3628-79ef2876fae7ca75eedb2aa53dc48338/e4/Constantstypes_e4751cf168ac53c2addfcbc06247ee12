b704443f47db62eb7f7e65b694ffb761
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UserInterfaceIdiom = exports.ExecutionEnvironment = exports.AppOwnership = void 0;
var AppOwnership;
(function (AppOwnership) {
  AppOwnership["Expo"] = "expo";
})(AppOwnership || (exports.AppOwnership = AppOwnership = {}));
var ExecutionEnvironment;
(function (ExecutionEnvironment) {
  ExecutionEnvironment["Bare"] = "bare";
  ExecutionEnvironment["Standalone"] = "standalone";
  ExecutionEnvironment["StoreClient"] = "storeClient";
})(ExecutionEnvironment || (exports.ExecutionEnvironment = ExecutionEnvironment = {}));
var UserInterfaceIdiom;
(function (UserInterfaceIdiom) {
  UserInterfaceIdiom["Handset"] = "handset";
  UserInterfaceIdiom["Tablet"] = "tablet";
  UserInterfaceIdiom["Desktop"] = "desktop";
  UserInterfaceIdiom["TV"] = "tv";
  UserInterfaceIdiom["Unsupported"] = "unsupported";
})(UserInterfaceIdiom || (exports.UserInterfaceIdiom = UserInterfaceIdiom = {}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,