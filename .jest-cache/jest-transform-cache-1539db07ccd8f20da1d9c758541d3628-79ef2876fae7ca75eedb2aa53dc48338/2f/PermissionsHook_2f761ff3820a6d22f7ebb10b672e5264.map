{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","createPermissionHook","_asyncToGenerator2","_objectWithoutProperties2","_slicedToArray2","_react","_excluded","usePermission","methods","options","isMounted","useRef","_useState","useState","_useState2","default","status","setStatus","_ref","_ref$get","get","_ref$request","request","permissionOptions","getPermission","useCallback","response","getMethod","keys","length","undefined","current","requestPermission","requestMethod","useEffect","runMethods","didMount"],"sources":["PermissionsHook.ts"],"sourcesContent":["// Copyright Â© 2024 650 Industries.\n\n'use client';\n\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\nimport { PermissionResponse } from './PermissionsInterface';\n\n// These types are identical, but improves the readability for suggestions in editors\ntype RequestPermissionMethod<Permission extends PermissionResponse> = () => Promise<Permission>;\ntype GetPermissionMethod<Permission extends PermissionResponse> = () => Promise<Permission>;\n\ntype PermissionHookMethods<Permission extends PermissionResponse, Options = never> = {\n  /** The permission method that requests the user to grant permission. */\n  requestMethod: (options?: Options) => Promise<Permission>;\n  /** The permission method that only fetches the current permission status. */\n  getMethod: (options?: Options) => Promise<Permission>;\n};\n\ntype PermissionHookBehavior = {\n  /** If the hook should automatically fetch the current permission status, without asking the user. */\n  get?: boolean;\n  /** If the hook should automatically request the user to grant permission. */\n  request?: boolean;\n};\n\nexport type PermissionHookOptions<Options extends object> = PermissionHookBehavior & Options;\n\n/**\n * Get or request permission for protected functionality within the app.\n * It uses separate permission requesters to interact with a single permission.\n * By default, the hook will only retrieve the permission status.\n */\nfunction usePermission<Permission extends PermissionResponse, Options extends object>(\n  methods: PermissionHookMethods<Permission, Options>,\n  options?: PermissionHookOptions<Options>\n): [Permission | null, RequestPermissionMethod<Permission>, GetPermissionMethod<Permission>] {\n  const isMounted = useRef(true);\n  const [status, setStatus] = useState<Permission | null>(null);\n  const { get = true, request = false, ...permissionOptions } = options || {};\n\n  const getPermission = useCallback(async () => {\n    const response = await methods.getMethod(\n      Object.keys(permissionOptions).length > 0 ? (permissionOptions as Options) : undefined\n    );\n    if (isMounted.current) setStatus(response);\n    return response;\n  }, [methods.getMethod]);\n\n  const requestPermission = useCallback(async () => {\n    const response = await methods.requestMethod(\n      Object.keys(permissionOptions).length > 0 ? (permissionOptions as Options) : undefined\n    );\n    if (isMounted.current) setStatus(response);\n    return response;\n  }, [methods.requestMethod]);\n\n  useEffect(\n    function runMethods() {\n      if (request) requestPermission();\n      if (!request && get) getPermission();\n    },\n    [get, request, requestPermission, getPermission]\n  );\n\n  // Workaround for unmounting components receiving state updates\n  useEffect(function didMount() {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return [status, requestPermission, getPermission];\n}\n\n/**\n * Create a new permission hook with the permission methods built-in.\n * This can be used to quickly create specific permission hooks in every module.\n */\nexport function createPermissionHook<Permission extends PermissionResponse, Options extends object>(\n  methods: PermissionHookMethods<Permission, Options>\n) {\n  return (options?: PermissionHookOptions<Options>) =>\n    usePermission<Permission, Options>(methods, options);\n}\n"],"mappings":"AAEA,YAAY;;AAAC,IAAAA,sBAAA,GAAAC,OAAA;AAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,oBAAA,GAAAA,oBAAA;AAAA,IAAAC,kBAAA,GAAAP,sBAAA,CAAAC,OAAA;AAAA,IAAAO,yBAAA,GAAAR,sBAAA,CAAAC,OAAA;AAAA,IAAAQ,eAAA,GAAAT,sBAAA,CAAAC,OAAA;AAEb,IAAAS,MAAA,GAAAT,OAAA;AAAiE,IAAAU,SAAA;AA6BjE,SAASC,aAAaA,CACpBC,OAAmD,EACnDC,OAAwC,EACmD;EAC3F,IAAMC,SAAS,GAAG,IAAAC,aAAM,EAAC,IAAI,CAAC;EAC9B,IAAAC,SAAA,GAA4B,IAAAC,eAAQ,EAAoB,IAAI,CAAC;IAAAC,UAAA,OAAAV,eAAA,CAAAW,OAAA,EAAAH,SAAA;IAAtDI,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EACxB,IAAAI,IAAA,GAA8DT,OAAO,IAAI,CAAC,CAAC;IAAAU,QAAA,GAAAD,IAAA,CAAnEE,GAAG;IAAHA,GAAG,GAAAD,QAAA,cAAG,IAAI,GAAAA,QAAA;IAAAE,YAAA,GAAAH,IAAA,CAAEI,OAAO;IAAPA,OAAO,GAAAD,YAAA,cAAG,KAAK,GAAAA,YAAA;IAAKE,iBAAiB,OAAApB,yBAAA,CAAAY,OAAA,EAAAG,IAAA,EAAAZ,SAAA;EAEzD,IAAMkB,aAAa,GAAG,IAAAC,kBAAW,MAAAvB,kBAAA,CAAAa,OAAA,EAAC,aAAY;IAC5C,IAAMW,QAAQ,SAASlB,OAAO,CAACmB,SAAS,CACtC9B,MAAM,CAAC+B,IAAI,CAACL,iBAAiB,CAAC,CAACM,MAAM,GAAG,CAAC,GAAIN,iBAAiB,GAAeO,SAC/E,CAAC;IACD,IAAIpB,SAAS,CAACqB,OAAO,EAAEd,SAAS,CAACS,QAAQ,CAAC;IAC1C,OAAOA,QAAQ;EACjB,CAAC,GAAE,CAAClB,OAAO,CAACmB,SAAS,CAAC,CAAC;EAEvB,IAAMK,iBAAiB,GAAG,IAAAP,kBAAW,MAAAvB,kBAAA,CAAAa,OAAA,EAAC,aAAY;IAChD,IAAMW,QAAQ,SAASlB,OAAO,CAACyB,aAAa,CAC1CpC,MAAM,CAAC+B,IAAI,CAACL,iBAAiB,CAAC,CAACM,MAAM,GAAG,CAAC,GAAIN,iBAAiB,GAAeO,SAC/E,CAAC;IACD,IAAIpB,SAAS,CAACqB,OAAO,EAAEd,SAAS,CAACS,QAAQ,CAAC;IAC1C,OAAOA,QAAQ;EACjB,CAAC,GAAE,CAAClB,OAAO,CAACyB,aAAa,CAAC,CAAC;EAE3B,IAAAC,gBAAS,EACP,SAASC,UAAUA,CAAA,EAAG;IACpB,IAAIb,OAAO,EAAEU,iBAAiB,CAAC,CAAC;IAChC,IAAI,CAACV,OAAO,IAAIF,GAAG,EAAEI,aAAa,CAAC,CAAC;EACtC,CAAC,EACD,CAACJ,GAAG,EAAEE,OAAO,EAAEU,iBAAiB,EAAER,aAAa,CACjD,CAAC;EAGD,IAAAU,gBAAS,EAAC,SAASE,QAAQA,CAAA,EAAG;IAC5B1B,SAAS,CAACqB,OAAO,GAAG,IAAI;IACxB,OAAO,YAAM;MACXrB,SAAS,CAACqB,OAAO,GAAG,KAAK;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,CAACf,MAAM,EAAEgB,iBAAiB,EAAER,aAAa,CAAC;AACnD;AAMO,SAASvB,oBAAoBA,CAClCO,OAAmD,EACnD;EACA,OAAO,UAACC,OAAwC;IAAA,OAC9CF,aAAa,CAAsBC,OAAO,EAAEC,OAAO,CAAC;EAAA;AACxD","ignoreList":[]}