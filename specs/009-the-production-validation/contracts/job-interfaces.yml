# Job Interface Contracts
# Defines the input/output contracts for each job in the unified workflow

build-production-apk-job:
  inputs:
    - trigger: push to main branch
    - source_code: latest commit SHA
    - build_config: production environment configuration
  
  outputs:
    - apk_filename: "build_production.apk" (fixed value, not build_preview.apk)
    - artifact_name: "production-apk-${github.sha}"
    - artifact_url: GitHub release download URL
    - build_status: success | failure
    - build_metadata: version, timestamp, commit SHA
  
  validation_rules:
    - APK filename MUST be build_production.apk
    - APK MUST be uploaded to GitHub release
    - Build MUST use production configuration
    - APK MUST pass integrity validation

terraform-deploy-job:
  inputs:
    - dependency: build-production-apk-job completion
    - terraform_workspace: production
    - infrastructure_config: production Terraform configuration
  
  outputs:
    - deployment_id: unique identifier for deployment tracking
    - infrastructure_url: production environment endpoint
    - deployment_status: success | failure | partial
    - terraform_state: updated state location
  
  validation_rules:
    - MUST wait for APK build completion
    - MUST use production Terraform workspace
    - MUST generate unique deployment ID
    - MUST validate infrastructure before applying changes

production-validation-job:
  inputs:
    - dependency: [build-production-apk-job, terraform-deploy-job] completion
    - apk_artifact: build_production.apk from build job
    - infrastructure_url: from terraform deploy job
    - deployment_id: from terraform deploy job
  
  outputs:
    - validation_status: success | failure | warning
    - test_results: detailed test execution results
    - anonymous_user_data: temporary user accounts created for testing
    - validation_report: summary of all validation checks
  
  validation_rules:
    - MUST use build_production.apk (downloaded from build job)
    - MUST test against deployed infrastructure endpoint
    - MUST use anonymous users for test isolation
    - MUST complete all validation tests before marking success

# Inter-job Communication Contracts

artifact-sharing:
  apk_artifact:
    producer: build-production-apk-job
    consumer: production-validation-job
    format: Android APK file
    storage: GitHub release
    naming: build_production.apk
    retention: persistent until next release

  deployment_metadata:
    producer: terraform-deploy-job
    consumer: production-validation-job
    format: JSON metadata
    content:
      - deployment_id: string
      - infrastructure_url: URL
      - deployment_timestamp: ISO datetime
    storage: job outputs
    retention: workflow duration

# Failure Handling Contracts

job_failure_behavior:
  build-production-apk-job:
    on_failure:
      - stop_workflow: true
      - notify: development team
      - preserve: build logs, error details
  
  terraform-deploy-job:
    on_failure:
      - stop_workflow: true
      - rollback: if infrastructure partially deployed
      - notify: development team + infrastructure team
      - preserve: terraform logs, state backup
  
  production-validation-job:
    on_failure:
      - stop_workflow: true
      - preserve: test results, validation logs
      - cleanup: anonymous user accounts
      - notify: development team + QA team

# Concurrency Handling Contracts

workflow_concurrency:
  group: production-deployment
  policy: cancel-in-progress
  behavior:
    - on_new_push: cancel running workflow, start fresh
    - on_manual_cancel: terminate all jobs gracefully
    - on_timeout: not applicable (no automatic timeouts)
  
  state_management:
    - running_deployment: cancelled and cleaned up
    - partial_artifacts: marked as incomplete
    - new_deployment: starts with latest commit