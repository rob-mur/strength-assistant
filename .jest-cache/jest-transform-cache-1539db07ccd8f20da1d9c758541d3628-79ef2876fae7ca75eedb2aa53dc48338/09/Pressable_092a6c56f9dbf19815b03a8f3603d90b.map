{"version":3,"names":["_PressabilityDebug","require","_usePressability","_interopRequireDefault","_useMergeRefs","_View","_useAndroidRippleForView","_react","_interopRequireWildcard","React","_jsxRuntime","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","Pressable","props","forwardedRef","_props$ariaValuemax","_props$accessibilityV","_props$ariaValuemin","_props$accessibilityV2","_props$ariaValuenow","_props$accessibilityV3","_props$ariaValuetext","_props$accessibilityV4","_restProps$ariaModal","accessible","accessibilityState","ariaLive","android_disableSound","android_ripple","ariaBusy","ariaChecked","ariaDisabled","ariaExpanded","ariaLabel","ariaSelected","cancelable","children","delayHoverIn","delayHoverOut","delayLongPress","disabled","focusable","hitSlop","onHoverIn","onHoverOut","onLongPress","onPress","onPressIn","onPressOut","pressRetentionOffset","style","testOnly_pressed","unstable_pressDelay","restProps","_objectWithoutProperties2","viewRef","useRef","mergedRef","useMergeRefs","android_rippleConfig","useAndroidRippleForView","_usePressState","usePressState","_usePressState2","_slicedToArray2","pressed","setPressed","shouldUpdatePressed","_accessibilityState","busy","checked","expanded","selected","assign","accessibilityValue","max","min","now","text","accessibilityLiveRegion","accessibilityLabel","restPropsWithDefaults","viewProps","accessibilityViewIsModal","config","useMemo","pressRectOffset","delayPressIn","event","onPressMove","eventHandlers","usePressability","jsxs","ref","collapsable","__DEV__","jsx","PressabilityDebugView","color","forcePressed","_useState","useState","_useState2","MemoedPressable","memo","forwardRef","displayName","_default","exports"],"sources":["Pressable.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  GestureResponderEvent,\n  LayoutChangeEvent,\n  MouseEvent,\n} from '../../Types/CoreEventTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\n\nimport {PressabilityDebugView} from '../../Pressability/PressabilityDebug';\nimport usePressability from '../../Pressability/usePressability';\nimport {type RectOrSize} from '../../StyleSheet/Rect';\nimport useMergeRefs from '../../Utilities/useMergeRefs';\nimport View from '../View/View';\nimport useAndroidRippleForView, {\n  type PressableAndroidRippleConfig,\n} from './useAndroidRippleForView';\nimport * as React from 'react';\nimport {useMemo, useRef, useState} from 'react';\n\ntype ViewStyleProp = $ElementType<React.ElementConfig<typeof View>, 'style'>;\n\nexport type PressableStateCallbackType = $ReadOnly<{\n  pressed: boolean,\n}>;\n\ntype PressableBaseProps = $ReadOnly<{\n  /**\n   * Whether a press gesture can be interrupted by a parent gesture such as a\n   * scroll event. Defaults to true.\n   */\n  cancelable?: ?boolean,\n\n  /**\n   * Either children or a render prop that receives a boolean reflecting whether\n   * the component is currently pressed.\n   */\n  children: React.Node | ((state: PressableStateCallbackType) => React.Node),\n\n  /**\n   * Duration to wait after hover in before calling `onHoverIn`.\n   */\n  delayHoverIn?: ?number,\n\n  /**\n   * Duration to wait after hover out before calling `onHoverOut`.\n   */\n  delayHoverOut?: ?number,\n\n  /**\n   * Duration (in milliseconds) from `onPressIn` before `onLongPress` is called.\n   */\n  delayLongPress?: ?number,\n\n  /**\n   * Whether the press behavior is disabled.\n   */\n  disabled?: ?boolean,\n\n  /**\n   * Additional distance outside of this view in which a press is detected.\n   */\n  hitSlop?: ?RectOrSize,\n\n  /**\n   * Additional distance outside of this view in which a touch is considered a\n   * press before `onPressOut` is triggered.\n   */\n  pressRetentionOffset?: ?RectOrSize,\n\n  /**\n   * Called when this view's layout changes.\n   */\n  onLayout?: ?(event: LayoutChangeEvent) => mixed,\n\n  /**\n   * Called when the hover is activated to provide visual feedback.\n   */\n  onHoverIn?: ?(event: MouseEvent) => mixed,\n\n  /**\n   * Called when the hover is deactivated to undo visual feedback.\n   */\n  onHoverOut?: ?(event: MouseEvent) => mixed,\n\n  /**\n   * Called when a long-tap gesture is detected.\n   */\n  onLongPress?: ?(event: GestureResponderEvent) => mixed,\n\n  /**\n   * Called when a single tap gesture is detected.\n   */\n  onPress?: ?(event: GestureResponderEvent) => mixed,\n\n  /**\n   * Called when a touch is engaged before `onPress`.\n   */\n  onPressIn?: ?(event: GestureResponderEvent) => mixed,\n\n  /**\n   * Called when a touch is released before `onPress`.\n   */\n  onPressOut?: ?(event: GestureResponderEvent) => mixed,\n\n  /**\n   * Either view styles or a function that receives a boolean reflecting whether\n   * the component is currently pressed and returns view styles.\n   */\n  style?:\n    | ViewStyleProp\n    | ((state: PressableStateCallbackType) => ViewStyleProp),\n\n  /**\n   * Identifier used to find this view in tests.\n   */\n  testID?: ?string,\n\n  /**\n   * If true, doesn't play system sound on touch.\n   */\n  android_disableSound?: ?boolean,\n\n  /**\n   * Enables the Android ripple effect and configures its color.\n   */\n  android_ripple?: ?PressableAndroidRippleConfig,\n\n  /**\n   * Used only for documentation or testing (e.g. snapshot testing).\n   */\n  testOnly_pressed?: ?boolean,\n\n  /**\n   * Duration to wait after press down before calling `onPressIn`.\n   */\n  unstable_pressDelay?: ?number,\n}>;\n\nexport type PressableProps = $ReadOnly<{\n  ...ViewProps,\n  ...PressableBaseProps,\n}>;\n\ntype Instance = React.ElementRef<typeof View>;\n\n/**\n * Component used to build display components that should respond to whether the\n * component is currently pressed or not.\n */\nfunction Pressable(\n  props: PressableProps,\n  forwardedRef: React.RefSetter<Instance>,\n): React.Node {\n  const {\n    accessible,\n    accessibilityState,\n    'aria-live': ariaLive,\n    android_disableSound,\n    android_ripple,\n    'aria-busy': ariaBusy,\n    'aria-checked': ariaChecked,\n    'aria-disabled': ariaDisabled,\n    'aria-expanded': ariaExpanded,\n    'aria-label': ariaLabel,\n    'aria-selected': ariaSelected,\n    cancelable,\n    children,\n    delayHoverIn,\n    delayHoverOut,\n    delayLongPress,\n    disabled,\n    focusable,\n    hitSlop,\n    onHoverIn,\n    onHoverOut,\n    onLongPress,\n    onPress,\n    onPressIn,\n    onPressOut,\n    pressRetentionOffset,\n    style,\n    testOnly_pressed,\n    unstable_pressDelay,\n    ...restProps\n  } = props;\n\n  const viewRef = useRef<Instance | null>(null);\n  const mergedRef = useMergeRefs(forwardedRef, viewRef);\n\n  const android_rippleConfig = useAndroidRippleForView(android_ripple, viewRef);\n\n  const [pressed, setPressed] = usePressState(testOnly_pressed === true);\n\n  const shouldUpdatePressed =\n    typeof children === 'function' || typeof style === 'function';\n\n  let _accessibilityState = {\n    busy: ariaBusy ?? accessibilityState?.busy,\n    checked: ariaChecked ?? accessibilityState?.checked,\n    disabled: ariaDisabled ?? accessibilityState?.disabled,\n    expanded: ariaExpanded ?? accessibilityState?.expanded,\n    selected: ariaSelected ?? accessibilityState?.selected,\n  };\n\n  _accessibilityState =\n    disabled != null ? {..._accessibilityState, disabled} : _accessibilityState;\n\n  const accessibilityValue = {\n    max: props['aria-valuemax'] ?? props.accessibilityValue?.max,\n    min: props['aria-valuemin'] ?? props.accessibilityValue?.min,\n    now: props['aria-valuenow'] ?? props.accessibilityValue?.now,\n    text: props['aria-valuetext'] ?? props.accessibilityValue?.text,\n  };\n\n  const accessibilityLiveRegion =\n    ariaLive === 'off' ? 'none' : ariaLive ?? props.accessibilityLiveRegion;\n\n  const accessibilityLabel = ariaLabel ?? props.accessibilityLabel;\n  const restPropsWithDefaults: React.ElementConfig<typeof View> = {\n    ...restProps,\n    ...android_rippleConfig?.viewProps,\n    accessible: accessible !== false,\n    accessibilityViewIsModal:\n      restProps['aria-modal'] ?? restProps.accessibilityViewIsModal,\n    accessibilityLiveRegion,\n    accessibilityLabel,\n    accessibilityState: _accessibilityState,\n    focusable: focusable !== false,\n    accessibilityValue,\n    hitSlop,\n  };\n\n  const config = useMemo(\n    () => ({\n      cancelable,\n      disabled,\n      hitSlop,\n      pressRectOffset: pressRetentionOffset,\n      android_disableSound,\n      delayHoverIn,\n      delayHoverOut,\n      delayLongPress,\n      delayPressIn: unstable_pressDelay,\n      onHoverIn,\n      onHoverOut,\n      onLongPress,\n      onPress,\n      onPressIn(event: GestureResponderEvent): void {\n        if (android_rippleConfig != null) {\n          android_rippleConfig.onPressIn(event);\n        }\n        shouldUpdatePressed && setPressed(true);\n        if (onPressIn != null) {\n          onPressIn(event);\n        }\n      },\n      onPressMove: android_rippleConfig?.onPressMove,\n      onPressOut(event: GestureResponderEvent): void {\n        if (android_rippleConfig != null) {\n          android_rippleConfig.onPressOut(event);\n        }\n        shouldUpdatePressed && setPressed(false);\n        if (onPressOut != null) {\n          onPressOut(event);\n        }\n      },\n    }),\n    [\n      android_disableSound,\n      android_rippleConfig,\n      cancelable,\n      delayHoverIn,\n      delayHoverOut,\n      delayLongPress,\n      disabled,\n      hitSlop,\n      onHoverIn,\n      onHoverOut,\n      onLongPress,\n      onPress,\n      onPressIn,\n      onPressOut,\n      pressRetentionOffset,\n      setPressed,\n      shouldUpdatePressed,\n      unstable_pressDelay,\n    ],\n  );\n  const eventHandlers = usePressability(config);\n\n  return (\n    <View\n      {...restPropsWithDefaults}\n      {...eventHandlers}\n      ref={mergedRef}\n      style={typeof style === 'function' ? style({pressed}) : style}\n      collapsable={false}>\n      {typeof children === 'function' ? children({pressed}) : children}\n      {__DEV__ ? <PressabilityDebugView color=\"red\" hitSlop={hitSlop} /> : null}\n    </View>\n  );\n}\n\nfunction usePressState(forcePressed: boolean): [boolean, (boolean) => void] {\n  const [pressed, setPressed] = useState(false);\n  return [pressed || forcePressed, setPressed];\n}\n\nconst MemoedPressable = React.memo(React.forwardRef(Pressable));\nMemoedPressable.displayName = 'Pressable';\n\nexport default (MemoedPressable: component(\n  ref?: React.RefSetter<React.ElementRef<typeof View>>,\n  ...props: PressableProps\n));\n"],"mappings":"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","ignoreList":[]}