c6a3b51784188417ddec97bcc402c141
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = overlay;
exports.isAnimatedValue = void 0;
var _reactNative = require("react-native");
var _color = _interopRequireDefault(require("color"));
var _DarkTheme = require("./themes/v2/DarkTheme");
function _interopRequireDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}
var isAnimatedValue = function isAnimatedValue(it) {
  return it instanceof _reactNative.Animated.Value;
};
exports.isAnimatedValue = isAnimatedValue;
function overlay(elevation) {
  var surfaceColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (_MD2DarkTheme$colors) {
    return (_MD2DarkTheme$colors = _DarkTheme.MD2DarkTheme.colors) === null || _MD2DarkTheme$colors === void 0 ? void 0 : _MD2DarkTheme$colors.surface;
  }();
  if (isAnimatedValue(elevation)) {
    var inputRange = [0, 1, 2, 3, 8, 24];
    return elevation.interpolate({
      inputRange: inputRange,
      outputRange: inputRange.map(function (elevation) {
        return calculateColor(surfaceColor, elevation);
      })
    });
  }
  return calculateColor(surfaceColor, elevation);
}
function calculateColor(surfaceColor) {
  var elevation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
  var overlayTransparency;
  if (elevation >= 1 && elevation <= 24) {
    overlayTransparency = elevationOverlayTransparency[elevation];
  } else if (elevation > 24) {
    overlayTransparency = elevationOverlayTransparency[24];
  } else {
    overlayTransparency = elevationOverlayTransparency[1];
  }
  return (0, _color.default)(surfaceColor).mix((0, _color.default)('white'), overlayTransparency * 0.01).hex();
}
var elevationOverlayTransparency = {
  1: 5,
  2: 7,
  3: 8,
  4: 9,
  5: 10,
  6: 11,
  7: 11.5,
  8: 12,
  9: 12.5,
  10: 13,
  11: 13.5,
  12: 14,
  13: 14.25,
  14: 14.5,
  15: 14.75,
  16: 15,
  17: 15.12,
  18: 15.24,
  19: 15.36,
  20: 15.48,
  21: 15.6,
  22: 15.72,
  23: 15.84,
  24: 16
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX2NvbG9yIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9EYXJrVGhlbWUiLCJlIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJpc0FuaW1hdGVkVmFsdWUiLCJpdCIsIkFuaW1hdGVkIiwiVmFsdWUiLCJleHBvcnRzIiwib3ZlcmxheSIsImVsZXZhdGlvbiIsInN1cmZhY2VDb2xvciIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsIl9NRDJEYXJrVGhlbWUkY29sb3JzIiwiTUQyRGFya1RoZW1lIiwiY29sb3JzIiwic3VyZmFjZSIsImlucHV0UmFuZ2UiLCJpbnRlcnBvbGF0ZSIsIm91dHB1dFJhbmdlIiwibWFwIiwiY2FsY3VsYXRlQ29sb3IiLCJvdmVybGF5VHJhbnNwYXJlbmN5IiwiZWxldmF0aW9uT3ZlcmxheVRyYW5zcGFyZW5jeSIsIm1peCIsImhleCJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdHlsZXMvb3ZlcmxheS50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFBQSxZQUFBLEdBQUFDLE9BQUE7QUFFQSxJQUFBQyxNQUFBLEdBQUFDLHNCQUFBLENBQUFGLE9BQUE7QUFFQSxJQUFBRyxVQUFBLEdBQUFILE9BQUE7QUFBcUQsU0FBQUUsdUJBQUFFLENBQUE7RUFBQSxPQUFBQSxDQUFBLElBQUFBLENBQUEsQ0FBQUMsVUFBQSxHQUFBRCxDQUFBO0lBQUFFLE9BQUEsRUFBQUY7RUFBQTtBQUFBO0FBRTlDLElBQU1HLGVBQWUsR0FDMUIsU0FEV0EsZUFBZUEsQ0FDMUJDLEVBQXFFO0VBQUEsT0FDNUNBLEVBQUUsWUFBWVQsWUFBQSxDQUFBVSxRQUFRLENBQUNDLEtBQUs7QUFBQTtBQUFDQyxPQUFBLENBQUFKLGVBQUEsR0FBQUEsZUFBQTtBQUV6QyxTQUFTSyxPQUFPQSxDQUM3QkMsU0FBWSxFQUVpRTtFQUFBLElBRDdFQyxZQUFv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