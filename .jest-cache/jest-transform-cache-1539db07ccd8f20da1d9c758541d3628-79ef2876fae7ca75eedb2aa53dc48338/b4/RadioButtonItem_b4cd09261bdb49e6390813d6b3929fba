0a53adeccd6599b9602422de03ef07cd
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.RadioButtonItem = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _RadioButton = _interopRequireDefault(require("./RadioButton"));
var _RadioButtonAndroid = _interopRequireDefault(require("./RadioButtonAndroid"));
var _RadioButtonGroup = require("./RadioButtonGroup");
var _RadioButtonIOS = _interopRequireDefault(require("./RadioButtonIOS"));
var _utils = require("./utils");
var _theming = require("../../core/theming");
var _TouchableRipple = _interopRequireDefault(require("../TouchableRipple/TouchableRipple"));
var _Text = _interopRequireDefault(require("../Typography/Text"));
function _interopRequireDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}
function _interopRequireWildcard(e, t) {
  if ("function" == typeof WeakMap) var r = new WeakMap(),
    n = new WeakMap();
  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {
    if (!t && e && e.__esModule) return e;
    var o,
      i,
      f = {
        __proto__: null,
        default: e
      };
    if (null === e || "object" != typeof e && "function" != typeof e) return f;
    if (o = t ? n : r) {
      if (o.has(e)) return o.get(e);
      o.set(e, f);
    }
    for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]);
    return f;
  })(e, t);
}
var RadioButtonItem = function RadioButtonItem(_ref) {
  var value = _ref.value,
    label = _ref.label,
    style = _ref.style,
    labelStyle = _ref.labelStyle,
    _onPress = _ref.onPress,
    onLongPress = _ref.onLongPress,
    disabled = _ref.disabled,
    color = _ref.color,
    uncheckedColor = _ref.uncheckedColor,
    rippleColor = _ref.rippleColor,
    status = _ref.status,
    themeOverrides = _ref.theme,
    background = _ref.background,
    _ref$accessibilityLab = _ref.accessibilityLabel,
    accessibilityLabel = _ref$accessibilityLab === void 0 ? label : _ref$accessibilityLab,
    testID = _ref.testID,
    mode = _ref.mode,
    _ref$position = _ref.position,
    position = _ref$position === void 0 ? 'trailing' : _ref$position,
    _ref$labelVariant = _ref.labelVariant,
    labelVariant = _ref$labelVariant === void 0 ? 'bodyLarge' : _ref$labelVariant,
    labelMaxFontSizeMultiplier = _ref.labelMaxFontSizeMultiplier,
    hitSlop = _ref.hitSlop;
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var radioButtonProps = {
    value: value,
    disabled: disabled,
    status: status,
    color: color,
    theme: theme,
    uncheckedColor: uncheckedColor
  };
  var isLeading = position === 'leading';
  var radioButton;
  if (mode === 'android') {
    radioButton = React.createElement(_RadioButtonAndroid.default, radioButtonProps);
  } else if (mode === 'ios') {
    radioButton = React.createElement(_RadioButtonIOS.default, radioButtonProps);
  } else {
    radioButton = React.createElement(_RadioButton.default, radioButtonProps);
  }
  var textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;
  var disabledTextColor = theme.isV3 ? theme.colors.onSurfaceDisabled : theme.colors.disabled;
  var textAlign = isLeading ? 'right' : 'left';
  var computedStyle = {
    color: disabled ? disabledTextColor : textColor,
    textAlign: textAlign
  };
  return React.createElement(_RadioButtonGroup.RadioButtonContext.Consumer, null, function (context) {
    var checked = (0, _utils.isChecked)({
      contextValue: context === null || context === void 0 ? void 0 : context.value,
      status: status,
      value: value
    }) === 'checked';
    return React.createElement(_TouchableRipple.default, {
      onPress: function onPress(event) {
        return (0, _utils.handlePress)({
          onPress: _onPress,
          onValueChange: context === null || context === void 0 ? void 0 : context.onValueChange,
          value: value,
          event: event
        });
      },
      onLongPress: onLongPress,
      accessibilityLabel: accessibilityLabel,
      accessibilityRole: "radio",
      accessibilityState: {
        checked: checked,
        disabled: disabled
      },
      testID: testID,
      disabled: disabled,
      background: background,
      theme: theme,
      rippleColor: rippleColor,
      hitSlop: hitSlop
    }, React.createElement(_reactNative.View, {
      style: [styles.container, style],
      pointerEvents: "none"
    }, isLeading && radioButton, React.createElement(_Text.default, {
      variant: labelVariant,
      style: [styles.label, !theme.isV3 && styles.font, computedStyle, labelStyle],
      maxFontSizeMultiplier: labelMaxFontSizeMultiplier
    }, label), !isLeading && radioButton));
  });
};
exports.RadioButtonItem = RadioButtonItem;
RadioButtonItem.displayName = 'RadioButton.Item';
var _default = exports.default = RadioButtonItem;
var styles = _reactNative.StyleSheet.create({
  container: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingVertical: 8,
    paddingHorizontal: 16
  },
  label: {
    flexShrink: 1,
    flexGrow: 1
  },
  font: {
    fontSize: 16
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9SYWRpb0J1dHRvbiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfUmFkaW9CdXR0b25BbmRyb2lkIiwiX1JhZGlvQnV0dG9uR3JvdXAiLCJfUmFkaW9CdXR0b25JT1MiLCJfdXRpbHMiLCJfdGhlbWluZyIsIl9Ub3VjaGFibGVSaXBwbGUiLCJfVGV4dCIsImUiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInQiLCJXZWFrTWFwIiwiciIsIm4iLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJoYXMiLCJnZXQiLCJzZXQiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIlJhZGlvQnV0dG9uSXRlbSIsIl9yZWYiLCJ2YWx1ZSIsImxhYmVsIiwic3R5bGUiLCJsYWJlbFN0eWxlIiwib25QcmVzcyIsIm9uTG9uZ1ByZXNzIiwiZGlzYWJsZWQiLCJjb2xvciIsInVuY2hlY2tlZENvbG9yIiwicmlwcGxlQ29sb3IiLCJzdGF0dXMiLCJ0aGVtZU92ZXJyaWRlcyIsInRoZW1lIiwiYmFja2dyb3VuZCIsIl9yZWYkYWNjZXNzaWJpbGl0eUxhYiIsImFjY2Vzc2liaWxpdHlMYWJlbCIsInRlc3RJRCIsIm1vZGUiLCJfcmVmJHBvc2l0aW9uIiwicG9zaXRpb24iLCJfcmVmJGxhYmVsVmFyaWFudCIsImxhYmVsVmFyaWFudCIsImxhYmVsTWF4Rm9udFNpemVNdWx0aXBsaWVyIiwiaGl0U2xvcCIsInVzZUludGVybmFsVGhlbWUiLCJyYWRpb0J1dHRvblByb3BzIiwiaXNMZWFkaW5nIiwicmFkaW9CdXR0b24iLCJjcmVhdGVFbGVtZW50IiwidGV4dENvbG9yIiwiaXNWMyIsImNvbG9ycyIsIm9uU3VyZmFjZSIsInRleHQiLCJkaXNhYmxlZFRleHRDb2xvciIsIm9uU3VyZmFjZURpc2FibGVkIiwidGV4dEFsaWduIiwiY29tcHV0ZWRTdHlsZSIsIlJhZGlvQnV0dG9uQ29udGV4dCIsIkNvbnN1bWVyIiwiY29udGV4dCIsImNoZWNrZWQiLCJpc0NoZWNrZWQiLCJjb250ZXh0VmFsdWUiLCJldmVudCIsImhhbmRsZVByZXNzIiwib25WYWx1ZUNoYW5nZSIsImFjY2Vzc2liaWxpdHlSb2xlIiwiYWNjZXNzaWJpbGl0eVN0YXRlIiwiVmlldyIsInN0eWxlcyIsImNvbnRhaW5lciIsInBvaW50ZXJFdmVudHMiLCJ2YXJpYW50IiwiZm9udCIsIm1heEZvbnRTaXplTXVsdGlwbGllciIsImV4cG9ydHMiLCJkaXNwbGF5TmFtZSIsIl9kZWZhdWx0IiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImZsZXhEaXJlY3Rpb24iLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJwYWRkaW5nVmVydGljYWwiLCJwYWRkaW5nSG9yaXpvbnRhbCIsImZsZXhTaHJpbmsiLCJmbGV4R3JvdyIsImZvbnRTaXplIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvUmFkaW9CdXR0b24vUmFkaW9CdXR0b25JdGVtLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBQUEsS0FBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBV0EsSUFBQUUsWUFBQSxHQUFBQyxzQkFBQSxDQUFBSCxPQUFBO0FBQ0EsSUFBQUksbUJBQUEsR0FBQUQsc0JBQUEsQ0FBQUgsT0FBQTtBQUNBLElBQUFLLGlCQUFBLEdBQUFMLE9BQUE7QUFDQSxJQUFBTSxlQUFBLEdBQUFILHNCQUFBLENBQUFILE9BQUE7QUFDQSxJQUFBTyxNQUFBLEdBQUFQLE9BQUE7QUFDQSxJQUFBUSxRQUFBLEdBQUFSLE9BQUE7QUFFQSxJQUFBUyxnQkFBQSxHQUFBTixzQkFBQSxDQUFBSCxPQUFBO0FBR0EsSUFBQVUsS0FBQSxHQUFBUCxz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