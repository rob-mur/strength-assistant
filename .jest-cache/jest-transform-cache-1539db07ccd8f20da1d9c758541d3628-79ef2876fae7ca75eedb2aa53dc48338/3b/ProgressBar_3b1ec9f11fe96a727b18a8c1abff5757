b8d39e234cd537e3516d25c756b3a203
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _slicedToArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["color", "indeterminate", "progress", "visible", "theme", "animatedValue", "style", "fillStyle", "testID"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _color = _interopRequireDefault(require("color"));
var _theming = require("../core/theming");
function _interopRequireDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}
function _interopRequireWildcard(e, t) {
  if ("function" == typeof WeakMap) var r = new WeakMap(),
    n = new WeakMap();
  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {
    if (!t && e && e.__esModule) return e;
    var o,
      i,
      f = {
        __proto__: null,
        default: e
      };
    if (null === e || "object" != typeof e && "function" != typeof e) return f;
    if (o = t ? n : r) {
      if (o.has(e)) return o.get(e);
      o.set(e, f);
    }
    for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]);
    return f;
  })(e, t);
}
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
var INDETERMINATE_DURATION = 2000;
var INDETERMINATE_MAX_WIDTH = 0.6;
var isRTL = _reactNative.I18nManager.isRTL;
var ProgressBar = function ProgressBar(_ref) {
  var color = _ref.color,
    indeterminate = _ref.indeterminate,
    _ref$progress = _ref.progress,
    progress = _ref$progress === void 0 ? 0 : _ref$progress,
    _ref$visible = _ref.visible,
    visible = _ref$visible === void 0 ? true : _ref$visible,
    themeOverrides = _ref.theme,
    animatedValue = _ref.animatedValue,
    style = _ref.style,
    fillStyle = _ref.fillStyle,
    _ref$testID = _ref.testID,
    testID = _ref$testID === void 0 ? 'progress-bar' : _ref$testID,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var _theme$colors;
  var isWeb = _reactNative.Platform.OS === 'web';
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var _React$useRef = React.useRef(new _reactNative.Animated.Value(0)),
    timer = _React$useRef.current;
  var _React$useRef2 = React.useRef(new _reactNative.Animated.Value(0)),
    fade = _React$useRef2.current;
  var passedAnimatedValue = React.useRef(animatedValue);
  var _React$useState = React.useState(0),
    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
    width = _React$useState2[0],
    setWidth = _React$useState2[1];
  var _React$useState3 = React.useState(0),
    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),
    prevWidth = _React$useState4[0],
    setPrevWidth = _React$useState4[1];
  var indeterminateAnimation = React.useRef(null);
  var scale = theme.animation.scale;
  React.useEffect(function () {
    passedAnimatedValue.current = animatedValue;
  });
  var startAnimation = React.useCallback(function () {
    _reactNative.Animated.timing(fade, {
      duration: 200 * scale,
      toValue: 1,
      useNativeDriver: true,
      isInteraction: false
    }).start();
    var externalAnimation = typeof passedAnimatedValue.current !== 'undefined' && passedAnimatedValue.current >= 0;
    if (externalAnimation) {
      return;
    }
    if (indeterminate) {
      if (!indeterminateAnimation.current) {
        indeterminateAnimation.current = _reactNative.Animated.timing(timer, {
          duration: INDETERMINATE_DURATION,
          toValue: 1,
          useNativeDriver: !isWeb,
          isInteraction: false
        });
      }
      timer.setValue(0);
      _reactNative.Animated.loop(indeterminateAnimation.current).start();
    } else {
      _reactNative.Animated.timing(timer, {
        duration: 200 * scale,
        toValue: progress ? progress : 0,
        useNativeDriver: true,
        isInteraction: false
      }).start();
    }
  }, [fade, scale, indeterminate, timer, progress, isWeb]);
  var stopAnimation = React.useCallback(function () {
    if (indeterminateAnimation.current) {
      indeterminateAnimation.current.stop();
    }
    _reactNative.Animated.timing(fade, {
      duration: 200 * scale,
      toValue: 0,
      useNativeDriver: true,
      isInteraction: false
    }).start();
  }, [fade, scale]);
  React.useEffect(function () {
    if (visible) startAnimation();else stopAnimation();
  }, [visible, startAnimation, stopAnimation]);
  React.useEffect(function () {
    if (animatedValue && animatedValue >= 0) {
      timer.setValue(animatedValue);
    }
  }, [animatedValue, timer]);
  React.useEffect(function () {
    if (visible && prevWidth === 0) {
      startAnimation();
    }
  }, [prevWidth, startAnimation, visible]);
  var onLayout = function onLayout(event) {
    setPrevWidth(width);
    setWidth(event.nativeEvent.layout.width);
  };
  var tintColor = color || ((_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.primary);
  var trackTintColor = theme.isV3 ? theme.colors.surfaceVariant : (0, _color.default)(tintColor).alpha(0.38).rgb().string();
  return React.createElement(_reactNative.View, _extends({
    onLayout: onLayout
  }, rest, {
    accessible: true,
    accessibilityRole: "progressbar",
    accessibilityState: {
      busy: visible
    },
    accessibilityValue: indeterminate ? {} : {
      min: 0,
      max: 100,
      now: Math.round(progress * 100)
    },
    style: isWeb && styles.webContainer,
    testID: testID
  }), React.createElement(_reactNative.Animated.View, {
    style: [styles.container, {
      backgroundColor: trackTintColor,
      opacity: fade
    }, style]
  }, width ? React.createElement(_reactNative.Animated.View, {
    testID: `${testID}-fill`,
    style: [styles.progressBar, {
      width: width,
      backgroundColor: tintColor,
      transform: [{
        translateX: timer.interpolate(indeterminate ? {
          inputRange: [0, 0.5, 1],
          outputRange: [(isRTL ? 1 : -1) * 0.5 * width, (isRTL ? 1 : -1) * 0.5 * INDETERMINATE_MAX_WIDTH * width, (isRTL ? -1 : 1) * 0.7 * width]
        } : {
          inputRange: [0, 1],
          outputRange: [(isRTL ? 1 : -1) * 0.5 * width, 0]
        })
      }, {
        scaleX: timer.interpolate(indeterminate ? {
          inputRange: [0, 0.5, 1],
          outputRange: [0.0001, INDETERMINATE_MAX_WIDTH, 0.0001]
        } : {
          inputRange: [0, 1],
          outputRange: [0.0001, 1]
        })
      }]
    }, fillStyle]
  }) : null));
};
var styles = _reactNative.StyleSheet.create({
  container: {
    height: 4,
    overflow: 'hidden'
  },
  webContainer: {
    width: '100%',
    height: '100%'
  },
  progressBar: {
    flex: 1
  }
});
var _default = exports.default = ProgressBar;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9jb2xvciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfdGhlbWluZyIsImUiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInQiLCJXZWFrTWFwIiwiciIsIm4iLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJoYXMiLCJnZXQiLCJzZXQiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIl9leHRlbmRzIiwiYXNzaWduIiwiYmluZCIsImFyZ3VtZW50cyIsImxlbmd0aCIsImFwcGx5IiwiSU5ERVRFUk1JTkFURV9EVVJBVElPTiIsIklOREVURVJNSU5BVEVfTUFYX1dJRFRIIiwiaXNSVEwiLCJJMThuTWFuYWdlciIsIlByb2dyZXNzQmFyIiwiX3JlZiIsImNvbG9yIiwiaW5kZXRlcm1pbmF0ZSIsIl9yZWYkcHJvZ3Jlc3MiLCJwcm9ncmVzcyIsIl9yZWYkdmlzaWJsZSIsInZpc2libGUiLCJ0aGVtZU92ZXJyaWRlcyIsInRoZW1lIiwiYW5pbWF0ZWRWYWx1ZSIsInN0eWxlIiwiZmlsbFN0eWxlIiwiX3JlZiR0ZXN0SUQiLCJ0ZXN0SUQiLCJyZXN0IiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzMiIsIl9leGNsdWRlZCIsIl90aGVtZSRjb2xvcnMiLCJpc1dlYiIsIlBsYXRmb3JtIiwiT1MiLCJ1c2VJbnRlcm5hbFRoZW1lIiwiX1JlYWN0JHVzZVJlZiIsInVzZVJlZiIsIkFuaW1hdGVkIiwiVmFsdWUiLCJ0aW1lciIsImN1cnJlbnQiLCJfUmVhY3QkdXNlUmVmMiIsImZhZGUiLCJwYXNzZWRBbmltYXRlZFZhbHVlIiwiX1JlYWN0JHVzZVN0YXRlIiwidXNlU3RhdGUiLCJfUmVhY3QkdXNlU3RhdGUyIiwiX3NsaWNlZFRvQXJyYXkyIiwid2lkdGgiLCJzZXRXaWR0aCIsIl9SZWFjdCR1c2VTdGF0ZTMiLCJfUmVhY3QkdXNlU3RhdGU0IiwicHJldldpZHRoIiwic2V0UHJldldpZHRoIiwiaW5kZXRlcm1pbmF0ZUFuaW1hdGlvbiIsInNjYWxlIiwiYW5pbWF0aW9uIiwidXNlRWZmZWN0Iiwic3RhcnRBbmltYXRpb24iLCJ1c2VDYWxsYmFjayIsInRpbWluZyIsImR1cmF0aW9uIiwidG9WYWx1ZSIsInVzZU5hdGl2ZURyaXZlciIsImlzSW50ZXJhY3Rpb24iLCJzdGFydCIsImV4dGVybmFsQW5pbWF0aW9uIiwic2V0VmFsdWUiLCJsb29wIiwic3RvcEFuaW1hdGlvbiIsInN0b3AiLCJvbkxheW91dCIsImV2ZW50IiwibmF0aXZlRXZlbnQiLCJsYXlvdXQiLCJ0aW50Q29sb3IiLCJjb2xvcnMiLCJwcmltYXJ5IiwidHJhY2tUaW50Q29sb3IiLCJpc1YzIiwic3VyZmFjZVZhcmlhbnQiLCJhbHBoYSIsInJnYiIsInN0cmluZyIsImNyZWF0ZUVsZW1lbnQiLCJWaWV3IiwiYWNjZXNzaWJsZSIsImFjY2Vzc2liaWxpdHlSb2xlIiwiYWNjZXNzaWJpbGl0eVN0YXRlIiwiYnVzeSIsImFjY2Vzc2liaWxpdHlWYWx1ZSIsIm1pbiIsIm1heCIsIm5vdyIsIk1hdGgiLCJyb3VuZCIsInN0eWxlcyIsIndlYkNvbnRhaW5lciIsImNvbnRhaW5lciIsImJhY2tncm91bmRDb2xvciIsIm9wYWNpdHkiLCJwcm9ncmVzc0JhciIsInRyYW5zZm9ybSIsInRyYW5zbGF0ZVgiLCJpbnRlcnBvbGF0ZSIsImlucHV0UmFuZ2UiLCJvdXRwdXRSYW5nZSIsInNjYWxlWCIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJoZWlnaHQiLCJvdmVyZmxvdyIsImZsZXgiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9Qcm9ncmVzc0Jhci50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxJQUFBQSxL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aEUsS0FBSyxDQUFDaUUsV0FBVyxDQUMzQnpGLGFBQWEsR0FDVDtVQUNFMEYsVUFBVSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7VUFDdkJDLFdBQVcsRUFBRSxDQUNYLENBQUNoRyxLQUFLLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEdBQUcsR0FBR3NDLEtBQUssRUFDOUIsQ0FBQ3RDLEtBQUssR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQ2IsR0FBRyxHQUNIRCx1QkFBdUIsR0FDdkJ1QyxLQUFLLEVBQ1AsQ0FBQ3RDLEtBQUssR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxHQUFHc0MsS0FBSztRQUVsQyxDQUFDLEdBQ0Q7VUFDRXlELFVBQVUsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7VUFDbEJDLFdBQVcsRUFBRSxDQUFDLENBQUNoRyxLQUFLLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEdBQUcsR0FBR3NDLEtBQUssRUFBRSxDQUFDO1FBQ2pELENBQ047TUFDRixDQUFDLEVBQ0Q7UUFFRTJELE1BQU0sRUFBRXBFLEtBQUssQ0FBQ2lFLFdBQVcsQ0FDdkJ6RixhQUFhLEdBQ1Q7VUFDRTBGLFVBQVUsRUFBRSxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1VBQ3ZCQyxXQUFXLEVBQUUsQ0FDWCxNQUFNLEVBQ05qRyx1QkFBdUIsRUFDdkIsTUFBTTtRQUVWLENBQUMsR0FDRDtVQUNFZ0csVUFBVSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztVQUNsQkMsV0FBVyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDekIsQ0FDTjtNQUNGLENBQUM7SUFFTCxDQUFDLEVBQ0RsRixTQUFTO0VBQ1QsQ0FDSCxDQUFDLEdBQ0EsSUFDUyxDQUNYLENBQUM7QUFFWCxDQUFDO0FBRUQsSUFBTXdFLE1BQU0sR0FBR3JILFlBQUEsQ0FBQWlJLFVBQVUsQ0FBQ0MsTUFBTSxDQUFDO0VBQy9CWCxTQUFTLEVBQUU7SUFDVFksTUFBTSxFQUFFLENBQUM7SUFDVEMsUUFBUSxFQUFFO0VBQ1osQ0FBQztFQUNEZCxZQUFZLEVBQUU7SUFDWmpELEtBQUssRUFBRSxNQUFNO0lBQ2I4RCxNQUFNLEVBQUU7RUFDVixDQUFDO0VBQ0RULFdBQVcsRUFBRTtJQUNYVyxJQUFJLEVBQUU7RUFDUjtBQUNGLENBQUMsQ0FBQztBQUFDLElBQUFDLFFBQUEsR0FBQUMsT0FBQSxDQUFBakksT0FBQSxHQUVZMkIsV0FBVyIsImlnbm9yZUxpc3QiOltdfQ==