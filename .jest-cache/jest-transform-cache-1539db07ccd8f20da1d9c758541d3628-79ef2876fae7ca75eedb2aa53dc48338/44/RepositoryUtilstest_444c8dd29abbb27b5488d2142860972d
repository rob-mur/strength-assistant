4afc8d8d45a15faef61d36ab0b157fbe
var _RepositoryUtils = require("../../../lib/repo/utils/RepositoryUtils");
describe('RepositoryUtils', function () {
  describe('validateExerciseData', function () {
    test('validates correct exercise data', function () {
      expect(_RepositoryUtils.RepositoryUtils.validateExerciseData({
        name: 'Push-ups'
      })).toBe(true);
      expect(_RepositoryUtils.RepositoryUtils.validateExerciseData({
        name: 'Pull-ups',
        created_at: '2023-01-01'
      })).toBe(true);
    });
    test('rejects null and undefined data', function () {
      expect(_RepositoryUtils.RepositoryUtils.validateExerciseData(null)).toBe(false);
      expect(_RepositoryUtils.RepositoryUtils.validateExerciseData(undefined)).toBe(false);
    });
    test('rejects non-object data', function () {
      expect(_RepositoryUtils.RepositoryUtils.validateExerciseData('string')).toBe(false);
      expect(_RepositoryUtils.RepositoryUtils.validateExerciseData(123)).toBe(false);
      expect(_RepositoryUtils.RepositoryUtils.validateExerciseData(true)).toBe(false);
    });
    test('rejects missing or invalid name field', function () {
      expect(_RepositoryUtils.RepositoryUtils.validateExerciseData({})).toBe(false);
      expect(_RepositoryUtils.RepositoryUtils.validateExerciseData({
        name: null
      })).toBe(false);
      expect(_RepositoryUtils.RepositoryUtils.validateExerciseData({
        name: 123
      })).toBe(false);
      expect(_RepositoryUtils.RepositoryUtils.validateExerciseData({
        name: ''
      })).toBe(false);
      expect(_RepositoryUtils.RepositoryUtils.validateExerciseData({
        name: '   '
      })).toBe(false);
    });
  });
  describe('getExercisesCollectionPath', function () {
    test('returns correct path for user ID', function () {
      var testUserId = 'user123';
      expect(_RepositoryUtils.RepositoryUtils.getExercisesCollectionPath(testUserId)).toBe(`users/${testUserId}/exercises`);
      expect(_RepositoryUtils.RepositoryUtils.getExercisesCollectionPath('another-user')).toBe('users/another-user/exercises');
    });
  });
  describe('validateExerciseId', function () {
    test('accepts valid exercise IDs', function () {
      expect(function () {
        return _RepositoryUtils.RepositoryUtils.validateExerciseId('valid-id');
      }).not.toThrow();
      expect(function () {
        return _RepositoryUtils.RepositoryUtils.validateExerciseId('123');
      }).not.toThrow();
      expect(function () {
        return _RepositoryUtils.RepositoryUtils.validateExerciseId('uuid-12345');
      }).not.toThrow();
    });
    test('rejects invalid exercise IDs', function () {
      expect(function () {
        return _RepositoryUtils.RepositoryUtils.validateExerciseId('');
      }).toThrow('Valid exerciseId is required');
      expect(function () {
        return _RepositoryUtils.RepositoryUtils.validateExerciseId('   ');
      }).toThrow('Valid exerciseId is required');
      expect(function () {
        return _RepositoryUtils.RepositoryUtils.validateExerciseId(null);
      }).toThrow('Valid exerciseId is required');
      expect(function () {
        return _RepositoryUtils.RepositoryUtils.validateExerciseId(undefined);
      }).toThrow('Valid exerciseId is required');
      expect(function () {
        return _RepositoryUtils.RepositoryUtils.validateExerciseId(123);
      }).toThrow('Valid exerciseId is required');
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfUmVwb3NpdG9yeVV0aWxzIiwicmVxdWlyZSIsImRlc2NyaWJlIiwidGVzdCIsImV4cGVjdCIsIlJlcG9zaXRvcnlVdGlscyIsInZhbGlkYXRlRXhlcmNpc2VEYXRhIiwibmFtZSIsInRvQmUiLCJjcmVhdGVkX2F0IiwidW5kZWZpbmVkIiwidGVzdFVzZXJJZCIsImdldEV4ZXJjaXNlc0NvbGxlY3Rpb25QYXRoIiwidmFsaWRhdGVFeGVyY2lzZUlkIiwibm90IiwidG9UaHJvdyJdLCJzb3VyY2VzIjpbIlJlcG9zaXRvcnlVdGlscy10ZXN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlcG9zaXRvcnlVdGlscyB9IGZyb20gJy4uLy4uLy4uL2xpYi9yZXBvL3V0aWxzL1JlcG9zaXRvcnlVdGlscyc7XG5cbmRlc2NyaWJlKCdSZXBvc2l0b3J5VXRpbHMnLCAoKSA9PiB7XG4gIGRlc2NyaWJlKCd2YWxpZGF0ZUV4ZXJjaXNlRGF0YScsICgpID0+IHtcbiAgICB0ZXN0KCd2YWxpZGF0ZXMgY29ycmVjdCBleGVyY2lzZSBkYXRhJywgKCkgPT4ge1xuICAgICAgZXhwZWN0KFJlcG9zaXRvcnlVdGlscy52YWxpZGF0ZUV4ZXJjaXNlRGF0YSh7IG5hbWU6ICdQdXNoLXVwcycgfSkpLnRvQmUodHJ1ZSk7XG4gICAgICBleHBlY3QoUmVwb3NpdG9yeVV0aWxzLnZhbGlkYXRlRXhlcmNpc2VEYXRhKHsgbmFtZTogJ1B1bGwtdXBzJywgY3JlYXRlZF9hdDogJzIwMjMtMDEtMDEnIH0pKS50b0JlKHRydWUpO1xuICAgIH0pO1xuXG4gICAgdGVzdCgncmVqZWN0cyBudWxsIGFuZCB1bmRlZmluZWQgZGF0YScsICgpID0+IHtcbiAgICAgIGV4cGVjdChSZXBvc2l0b3J5VXRpbHMudmFsaWRhdGVFeGVyY2lzZURhdGEobnVsbCkpLnRvQmUoZmFsc2UpO1xuICAgICAgZXhwZWN0KFJlcG9zaXRvcnlVdGlscy52YWxpZGF0ZUV4ZXJjaXNlRGF0YSh1bmRlZmluZWQpKS50b0JlKGZhbHNlKTtcbiAgICB9KTtcblxuICAgIHRlc3QoJ3JlamVjdHMgbm9uLW9iamVjdCBkYXRhJywgKCkgPT4ge1xuICAgICAgZXhwZWN0KFJlcG9zaXRvcnlVdGlscy52YWxpZGF0ZUV4ZXJjaXNlRGF0YSgnc3RyaW5nJykpLnRvQmUoZmFsc2UpO1xuICAgICAgZXhwZWN0KFJlcG9zaXRvcnlVdGlscy52YWxpZGF0ZUV4ZXJjaXNlRGF0YSgxMjMpKS50b0JlKGZhbHNlKTtcbiAgICAgIGV4cGVjdChSZXBvc2l0b3J5VXRpbHMudmFsaWRhdGVFeGVyY2lzZURhdGEodHJ1ZSkpLnRvQmUoZmFsc2UpO1xuICAgIH0pO1xuXG4gICAgdGVzdCgncmVqZWN0cyBtaXNzaW5nIG9yIGludmFsaWQgbmFtZSBmaWVsZCcsICgpID0+IHtcbiAgICAgIGV4cGVjdChSZXBvc2l0b3J5VXRpbHMudmFsaWRhdGVFeGVyY2lzZURhdGEoe30pKS50b0JlKGZhbHNlKTtcbiAgICAgIGV4cGVjdChSZXBvc2l0b3J5VXRpbHMudmFsaWRhdGVFeGVyY2lzZURhdGEoeyBuYW1lOiBudWxsIH0pKS50b0JlKGZhbHNlKTtcbiAgICAgIGV4cGVjdChSZXBvc2l0b3J5VXRpbHMudmFsaWRhdGVFeGVyY2lzZURhdGEoeyBuYW1lOiAxMjMgfSkpLnRvQmUoZmFsc2UpO1xuICAgICAgZXhwZWN0KFJlcG9zaXRvcnlVdGlscy52YWxpZGF0ZUV4ZXJjaXNlRGF0YSh7IG5hbWU6ICcnIH0pKS50b0JlKGZhbHNlKTtcbiAgICAgIGV4cGVjdChSZXBvc2l0b3J5VXRpbHMudmFsaWRhdGVFeGVyY2lzZURhdGEoeyBuYW1lOiAnICAgJyB9KSkudG9CZShmYWxzZSk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdnZXRFeGVyY2lzZXNDb2xsZWN0aW9uUGF0aCcsICgpID0+IHtcbiAgICB0ZXN0KCdyZXR1cm5zIGNvcnJlY3QgcGF0aCBmb3IgdXNlciBJRCcsICgpID0+IHtcbiAgICAgIGNvbnN0IHRlc3RVc2VySWQgPSAndXNlcjEyMyc7XG4gICAgICBleHBlY3QoUmVwb3NpdG9yeVV0aWxzLmdldEV4ZXJjaXNlc0NvbGxlY3Rpb25QYXRoKHRlc3RVc2VySWQpKS50b0JlKGB1c2Vycy8ke3Rlc3RVc2VySWR9L2V4ZXJjaXNlc2ApO1xuICAgICAgZXhwZWN0KFJlcG9zaXRvcnlVdGlscy5nZXRFeGVyY2lzZXNDb2xsZWN0aW9uUGF0aCgnYW5vdGhlci11c2VyJykpLnRvQmUoJ3VzZXJzL2Fub3RoZXItdXNlci9leGVyY2lzZXMnKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ3ZhbGlkYXRlRXhlcmNpc2VJZCcsICgpID0+IHtcbiAgICB0ZXN0KCdhY2NlcHRzIHZhbGlkIGV4ZXJjaXNlIElEcycsICgpID0+IHtcbiAgICAgIGV4cGVjdCgoKSA9PiBSZXBvc2l0b3J5VXRpbHMudmFsaWRhdGVFeGVyY2lzZUlkKCd2YWxpZC1pZCcpKS5ub3QudG9UaHJvdygpO1xuICAgICAgZXhwZWN0KCgpID0+IFJlcG9zaXRvcnlVdGlscy52YWxpZGF0ZUV4ZXJjaXNlSWQoJzEyMycpKS5ub3QudG9UaHJvdygpO1xuICAgICAgZXhwZWN0KCgpID0+IFJlcG9zaXRvcnlVdGlscy52YWxpZGF0ZUV4ZXJjaXNlSWQoJ3V1aWQtMTIzNDUnKSkubm90LnRvVGhyb3coKTtcbiAgICB9KTtcblxuICAgIHRlc3QoJ3JlamVjdHMgaW52YWxpZCBleGVyY2lzZSBJRHMnLCAoKSA9PiB7XG4gICAgICBleHBlY3QoKCkgPT4gUmVwb3NpdG9yeVV0aWxzLnZhbGlkYXRlRXhlcmNpc2VJZCgnJykpLnRvVGhyb3coJ1ZhbGlkIGV4ZXJjaXNlSWQgaXMgcmVxdWlyZWQnKTtcbiAgICAgIGV4cGVjdCgoKSA9PiBSZXBvc2l0b3J5VXRpbHMudmFsaWRhdGVFeGVyY2lzZUlkKCcgICAnKSkudG9UaHJvdygnVmFsaWQgZXhlcmNpc2VJZCBpcyByZXF1aXJlZCcpO1xuICAgICAgZXhwZWN0KCgpID0+IFJlcG9zaXRvcnlVdGlscy52YWxpZGF0ZUV4ZXJjaXNlSWQobnVsbCBhcyBhbnkpKS50b1Rocm93KCdWYWxpZCBleGVyY2lzZUlkIGlzIHJlcXVpcmVkJyk7XG4gICAgICBleHBlY3QoKCkgPT4gUmVwb3NpdG9yeVV0aWxzLnZhbGlkYXRlRXhlcmNpc2VJZCh1bmRlZmluZWQgYXMgYW55KSkudG9UaHJvdygnVmFsaWQgZXhlcmNpc2VJZCBpcyByZXF1aXJlZCcpO1xuICAgICAgZXhwZWN0KCgpID0+IFJlcG9zaXRvcnlVdGlscy52YWxpZGF0ZUV4ZXJjaXNlSWQoMTIzIGFzIGFueSkpLnRvVGhyb3coJ1ZhbGlkIGV4ZXJjaXNlSWQgaXMgcmVxdWlyZWQnKTtcbiAgICB9KTtcbiAgfSk7XG59KTsiXSwibWFwcGluZ3MiOiJBQUFBLElBQUFBLGdCQUFBLEdBQUFDLE9BQUE7QUFFQUMsUUFBUSxDQUFDLGlCQUFpQixFQUFFLFlBQU07RUFDaENBLFFBQVEsQ0FBQyxzQkFBc0IsRUFBRSxZQUFNO0lBQ3JDQyxJQUFJLENBQUMsaUNBQWlDLEVBQUUsWUFBTTtNQUM1Q0MsTUFBTSxDQUFDQyxnQ0FBZSxDQUFDQyxvQkFBb0IsQ0FBQztRQUFFQyxJQUFJLEVBQUU7TUFBVyxDQUFDLENBQUMsQ0FBQyxDQUFDQyxJQUFJLENBQUMsSUFBSSxDQUFDO01BQzdFSixNQUFNLENBQUNDLGdDQUFlLENBQUNDLG9CQUFvQixDQUFDO1FBQUVDLElBQUksRUFBRSxVQUFVO1FBQUVFLFVBQVUsRUFBRTtNQUFhLENBQUMsQ0FBQyxDQUFDLENBQUNELElBQUksQ0FBQyxJQUFJLENBQUM7SUFDekcsQ0FBQyxDQUFDO0lBRUZMLElBQUksQ0FBQyxpQ0FBaUMsRUFBRSxZQUFNO01BQzVDQyxNQUFNLENBQUNDLGdDQUFlLENBQUNDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUNFLElBQUksQ0FBQyxLQUFLLENBQUM7TUFDOURKLE1BQU0sQ0FBQ0MsZ0NBQWUsQ0FBQ0Msb0JBQW9CLENBQUNJLFNBQVMsQ0FBQyxDQUFDLENBQUNGLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDckUsQ0FB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