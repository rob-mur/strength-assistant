4dde8ee4bcba179f445193e61ac068c2
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["status", "disabled", "onPress", "theme", "testID"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.CheckboxIOS = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _utils = require("./utils");
var _theming = require("../../core/theming");
var _MaterialCommunityIcon = _interopRequireDefault(require("../MaterialCommunityIcon"));
var _TouchableRipple = _interopRequireDefault(require("../TouchableRipple/TouchableRipple"));
function _interopRequireDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}
function _interopRequireWildcard(e, t) {
  if ("function" == typeof WeakMap) var r = new WeakMap(),
    n = new WeakMap();
  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {
    if (!t && e && e.__esModule) return e;
    var o,
      i,
      f = {
        __proto__: null,
        default: e
      };
    if (null === e || "object" != typeof e && "function" != typeof e) return f;
    if (o = t ? n : r) {
      if (o.has(e)) return o.get(e);
      o.set(e, f);
    }
    for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]);
    return f;
  })(e, t);
}
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
var CheckboxIOS = function CheckboxIOS(_ref) {
  var status = _ref.status,
    disabled = _ref.disabled,
    onPress = _ref.onPress,
    themeOverrides = _ref.theme,
    testID = _ref.testID,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var checked = status === 'checked';
  var indeterminate = status === 'indeterminate';
  var _ref2 = (0, _utils.getSelectionControlIOSColor)({
      theme: theme,
      disabled: disabled,
      customColor: rest.color
    }),
    checkedColor = _ref2.checkedColor,
    rippleColor = _ref2.rippleColor;
  var icon = indeterminate ? 'minus' : 'check';
  var opacity = indeterminate || checked ? 1 : 0;
  return React.createElement(_TouchableRipple.default, _extends({}, rest, {
    borderless: true,
    rippleColor: rippleColor,
    onPress: onPress,
    disabled: disabled,
    accessibilityRole: "checkbox",
    accessibilityState: {
      disabled: disabled,
      checked: checked
    },
    accessibilityLiveRegion: "polite",
    style: styles.container,
    testID: testID,
    theme: theme
  }), React.createElement(_reactNative.View, {
    style: {
      opacity: opacity
    }
  }, React.createElement(_MaterialCommunityIcon.default, {
    allowFontScaling: false,
    name: icon,
    size: 24,
    color: checkedColor,
    direction: "ltr"
  })));
};
exports.CheckboxIOS = CheckboxIOS;
CheckboxIOS.displayName = 'Checkbox.IOS';
var styles = _reactNative.StyleSheet.create({
  container: {
    borderRadius: 18,
    padding: 6
  }
});
var _default = exports.default = CheckboxIOS;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl91dGlscyIsIl90aGVtaW5nIiwiX01hdGVyaWFsQ29tbXVuaXR5SWNvbiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfVG91Y2hhYmxlUmlwcGxlIiwiZSIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidCIsIldlYWtNYXAiLCJyIiwibiIsIm8iLCJpIiwiZiIsIl9fcHJvdG9fXyIsImhhcyIsImdldCIsInNldCIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX2V4dGVuZHMiLCJhc3NpZ24iLCJiaW5kIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiYXBwbHkiLCJDaGVja2JveElPUyIsIl9yZWYiLCJzdGF0dXMiLCJkaXNhYmxlZCIsIm9uUHJlc3MiLCJ0aGVtZU92ZXJyaWRlcyIsInRoZW1lIiwidGVzdElEIiwicmVzdCIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllczIiLCJfZXhjbHVkZWQiLCJ1c2VJbnRlcm5hbFRoZW1lIiwiY2hlY2tlZCIsImluZGV0ZXJtaW5hdGUiLCJfcmVmMiIsImdldFNlbGVjdGlvbkNvbnRyb2xJT1NDb2xvciIsImN1c3RvbUNvbG9yIiwiY29sb3IiLCJjaGVja2VkQ29sb3IiLCJyaXBwbGVDb2xvciIsImljb24iLCJvcGFjaXR5IiwiY3JlYXRlRWxlbWVudCIsImJvcmRlcmxlc3MiLCJhY2Nlc3NpYmlsaXR5Um9sZSIsImFjY2Vzc2liaWxpdHlTdGF0ZSIsImFjY2Vzc2liaWxpdHlMaXZlUmVnaW9uIiwic3R5bGUiLCJzdHlsZXMiLCJjb250YWluZXIiLCJWaWV3IiwiYWxsb3dGb250U2NhbGluZyIsIm5hbWUiLCJzaXplIiwiZGlyZWN0aW9uIiwiZXhwb3J0cyIsImRpc3BsYXlOYW1lIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImJvcmRlclJhZGl1cyIsInBhZGRpbmciLCJfZGVmYXVsdCJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NoZWNrYm94L0NoZWNrYm94SU9TLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsSUFBQUEsS0FBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBRUEsSUFBQUUsTUFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsUUFBQSxHQUFBSCxPQUFBO0FBRUEsSUFBQUksc0JBQUEsR0FBQUMsc0JBQUEsQ0FBQUwsT0FBQTtBQUNBLElBQUFNLGdCQUFBLEdBQUFELHNCQUFBLENBQUFMLE9BQUE7QUFBaUUsU0FBQUssdUJBQUFFLENBQUE7RUFBQSxPQUFBQSxDQUFBLElBQUFBLENBQUEsQ0FBQUMsVUFBQSxHQUFBRCxDQUFBO0lBQUFFLE9BQUEsRUFBQUY7RUFBQTtBQUFBO0FBQUEsU0FBQVIsd0JBQUFRLENBQUEsRUFBQUcsQ0FBQTtFQUFBLHlCQUFBQyxPQUFBLE1BQUFDLENBQUEsT0FBQUQsT0FBQTtJQUFBRSxDQUFBLE9BQUFGLE9BQUE7RUFBQSxRQUFBWix1QkFBQSxZQUFBQSx3QkFBQVEsQ0FBQSxFQUFBRyxDQUFBO0lBQUEsS0FBQUEsQ0FBQSxJQUFBSCxDQUFBLElBQUFBLENBQUEsQ0FBQUMsVUFBQSxTQUFBRCxDQUFBO0lBQUEsSUFBQU8sQ0FBQTtNQUFBQyxDQUFBO01BQUFDLENBQUE7UUFBQUMsU0FBQTtRQUFBUixPQUFBLEVBQUFGO01BQUE7SUFBQSxhQUFBQSxDQUFBLHVCQUFBQSxDQUFBLHlCQUFBQSxDQUFBLFNBQUFTLENBQUE7SUFBQSxJQUFBRixDQUFBLEdBQUFKLENBQUEsR0FBQUcsQ0FBQSxHQUFBRCxDQUFBO01BQUEsSUFBQUUsQ0FBQSxDQUFBSSxHQUFBLENBQUFYLENBQUEsVUFBQU8sQ0FBQSxDQUFBSyxHQUFBLENBQUFaLENBQUE7TUFBQU8sQ0FB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