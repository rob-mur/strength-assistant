{"version":3,"names":["_processColor","_interopRequireDefault","require","_Platform","_View","_ViewNativeComponent","_invariant","_react","_interopRequireWildcard","React","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","useAndroidRippleForView","rippleConfig","viewRef","_ref","color","borderless","radius","foreground","useMemo","Platform","OS","processedColor","processColor","invariant","nativeRippleValue","type","rippleRadius","viewProps","nativeForegroundAndroid","nativeBackgroundAndroid","onPressIn","event","view","current","_event$nativeEvent$lo","_event$nativeEvent$lo2","Commands","hotspotUpdate","nativeEvent","locationX","locationY","setPressed","onPressMove","_event$nativeEvent$lo3","_event$nativeEvent$lo4","onPressOut"],"sources":["useAndroidRippleForView.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport type {GestureResponderEvent} from '../../Types/CoreEventTypes';\n\nimport processColor from '../../StyleSheet/processColor';\nimport Platform from '../../Utilities/Platform';\nimport View from '../View/View';\nimport {Commands} from '../View/ViewNativeComponent';\nimport invariant from 'invariant';\nimport * as React from 'react';\nimport {useMemo} from 'react';\n\ntype NativeBackgroundProp = $ReadOnly<{\n  type: 'RippleAndroid',\n  color: ?number,\n  borderless: boolean,\n  rippleRadius: ?number,\n}>;\n\nexport type PressableAndroidRippleConfig = {\n  color?: ColorValue,\n  borderless?: boolean,\n  radius?: number,\n  foreground?: boolean,\n};\n\n/**\n * Provides the event handlers and props for configuring the ripple effect on\n * supported versions of Android.\n */\nexport default function useAndroidRippleForView(\n  rippleConfig: ?PressableAndroidRippleConfig,\n  viewRef: {current: null | React.ElementRef<typeof View>},\n): ?$ReadOnly<{\n  onPressIn: (event: GestureResponderEvent) => void,\n  onPressMove: (event: GestureResponderEvent) => void,\n  onPressOut: (event: GestureResponderEvent) => void,\n  viewProps:\n    | $ReadOnly<{nativeBackgroundAndroid: NativeBackgroundProp}>\n    | $ReadOnly<{nativeForegroundAndroid: NativeBackgroundProp}>,\n}> {\n  const {color, borderless, radius, foreground} = rippleConfig ?? {};\n\n  return useMemo(() => {\n    if (\n      Platform.OS === 'android' &&\n      (color != null || borderless != null || radius != null)\n    ) {\n      const processedColor = processColor(color);\n      invariant(\n        processedColor == null || typeof processedColor === 'number',\n        'Unexpected color given for Ripple color',\n      );\n\n      const nativeRippleValue = {\n        type: 'RippleAndroid',\n        color: processedColor,\n        borderless: borderless === true,\n        rippleRadius: radius,\n      };\n\n      return {\n        viewProps:\n          foreground === true\n            ? // $FlowFixMe[incompatible-return]\n              {nativeForegroundAndroid: nativeRippleValue}\n            : // $FlowFixMe[incompatible-return]\n              {nativeBackgroundAndroid: nativeRippleValue},\n        onPressIn(event: GestureResponderEvent): void {\n          const view = viewRef.current;\n          if (view != null) {\n            Commands.hotspotUpdate(\n              view,\n              event.nativeEvent.locationX ?? 0,\n              event.nativeEvent.locationY ?? 0,\n            );\n            Commands.setPressed(view, true);\n          }\n        },\n        onPressMove(event: GestureResponderEvent): void {\n          const view = viewRef.current;\n          if (view != null) {\n            Commands.hotspotUpdate(\n              view,\n              event.nativeEvent.locationX ?? 0,\n              event.nativeEvent.locationY ?? 0,\n            );\n          }\n        },\n        onPressOut(event: GestureResponderEvent): void {\n          const view = viewRef.current;\n          if (view != null) {\n            Commands.setPressed(view, false);\n          }\n        },\n      };\n    }\n    return null;\n  }, [borderless, color, foreground, radius, viewRef]);\n}\n"],"mappings":"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","ignoreList":[]}