{"version":3,"names":["_reactNative","require","_logger","FirebaseService","exports","serviceName","_classCallCheck2","default","initialized","platform","Platform","OS","_createClass2","key","value","isEmulatorEnabled","useEmulator","__DEV__","_env2","env","EXPO_PUBLIC_USE_EMULATOR","logInfo","getEmulatorHost","message","context","logger","info","Object","assign","service","logWarn","warn","logError","error","assertInitialized","methodName","Error"],"sources":["firebase-core.ts"],"sourcesContent":["import { Platform } from \"react-native\";\nimport { logger } from \"./logger\";\n\nexport interface FirebaseInitOptions {\n\tuseEmulator?: boolean;\n\temulatorHost?: string;\n}\n\nexport abstract class FirebaseService {\n\tprotected initialized = false;\n\tprotected serviceName: string;\n\tprotected platform: string;\n\n\tconstructor(serviceName: string) {\n\t\tthis.serviceName = serviceName;\n\t\tthis.platform = Platform.OS === 'web' ? 'Web' : 'Native';\n\t}\n\n\tprotected isEmulatorEnabled(): boolean {\n\t\tconst useEmulator = __DEV__ || process.env.EXPO_PUBLIC_USE_EMULATOR === \"true\";\n\t\tthis.logInfo(`Firebase emulator enabled: ${useEmulator}`, {\n\t\t\t__DEV__,\n\t\t\tEXPO_PUBLIC_USE_EMULATOR: process.env.EXPO_PUBLIC_USE_EMULATOR\n\t\t});\n\t\treturn useEmulator;\n\t}\n\n\tprotected getEmulatorHost(): string {\n\t\treturn Platform.OS === \"web\" ? \"localhost\" : \"10.0.2.2\";\n\t}\n\n\tprotected logInfo(message: string, context?: Partial<any>): void {\n\t\tlogger.info(message, {\n\t\t\tservice: this.serviceName,\n\t\t\tplatform: this.platform,\n\t\t\t...context\n\t\t});\n\t}\n\n\tprotected logWarn(message: string, context?: Partial<any>): void {\n\t\tlogger.warn(message, {\n\t\t\tservice: this.serviceName,\n\t\t\tplatform: this.platform,\n\t\t\t...context\n\t\t});\n\t}\n\n\tprotected logError(message: string, context?: Partial<any>): void {\n\t\tlogger.error(message, {\n\t\t\tservice: this.serviceName,\n\t\t\tplatform: this.platform,\n\t\t\t...context\n\t\t});\n\t}\n\n\tprotected assertInitialized(methodName: string): void {\n\t\tif (!this.initialized) {\n\t\t\tconst error = `${methodName} called but ${this.serviceName} not initialized`;\n\t\t\tthis.logError(error);\n\t\t\tthrow new Error(`${this.serviceName} not initialized. Call init() first.`);\n\t\t}\n\t}\n\n\tabstract init(): void;\n\tabstract isReady(): boolean;\n}"],"mappings":";;;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAAkC,IAOZE,eAAe,GAAAC,OAAA,CAAAD,eAAA;EAKpC,SAAAA,gBAAYE,WAAmB,EAAE;IAAA,IAAAC,gBAAA,CAAAC,OAAA,QAAAJ,eAAA;IAAA,KAJvBK,WAAW,GAAG,KAAK;IAK5B,IAAI,CAACH,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACI,QAAQ,GAAGC,qBAAQ,CAACC,EAAE,KAAK,KAAK,GAAG,KAAK,GAAG,QAAQ;EACzD;EAAC,WAAAC,aAAA,CAAAL,OAAA,EAAAJ,eAAA;IAAAU,GAAA;IAAAC,KAAA,EAED,SAAUC,iBAAiBA,CAAA,EAAY;MACtC,IAAMC,WAAW,GAAGC,OAAO,IAAIC,KAAA,CAAAC,GAAA,CAAAC,wBAAA,KAAyC,MAAM;MAC9E,IAAI,CAACC,OAAO,CAAC,8BAA8BL,WAAW,EAAE,EAAE;QACzDC,OAAO,EAAPA,OAAO;QACPG,wBAAwB,EAAAF,KAAA,CAAAC,GAAA,CAAAC;MACzB,CAAC,CAAC;MACF,OAAOJ,WAAW;IACnB;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAUQ,eAAeA,CAAA,EAAW;MACnC,OAAOZ,qBAAQ,CAACC,EAAE,KAAK,KAAK,GAAG,WAAW,GAAG,UAAU;IACxD;EAAC;IAAAE,GAAA;IAAAC,KAAA,EAED,SAAUO,OAAOA,CAACE,OAAe,EAAEC,OAAsB,EAAQ;MAChEC,cAAM,CAACC,IAAI,CAACH,OAAO,EAAAI,MAAA,CAAAC,MAAA;QAClBC,OAAO,EAAE,IAAI,CAACxB,WAAW;QACzBI,QAAQ,EAAE,IAAI,CAACA;MAAQ,GACpBe,OAAO,CACV,CAAC;IACH;EAAC;IAAAX,GAAA;IAAAC,KAAA,EAED,SAAUgB,OAAOA,CAACP,OAAe,EAAEC,OAAsB,EAAQ;MAChEC,cAAM,CAACM,IAAI,CAACR,OAAO,EAAAI,MAAA,CAAAC,MAAA;QAClBC,OAAO,EAAE,IAAI,CAACxB,WAAW;QACzBI,QAAQ,EAAE,IAAI,CAACA;MAAQ,GACpBe,OAAO,CACV,CAAC;IACH;EAAC;IAAAX,GAAA;IAAAC,KAAA,EAED,SAAUkB,QAAQA,CAACT,OAAe,EAAEC,OAAsB,EAAQ;MACjEC,cAAM,CAACQ,KAAK,CAACV,OAAO,EAAAI,MAAA,CAAAC,MAAA;QACnBC,OAAO,EAAE,IAAI,CAACxB,WAAW;QACzBI,QAAQ,EAAE,IAAI,CAACA;MAAQ,GACpBe,OAAO,CACV,CAAC;IACH;EAAC;IAAAX,GAAA;IAAAC,KAAA,EAED,SAAUoB,iBAAiBA,CAACC,UAAkB,EAAQ;MACrD,IAAI,CAAC,IAAI,CAAC3B,WAAW,EAAE;QACtB,IAAMyB,KAAK,GAAG,GAAGE,UAAU,eAAe,IAAI,CAAC9B,WAAW,kBAAkB;QAC5E,IAAI,CAAC2B,QAAQ,CAACC,KAAK,CAAC;QACpB,MAAM,IAAIG,KAAK,CAAC,GAAG,IAAI,CAAC/B,WAAW,sCAAsC,CAAC;MAC3E;IACD;EAAC;AAAA","ignoreList":[]}