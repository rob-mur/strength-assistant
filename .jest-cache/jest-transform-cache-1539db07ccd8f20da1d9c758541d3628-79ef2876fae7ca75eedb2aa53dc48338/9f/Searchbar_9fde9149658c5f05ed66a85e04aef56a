3d61fc60dc18d1642c1579e3bd7def9e
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["icon", "iconColor", "rippleColor", "onIconPress", "searchAccessibilityLabel", "clearIcon", "clearAccessibilityLabel", "onClearIconPress", "traileringIcon", "traileringIconColor", "traileringIconAccessibilityLabel", "traileringRippleColor", "onTraileringIconPress", "right", "mode", "showDivider", "inputStyle", "placeholder", "elevation", "style", "theme", "value", "loading", "testID"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _color = _interopRequireDefault(require("color"));
var _ActivityIndicator = _interopRequireDefault(require("./ActivityIndicator"));
var _Divider = _interopRequireDefault(require("./Divider"));
var _IconButton = _interopRequireDefault(require("./IconButton/IconButton"));
var _MaterialCommunityIcon = _interopRequireDefault(require("./MaterialCommunityIcon"));
var _Surface = _interopRequireDefault(require("./Surface"));
var _theming = require("../core/theming");
var _forwardRef = require("../utils/forwardRef");
function _interopRequireDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}
function _interopRequireWildcard(e, t) {
  if ("function" == typeof WeakMap) var r = new WeakMap(),
    n = new WeakMap();
  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {
    if (!t && e && e.__esModule) return e;
    var o,
      i,
      f = {
        __proto__: null,
        default: e
      };
    if (null === e || "object" != typeof e && "function" != typeof e) return f;
    if (o = t ? n : r) {
      if (o.has(e)) return o.get(e);
      o.set(e, f);
    }
    for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]);
    return f;
  })(e, t);
}
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
var Searchbar = (0, _forwardRef.forwardRef)(function (_ref, ref) {
  var icon = _ref.icon,
    customIconColor = _ref.iconColor,
    customRippleColor = _ref.rippleColor,
    onIconPress = _ref.onIconPress,
    _ref$searchAccessibil = _ref.searchAccessibilityLabel,
    searchAccessibilityLabel = _ref$searchAccessibil === void 0 ? 'search' : _ref$searchAccessibil,
    clearIcon = _ref.clearIcon,
    _ref$clearAccessibili = _ref.clearAccessibilityLabel,
    clearAccessibilityLabel = _ref$clearAccessibili === void 0 ? 'clear' : _ref$clearAccessibili,
    onClearIconPress = _ref.onClearIconPress,
    traileringIcon = _ref.traileringIcon,
    traileringIconColor = _ref.traileringIconColor,
    traileringIconAccessibilityLabel = _ref.traileringIconAccessibilityLabel,
    customTraileringRippleColor = _ref.traileringRippleColor,
    onTraileringIconPress = _ref.onTraileringIconPress,
    right = _ref.right,
    _ref$mode = _ref.mode,
    mode = _ref$mode === void 0 ? 'bar' : _ref$mode,
    _ref$showDivider = _ref.showDivider,
    showDivider = _ref$showDivider === void 0 ? true : _ref$showDivider,
    inputStyle = _ref.inputStyle,
    placeholder = _ref.placeholder,
    _ref$elevation = _ref.elevation,
    elevation = _ref$elevation === void 0 ? 0 : _ref$elevation,
    style = _ref.style,
    themeOverrides = _ref.theme,
    value = _ref.value,
    _ref$loading = _ref.loading,
    loading = _ref$loading === void 0 ? false : _ref$loading,
    _ref$testID = _ref.testID,
    testID = _ref$testID === void 0 ? 'search-bar' : _ref$testID,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var _theme$colors, _theme$colors2;
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var root = React.useRef(null);
  React.useImperativeHandle(ref, function () {
    return {
      focus: function focus() {
        var _root$current;
        return (_root$current = root.current) === null || _root$current === void 0 ? void 0 : _root$current.focus();
      },
      clear: function clear() {
        var _root$current2;
        return (_root$current2 = root.current) === null || _root$current2 === void 0 ? void 0 : _root$current2.clear();
      },
      setNativeProps: function setNativeProps(args) {
        var _root$current3;
        return (_root$current3 = root.current) === null || _root$current3 === void 0 ? void 0 : _root$current3.setNativeProps(args);
      },
      isFocused: function isFocused() {
        var _root$current4;
        return ((_root$current4 = root.current) === null || _root$current4 === void 0 ? void 0 : _root$current4.isFocused()) || false;
      },
      blur: function blur() {
        var _root$current5;
        return (_root$current5 = root.current) === null || _root$current5 === void 0 ? void 0 : _root$current5.blur();
      },
      setSelection: function setSelection(start, end) {
        var _root$current6;
        return (_root$current6 = root.current) === null || _root$current6 === void 0 ? void 0 : _root$current6.setSelection(start, end);
      }
    };
  });
  var handleClearPress = function handleClearPress(e) {
    var _root$current7, _rest$onChangeText;
    (_root$current7 = root.current) === null || _root$current7 === void 0 || _root$current7.clear();
    (_rest$onChangeText = rest.onChangeText) === null || _rest$onChangeText === void 0 || _rest$onChangeText.call(rest, '');
    onClearIconPress === null || onClearIconPress === void 0 || onClearIconPress(e);
  };
  var roundness = theme.roundness,
    dark = theme.dark,
    isV3 = theme.isV3,
    fonts = theme.fonts;
  var placeholderTextColor = isV3 ? theme.colors.onSurface : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.placeholder;
  var textColor = isV3 ? theme.colors.onSurfaceVariant : theme.colors.text;
  var md2IconColor = dark ? textColor : (0, _color.default)(textColor).alpha(0.54).rgb().string();
  var iconColor = customIconColor || (isV3 ? theme.colors.onSurfaceVariant : md2IconColor);
  var rippleColor = customRippleColor || (0, _color.default)(textColor).alpha(0.32).rgb().string();
  var traileringRippleColor = customTraileringRippleColor || (0, _color.default)(textColor).alpha(0.32).rgb().string();
  var font = isV3 ? Object.assign({}, fonts.bodyLarge, {
    lineHeight: _reactNative.Platform.select({
      ios: 0,
      default: fonts.bodyLarge.lineHeight
    })
  }) : theme.fonts.regular;
  var isBarMode = isV3 && mode === 'bar';
  var shouldRenderTraileringIcon = isBarMode && traileringIcon && !loading && (!value || right !== undefined);
  return React.createElement(_Surface.default, _extends({
    style: [{
      borderRadius: roundness
    }, !isV3 && styles.elevation, isV3 && {
      backgroundColor: theme.colors.elevation.level3,
      borderRadius: roundness * (isBarMode ? 7 : 0)
    }, styles.container, style],
    testID: `${testID}-container`
  }, theme.isV3 && {
    elevation: elevation
  }, {
    container: true,
    theme: theme
  }), React.createElement(_IconButton.default, {
    accessibilityRole: "button",
    borderless: true,
    rippleColor: rippleColor,
    onPress: onIconPress,
    iconColor: iconColor,
    icon: icon || function (_ref2) {
      var size = _ref2.size,
        color = _ref2.color;
      return React.createElement(_MaterialCommunityIcon.default, {
        name: "magnify",
        color: color,
        size: size,
        direction: _reactNative.I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'
      });
    },
    theme: theme,
    accessibilityLabel: searchAccessibilityLabel,
    testID: `${testID}-icon`
  }), React.createElement(_reactNative.TextInput, _extends({
    style: [styles.input, Object.assign({
      color: textColor
    }, font, _reactNative.Platform.select({
      web: {
        outline: 'none'
      }
    })), isV3 && (isBarMode ? styles.barModeInput : styles.viewModeInput), inputStyle],
    placeholder: placeholder || '',
    placeholderTextColor: placeholderTextColor,
    selectionColor: (_theme$colors2 = theme.colors) === null || _theme$colors2 === void 0 ? void 0 : _theme$colors2.primary,
    underlineColorAndroid: "transparent",
    returnKeyType: "search",
    keyboardAppearance: dark ? 'dark' : 'light',
    accessibilityRole: "search",
    ref: root,
    value: value,
    testID: testID
  }, rest)), loading ? React.createElement(_ActivityIndicator.default, {
    testID: "activity-indicator",
    style: isV3 ? styles.v3Loader : styles.loader
  }) : React.createElement(_reactNative.View, {
    pointerEvents: value ? 'auto' : 'none',
    testID: `${testID}-icon-wrapper`,
    style: [isV3 && !value && styles.v3ClearIcon, isV3 && right !== undefined && styles.v3ClearIconHidden]
  }, React.createElement(_IconButton.default, {
    borderless: true,
    accessibilityLabel: clearAccessibilityLabel,
    iconColor: value ? iconColor : 'rgba(255, 255, 255, 0)',
    rippleColor: rippleColor,
    onPress: handleClearPress,
    icon: clearIcon || function (_ref3) {
      var size = _ref3.size,
        color = _ref3.color;
      return React.createElement(_MaterialCommunityIcon.default, {
        name: isV3 ? 'close' : 'close-circle-outline',
        color: color,
        size: size,
        direction: _reactNative.I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'
      });
    },
    testID: `${testID}-clear-icon`,
    accessibilityRole: "button",
    theme: theme
  })), shouldRenderTraileringIcon ? React.createElement(_IconButton.default, {
    accessibilityRole: "button",
    borderless: true,
    onPress: onTraileringIconPress,
    iconColor: traileringIconColor || theme.colors.onSurfaceVariant,
    rippleColor: traileringRippleColor,
    icon: traileringIcon,
    accessibilityLabel: traileringIconAccessibilityLabel,
    testID: `${testID}-trailering-icon`
  }) : null, isBarMode && (right === null || right === void 0 ? void 0 : right({
    color: textColor,
    style: styles.rightStyle,
    testID: testID
  })), isV3 && !isBarMode && showDivider && React.createElement(_Divider.default, {
    bold: true,
    style: [styles.divider, {
      backgroundColor: theme.colors.outline
    }],
    testID: `${testID}-divider`
  }));
});
var styles = _reactNative.StyleSheet.create({
  container: {
    flexDirection: 'row',
    alignItems: 'center'
  },
  input: {
    flex: 1,
    fontSize: 18,
    paddingLeft: 8,
    alignSelf: 'stretch',
    textAlign: _reactNative.I18nManager.getConstants().isRTL ? 'right' : 'left',
    minWidth: 0
  },
  barModeInput: {
    paddingLeft: 0,
    minHeight: 56
  },
  viewModeInput: {
    paddingLeft: 0,
    minHeight: 72
  },
  elevation: {
    elevation: 4
  },
  loader: {
    margin: 10
  },
  v3Loader: {
    marginHorizontal: 16
  },
  rightStyle: {
    marginRight: 16
  },
  v3ClearIcon: {
    position: 'absolute',
    right: 0,
    marginLeft: 16
  },
  v3ClearIconHidden: {
    display: 'none'
  },
  divider: {
    position: 'absolute',
    bottom: 0,
    width: '100%'
  }
});
var _default = exports.default = Searchbar;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9jb2xvciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfQWN0aXZpdHlJbmRpY2F0b3IiLCJfRGl2aWRlciIsIl9JY29uQnV0dG9uIiwiX01hdGVyaWFsQ29tbXVuaXR5SWNvbiIsIl9TdXJmYWNlIiwiX3RoZW1pbmciLCJfZm9yd2FyZFJlZiIsImUiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInQiLCJXZWFrTWFwIiwiciIsIm4iLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJoYXMiLCJnZXQiLCJzZXQiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIl9leHRlbmRzIiwiYXNzaWduIiwiYmluZCIsImFyZ3VtZW50cyIsImxlbmd0aCIsImFwcGx5IiwiU2VhcmNoYmFyIiwiZm9yd2FyZFJlZiIsIl9yZWYiLCJyZWYiLCJpY29uIiwiY3VzdG9tSWNvbkNvbG9yIiwiaWNvbkNvbG9yIiwiY3VzdG9tUmlwcGxlQ29sb3IiLCJyaXBwbGVDb2xvciIsIm9uSWNvblByZXNzIiwiX3JlZiRzZWFyY2hBY2Nlc3NpYmlsIiwic2VhcmNoQWNjZXNzaWJpbGl0eUxhYmVsIiwiY2xlYXJJY29uIiwiX3JlZiRjbGVhckFjY2Vzc2liaWxpIiwiY2xlYXJBY2Nlc3NpYmlsaXR5TGFiZWwiLCJvbkNsZWFySWNvblByZXNzIiwidHJhaWxlcmluZ0ljb24iLCJ0cmFpbGVyaW5nSWNvbkNvbG9yIiwidHJhaWxlcmluZ0ljb25BY2Nlc3NpYmlsaXR5TGFiZWwiLCJjdXN0b21UcmFpbGVyaW5nUmlwcGxlQ29sb3IiLCJ0cmFpbGVyaW5nUmlwcGxlQ29sb3IiLCJvblRyYWlsZXJpbmdJY29uUHJlc3MiLCJyaWdodCIsIl9yZWYkbW9kZSIsIm1vZGUiLCJfcmVmJHNob3dEaXZpZGVyIiwic2hvd0RpdmlkZXIiLCJpbnB1dFN0eWxlIiwicGxhY2Vob2xkZXIiLCJfcmVmJGVsZXZhdGlvbiIsImVsZXZhdGlvbiIsInN0eWxlIiwidGhlbWVPdmVycmlkZXMiLCJ0aGVtZSIsInZhbHVlIiwiX3JlZiRsb2FkaW5nIiwibG9hZGluZyIsIl9yZWYkdGVzdElEIiwidGVzdElEIiwicmVzdCIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllczIiLCJfZXhjbHVkZWQiLCJfdGhlbWUkY29sb3JzIiwiX3RoZW1lJGNvbG9yczIiLCJ1c2VJbnRlcm5hbFRoZW1lIiwicm9vdCIsInVzZVJlZiIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJmb2N1cyIsIl9yb290JGN1cnJlbnQiLCJjdXJyZW50IiwiY2xlYXIiLCJfcm9vdCRjdXJyZW50MiIsInNldE5hdGl2ZVByb3BzIiwiYXJncyIsIl9yb290JGN1cnJlbnQzIiwiaXNGb2N1c2VkIiwiX3Jvb3QkY3VycmVudDQiLCJibHVyIiwiX3Jvb3QkY3VycmVudDUiLCJzZXRTZWxlY3Rpb24iLCJzdGFydCIsImVuZCIsIl9yb290JGN1cnJlbnQ2IiwiaGFuZGxlQ2xlYXJQcmVzcyIsIl9yb290JGN1cnJlbnQ3IiwiX3Jlc3Qkb25DaGFuZ2VUZXh0Iiwib25DaGFuZ2VUZXh0Iiwicm91bmRuZXNzIiwiZGFyayIsImlzVjMiLCJmb250cyIsInBsYWNlaG9sZGVyVGV4dENvbG9yIiwiY29sb3JzIiwib25TdXJmYWNlIiwidGV4dENvbG9yIiwib25TdXJmYWNlVmFyaWFudCIsInRleHQiLCJtZDJJY29uQ29sb3IiLCJhbHBoYSIsInJnYiIsInN0cmluZyIsImZvbnQiLCJib2R5TGFyZ2UiLCJsaW5lSGVpZ2h0IiwiUGxhdGZvcm0iLCJzZWxlY3QiLCJpb3MiLCJyZWd1bGFyIiwiaXNCYXJNb2RlIiwic2hvdWxkUmVuZGVyVHJhaWxlcmluZ0ljb24iLCJ1bmRlZmluZWQiLCJjcmVhdGVFbGVtZW50IiwiYm9yZGVyUmFkaXVzIiwic3R5bGVzIiwiYmFja2dyb3VuZENvbG9yIiwibGV2ZWwzIiwiY29udGFpbmVyIiwiYWNjZXNzaWJpbGl0eVJvbGUiLCJib3JkZXJsZXNzIiwib25QcmVzcyIsIl9yZWYyIiwic2l6ZSIsImNvbG9yIiwibmFtZSIsImRpcmVjdGlvbiIsIkkxOG5NYW5hZ2VyIiwiZ2V0Q29uc3RhbnRzIiwiaXNSVEwiLCJhY2Nlc3NpYmlsaXR5TGFiZWwiLCJUZXh0SW5wdXQiLCJpbnB1dCIsIndlYiIsIm91dGxpbmUiLCJiYXJNb2RlSW5wdXQiLCJ2aWV3TW9kZUlucHV0Iiwic2VsZWN0aW9uQ29sb3IiLCJwcmltYXJ5IiwidW5kZXJsaW5lQ29sb3JBbmRyb2lkIiwicmV0dXJuS2V5VHlwZSIsImtleWJvYXJkQXBwZWFyYW5jZSIsInYzTG9hZGVyIiwibG9hZGVyIiwiVmlldyIsInBvaW50ZXJFdmVudHMiLCJ2M0NsZWFySWNvbiIsInYzQ2xlYXJJY29uSGlkZGVuIiwiX3JlZjMiLCJyaWdodFN0eWxlIiwiYm9sZCIsImRpdmlkZXIiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiZmxleERpcmVjdGlvbiIsImFsaWduSXRlbXMiLCJmbGV4IiwiZm9udFNpemUiLCJwYWRkaW5nTGVmdCIsImFsaWduU2VsZiIsInRleHRBbGlnbiIsIm1pbldpZHRoIiwibWluSGVpZ2h0IiwibWFyZ2luIiwibWFyZ2luSG9yaXpvbnRhbCIsIm1hcmdpblJpZ2h0IiwicG9zaXRpb24iLCJtYXJnaW5MZWZ0IiwiZGlzcGxheSIsImJvdHRvbSIsIndpZHRoIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvU2VhcmNoYmFyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsSUFBQUEsS0FBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBZUEsSUFBQUUsTUFBQSxHQUFBQyxzQkFBQSxDQUFBSCxPQUFBO0FBRUEsSUFBQUksa0JBQUEsR0FB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