47efadb13e7caf8f5c9cc2bfcb4bbb55
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["icon", "size", "style", "theme"],
  _excluded2 = ["backgroundColor"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _theming = require("../../core/theming");
var _colors = require("../../styles/themes/v2/colors");
var _getContrastingColor = _interopRequireDefault(require("../../utils/getContrastingColor"));
var _Icon = _interopRequireDefault(require("../Icon"));
function _interopRequireDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}
function _interopRequireWildcard(e, t) {
  if ("function" == typeof WeakMap) var r = new WeakMap(),
    n = new WeakMap();
  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {
    if (!t && e && e.__esModule) return e;
    var o,
      i,
      f = {
        __proto__: null,
        default: e
      };
    if (null === e || "object" != typeof e && "function" != typeof e) return f;
    if (o = t ? n : r) {
      if (o.has(e)) return o.get(e);
      o.set(e, f);
    }
    for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]);
    return f;
  })(e, t);
}
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
var defaultSize = 64;
var Avatar = function Avatar(_ref) {
  var _rest$color;
  var icon = _ref.icon,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? defaultSize : _ref$size,
    style = _ref.style,
    themeOverrides = _ref.theme,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var _theme$colors;
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var _ref2 = _reactNative.StyleSheet.flatten(style) || {},
    _ref2$backgroundColor = _ref2.backgroundColor,
    backgroundColor = _ref2$backgroundColor === void 0 ? (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.primary : _ref2$backgroundColor,
    restStyle = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);
  var textColor = (_rest$color = rest.color) != null ? _rest$color : (0, _getContrastingColor.default)(backgroundColor, _colors.white, 'rgba(0, 0, 0, .54)');
  return React.createElement(_reactNative.View, _extends({
    style: [{
      width: size,
      height: size,
      borderRadius: size / 2,
      backgroundColor: backgroundColor
    }, styles.container, restStyle]
  }, rest), React.createElement(_Icon.default, {
    source: icon,
    color: textColor,
    size: size * 0.6
  }));
};
Avatar.displayName = 'Avatar.Icon';
var styles = _reactNative.StyleSheet.create({
  container: {
    justifyContent: 'center',
    alignItems: 'center'
  }
});
var _default = exports.default = Avatar;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl90aGVtaW5nIiwiX2NvbG9ycyIsIl9nZXRDb250cmFzdGluZ0NvbG9yIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9JY29uIiwiZSIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidCIsIldlYWtNYXAiLCJyIiwibiIsIm8iLCJpIiwiZiIsIl9fcHJvdG9fXyIsImhhcyIsImdldCIsInNldCIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX2V4dGVuZHMiLCJhc3NpZ24iLCJiaW5kIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiYXBwbHkiLCJkZWZhdWx0U2l6ZSIsIkF2YXRhciIsIl9yZWYiLCJfcmVzdCRjb2xvciIsImljb24iLCJfcmVmJHNpemUiLCJzaXplIiwic3R5bGUiLCJ0aGVtZU92ZXJyaWRlcyIsInRoZW1lIiwicmVzdCIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllczIiLCJfZXhjbHVkZWQiLCJfdGhlbWUkY29sb3JzIiwidXNlSW50ZXJuYWxUaGVtZSIsIl9yZWYyIiwiU3R5bGVTaGVldCIsImZsYXR0ZW4iLCJfcmVmMiRiYWNrZ3JvdW5kQ29sb3IiLCJiYWNrZ3JvdW5kQ29sb3IiLCJjb2xvcnMiLCJwcmltYXJ5IiwicmVzdFN0eWxlIiwiX2V4Y2x1ZGVkMiIsInRleHRDb2xvciIsImNvbG9yIiwid2hpdGUiLCJjcmVhdGVFbGVtZW50IiwiVmlldyIsIndpZHRoIiwiaGVpZ2h0IiwiYm9yZGVyUmFkaXVzIiwic3R5bGVzIiwiY29udGFpbmVyIiwic291cmNlIiwiZGlzcGxheU5hbWUiLCJjcmVhdGUiLCJqdXN0aWZ5Q29udGVudCIsImFsaWduSXRlbXMiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMv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