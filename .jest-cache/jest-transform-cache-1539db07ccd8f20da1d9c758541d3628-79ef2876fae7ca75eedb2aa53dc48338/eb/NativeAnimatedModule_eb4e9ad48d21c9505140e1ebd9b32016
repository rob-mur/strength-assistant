e42f4582a38e65007c4e181d72b4aa99
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _shouldUseTurboAnimatedModule = _interopRequireDefault(require("../../../../Libraries/Animated/shouldUseTurboAnimatedModule"));
var TurboModuleRegistry = _interopRequireWildcard(require("../../../../Libraries/TurboModule/TurboModuleRegistry"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var NativeModule = !(0, _shouldUseTurboAnimatedModule.default)() ? TurboModuleRegistry.get('NativeAnimatedModule') : null;
var _default = exports.default = NativeModule;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfc2hvdWxkVXNlVHVyYm9BbmltYXRlZE1vZHVsZSIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiVHVyYm9Nb2R1bGVSZWdpc3RyeSIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiZSIsInQiLCJXZWFrTWFwIiwiciIsIm4iLCJfX2VzTW9kdWxlIiwibyIsImkiLCJmIiwiX19wcm90b19fIiwiZGVmYXVsdCIsImhhcyIsImdldCIsInNldCIsIl90IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJOYXRpdmVNb2R1bGUiLCJzaG91bGRVc2VUdXJib0FuaW1hdGVkTW9kdWxlIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiTmF0aXZlQW5pbWF0ZWRNb2R1bGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE1ldGEgUGxhdGZvcm1zLCBJbmMuIGFuZCBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93XG4gKiBAZm9ybWF0XG4gKi9cblxuaW1wb3J0IHR5cGUge1R1cmJvTW9kdWxlfSBmcm9tICcuLi8uLi8uLi8uLi9MaWJyYXJpZXMvVHVyYm9Nb2R1bGUvUkNURXhwb3J0JztcblxuaW1wb3J0IHNob3VsZFVzZVR1cmJvQW5pbWF0ZWRNb2R1bGUgZnJvbSAnLi4vLi4vLi4vLi4vTGlicmFyaWVzL0FuaW1hdGVkL3Nob3VsZFVzZVR1cmJvQW5pbWF0ZWRNb2R1bGUnO1xuaW1wb3J0ICogYXMgVHVyYm9Nb2R1bGVSZWdpc3RyeSBmcm9tICcuLi8uLi8uLi8uLi9MaWJyYXJpZXMvVHVyYm9Nb2R1bGUvVHVyYm9Nb2R1bGVSZWdpc3RyeSc7XG5cbnR5cGUgRW5kUmVzdWx0ID0ge2ZpbmlzaGVkOiBib29sZWFuLCB2YWx1ZT86IG51bWJlciwgLi4ufTtcbnR5cGUgRW5kQ2FsbGJhY2sgPSAocmVzdWx0OiBFbmRSZXN1bHQpID0+IHZvaWQ7XG50eXBlIFNhdmVWYWx1ZUNhbGxiYWNrID0gKHZhbHVlOiBudW1iZXIpID0+IHZvaWQ7XG5cbmV4cG9ydCB0eXBlIEV2ZW50TWFwcGluZyA9IHtcbiAgbmF0aXZlRXZlbnRQYXRoOiBBcnJheTxzdHJpbmc+LFxuICBhbmltYXRlZFZhbHVlVGFnOiA/bnVtYmVyLFxufTtcblxuLy8gVGhlIGNvbmZpZyBoYXMgZGlmZmVyZW50IGtleXMgZGVwZW5kaW5nIG9uIHRoZSB0eXBlIG9mIHRoZSBOb2RlXG4vLyBUT0RPKFQ1NDg5Njg4OCk6IE1ha2UgdGhlc2UgdHlwZXMgc3RyaWN0XG5leHBvcnQgdHlwZSBBbmltYXRlZE5vZGVDb25maWcgPSBPYmplY3Q7XG5leHBvcnQgdHlwZSBBbmltYXRpbmdOb2RlQ29uZmlnID0gT2JqZWN0O1xuXG5leHBvcnQgaW50ZXJmYWNlIFNwZWMgZXh0ZW5kcyBUdXJib01vZHVsZSB7XG4gICtzdGFydE9wZXJhdGlvbkJhdGNoOiAoKSA9PiB2b2lkO1xuICArZmluaXNoT3BlcmF0aW9uQmF0Y2g6ICgpID0+IHZvaWQ7XG4gICtjcmVhdGVBbmltYXRlZE5vZGU6ICh0YWc6IG51bWJlciwgY29uZmlnOiBBbmltYXRlZE5vZGVDb25maWcpID0+IHZvaWQ7XG4gICt1cGRhdGVBbmltYXRlZE5vZGVDb25maWc/OiAodGFnOiBudW1iZXIsIGNvbmZpZzogQW5pbWF0ZWROb2RlQ29uZmlnKSA9PiB2b2lkO1xuICArZ2V0VmFsdWU6ICh0YWc6IG51bWJlciwgc2F2ZVZhbHVlQ2FsbGJhY2s6IFNhdmVWYWx1ZUNhbGxiYWNrKSA9PiB2b2lkO1xuICArc3RhcnRMaXN0ZW5pbmdUb0FuaW1hdGVkTm9kZVZhbHVlOiAodGFnOiBudW1iZXIpID0+IHZvaWQ7XG4gICtzdG9wTGlzdGVuaW5nVG9BbmltYXRlZE5vZGVWYWx1ZTogKHRhZzogbnVtYmVyKSA9PiB2b2lkO1xuICArY29ubmVjdEFuaW1hdGVkTm9kZXM6IChwYXJlbnRUYWc6IG51bWJlciwgY2hpbGRUYWc6IG51bWJlcikgPT4gdm9pZDtcbiAgK2Rpc2Nvbm5lY3RBbmltYXRlZE5vZGVzOiAocGFyZW50VGFnOiBudW1iZXIsIGNoaWxkVGFnOiBudW1iZXIpID0+IHZvaWQ7XG4gICtzdGFydEFuaW1hdGluZ05vZGU6IChcbiAgICBhbmltYXRpb25JZDogbnVtYmVyLFxuICAgIG5vZGVUYWc6IG51bWJlcixcbiAgICBjb25maWc6IEFuaW1hdGluZ05vZGVDb25maWcsXG4gICAgZW5kQ2FsbGJhY2s6IEVuZENhbGxiYWNrLFxuICApID0+IHZvaWQ7XG4gICtzdG9wQW5pbWF0aW9uOiAoYW5pbWF0aW9uSWQ6IG51bWJlcikgPT4gdm9pZDtcbiAgK3NldEFuaW1hdGVkTm9kZVZhbHVlOiAobm9kZVRhZzogbnVtYmVyLCB2YWx1ZTogbnVtYmVyKSA9PiB2b2lkO1xuICArc2V0QW5pbWF0ZWROb2RlT2Zmc2V0OiAobm9kZVRhZzogbnVtYmVyLCBvZmZzZXQ6IG51bWJlcikgPT4gdm9pZDtcbiAgK2ZsYXR0ZW5BbmltYXRlZE5vZGVPZmZzZXQ6IChub2RlVGFnOiBudW1iZXIpID0+IHZvaWQ7XG4gICtleHRyYWN0QW5pbWF0ZWROb2RlT2Zmc2V0OiAobm9kZVRhZzogbnVtYmVyKSA9PiB2b2lkO1xuICArY29ubmVjdEFuaW1hdGVkTm9kZVRvVmlldzogKG5vZGVUYWc6IG51bWJlciwgdmlld1RhZzogbnVtYmVyKSA9PiB2b2lkO1xuICArZGlzY29ubmVjdEFuaW1hdGVkTm9kZUZyb21WaWV3OiAobm9kZVRhZzogbnVtYmVyLCB2aWV3VGFnOiBudW1iZXIpID0+IHZvaWQ7XG4gICtyZXN0b3JlRGVmYXVsdFZhbHVlczogKG5vZGVUYWc6IG51bWJlcikgPT4gdm9pZDtcbiAgK2Ryb3BBbmltYXRlZE5vZGU6ICh0YWc6IG51bWJlcikgPT4gdm9pZDtcbiAgK2FkZEFuaW1hdGVkRXZlbnRUb1ZpZXc6IChcbiAgICB2aWV3VGFnOiBudW1iZXIsXG4gICAgZXZlbnROYW1lOiBzdHJpbmcsXG4gICAgZXZlbnRNYXBwaW5nOiBFdmVudE1hcHBpbmcsXG4gICkgPT4gdm9pZDtcbiAgK3JlbW92ZUFuaW1hdGVkRXZlbnRGcm9tVmlldzogKFxuICAgIHZpZXdUYWc6IG51bWJlcixcbiAgICBldmVudE5hbWU6IHN0cmluZyxcbiAgICBhbmltYXRlZE5vZGVUYWc6IG51bWJlcixcbiAgKSA9PiB2b2lkO1xuXG4gIC8vIEV2ZW50c1xuICArYWRkTGlzdGVuZXI6IChldmVudE5hbWU6IHN0cmluZykgPT4gdm9pZDtcbiAgK3JlbW92ZUxpc3RlbmVyczogKGNvdW50OiBudW1iZXIpID0+IHZvaWQ7XG5cbiAgLy8gQWxsIG9mIHRoZSBhYm92ZSBpbiBhIGJhdGNoZWQgbW9kZVxuICArcXVldWVBbmRFeGVjdXRlQmF0Y2hlZE9wZXJhdGlvbnM/OiAob3BlcmF0aW9uc0FuZEFyZ3M6IEFycmF5PGFueT4pID0+IHZvaWQ7XG59XG5cbmNvbnN0IE5hdGl2ZU1vZHVsZTogP1NwZWMgPSAhc2hvdWxkVXNlVHVyYm9BbmltYXRlZE1vZHVsZSgpXG4gID8gVHVyYm9Nb2R1bGVSZWdpc3RyeS5nZXQ8U3BlYz4oJ05hdGl2ZUFuaW1hdGVkTW9kdWxlJylcbiAgOiBudWxsO1xuZXhwb3J0IGRlZmF1bHQgTmF0aXZlTW9kdWxlO1xuIl0sIm1hcHBpbmdzIjoiOzs7OztBQVlBLElBQUFBLDZCQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxtQkFBQSxHQUFBQyx1QkFBQSxDQUFBRixPQUFBO0FBQTZGLFNBQUFFLHdCQUFBQyxDQUFBLEVBQUFDLENBQUEsNkJBQUFDLE9BQUEsTUFBQUMsQ0FBQSxPQUFBRCxPQUFBLElBQUFFLENBQUEsT0FBQUYsT0FBQSxZQUFBSCx1QkFBQSxZQUFBQSx3QkFBQUMsQ0FBQSxFQUFBQyxDQUFBLFNBQUFBLENBQUEsSUFBQUQsQ0FBQSxJQUFBQSxDQUFBLENBQUFLLFVBQUEsU0FBQUwsQ0FBQSxNQUFBTSxDQUFBLEVBQUFDLENBQUEsRUFBQUMsQ0FBQSxLQUFBQyxTQUFBLFFBQUFDLE9BQUEsRUFBQVYsQ0FBQSxpQkFBQUEsQ0FBQSx1QkFBQUEsQ0FBQSx5QkFBQUEsQ0FBQSxTQUFBUSxDQUFBLE1BQUFGLENBQUEsR0FBQUwsQ0FBQSxHQUFBRyxDQUFBLEdBQUFELENBQUEsUUFBQUcsQ0FBQSxDQUFBSyxHQUFBLENBQUFYLENBQUEsVUFBQU0sQ0FBQSxDQUFBTSxHQUFBLENBQUFaLENBQUEsR0FBQU0sQ0FBQSxDQUFBTyxHQUFBLENBQUFiLENBQUEsRUFBQVEsQ0FBQSxjQUFBTSxFQUFBLElBQUFkLENBQUEsZ0JBQUFjLEVBQUEsT0FBQUMsY0FBQSxDQUFBQyxJQUFBLENBQUFoQixDQUFBLEVBQUFjLEVBQUEsT0FBQVAsQ0FBQSxJQUFBRCxDQUFBLEdBQUFXLE1BQUEsQ0FBQUMsY0FBQSxLQUFBRCxNQUFBLENBQUFFLHdCQUFBLENBQUFuQixDQUFBLEVBQUFjLEVBQUEsT0FBQVAsQ0FBQSxDQUFBSyxHQUFBLElBQUFMLENBQUEsQ0FBQU0sR0FBQSxJQUFBUCxDQUFBLENBQUFFLENBQUEsRUFBQU0sRUFBQSxFQUFBUCxDQUFBLElBQUFDLENBQUEsQ0FBQU0sRUFBQSxJQUFBZCxDQUFBLENBQUFjLEVBQUEsV0FBQU4sQ0FBQSxLQUFBUixDQUFBLEVBQUFDLENBQUE7QUE0RDdGLElBQU1tQixZQUFtQixHQUFHLENBQUMsSUFBQUMscUNBQTRCLEVBQUMsQ0FBQyxHQUN2RHZCLG1CQUFtQixDQUFDYyxHQUFHLENBQU8sc0JBQXNCLENBQUMsR0FDckQsSUFBSTtBQUFDLElBQUFVLFFBQUEsR0FBQUMsT0FBQSxDQUFBYixPQUFBLEdBQ01VLFlBQVkiLCJpZ25vcmVMaXN0IjpbXX0=