{"version":3,"names":["_expoModulesCore","require","AssetModule","requireNativeModule","downloadAsync","_x","_x2","_x3","_downloadAsync","apply","arguments","_asyncToGenerator2","default","url","md5Hash","type"],"sources":["../src/ExpoAsset.ts"],"sourcesContent":["import { requireNativeModule } from 'expo-modules-core';\n\nconst AssetModule = requireNativeModule('ExpoAsset');\n\n/**\n * Downloads the asset from the given URL to a local cache and returns the local URL of the cached\n * file.\n *\n * If there is already a locally cached file and its MD5 hash matches the given `md5Hash` parameter,\n * if present, the remote asset is not downloaded. The `hash` property is included in Metro's asset\n * metadata objects when this module's `hashAssetFiles` plugin is used, which is the typical way the\n * `md5Hash` parameter of this function is provided.\n */\nexport async function downloadAsync(\n  url: string,\n  md5Hash: string | null,\n  type: string\n): Promise<string> {\n  return AssetModule.downloadAsync(url, md5Hash, type);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,gBAAA,GAAAC,OAAA;AAEA,IAAMC,WAAW,GAAG,IAAAC,oCAAmB,EAAC,WAAW,CAAC;AAAC,SAW/BC,aAAaA,CAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,cAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,eAAA;EAAAA,cAAA,OAAAG,kBAAA,CAAAC,OAAA,EAA5B,WACLC,GAAW,EACXC,OAAsB,EACtBC,IAAY;IAEZ,OAAOb,WAAW,CAACE,aAAa,CAACS,GAAG,EAAEC,OAAO,EAAEC,IAAI,CAAC;EACtD,CAAC;EAAA,OAAAP,cAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA","ignoreList":[]}