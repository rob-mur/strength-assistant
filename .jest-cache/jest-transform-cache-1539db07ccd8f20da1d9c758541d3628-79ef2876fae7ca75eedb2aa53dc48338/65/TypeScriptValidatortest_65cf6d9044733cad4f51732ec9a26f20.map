{"version":3,"names":["_getJestObj","mock","promises","stat","jest","fn","readFile","_interopRequireDefault","require","_asyncToGenerator2","_TypeScriptValidator","_child_process","_fs","_require","mockSpawn","spawn","mockStat","fs","describe","validator","mockProjectRoot","beforeEach","TypeScriptValidatorImpl","clearAllMocks","it","default","mockProcess","createMockProcess","mockReturnValue","mockCountProcess","mockReturnValueOnce","result","validateCompilation","expect","success","toBe","errors","toHaveLength","warnings","statistics","errorCount","warningCount","duration","toBeGreaterThan","tsErrorOutput","trim","firstError","file","line","column","code","severity","message","toContain","tsWarningOutput","warning","ignorable","emit","Error","originalSetTimeout","global","setTimeout","callback","testFiles","validateFiles","filesValidated","length","toHaveBeenCalledWith","concat","any","Object","mockTsConfig","compilerOptions","strict","noImplicitAny","noImplicitReturns","skipLibCheck","target","include","exclude","originalRequire","config","getConfiguration","toEqual","mockImplementation","SyntaxError","spyOn","validateConfiguration","compliant","violations","strictViolation","find","v","property","toBeDefined","currentValue","requiredValue","reason","noImplicitAnyViolation","recommendations","complexErrorOutput","buttonError","e","includes","mixedOutput","startTime","Date","now","actualDuration","Math","abs","toBeLessThan","exitCode","stdout","stderr","on","event","kill"],"sources":["TypeScriptValidator.test.ts"],"sourcesContent":["/**\n * Unit Tests: TypeScript Validator\n * \n * Comprehensive unit tests for the TypeScriptValidator implementation\n * to ensure all methods behave correctly and edge cases are handled.\n */\n\nimport { TypeScriptValidatorImpl } from '../../src/typescript/TypeScriptValidator';\nimport { spawn } from 'child_process';\nimport { promises as fs } from 'fs';\n\n// Mock child_process spawn for controlled testing\njest.mock('child_process');\njest.mock('fs', () => ({\n  promises: {\n    stat: jest.fn(),\n    readFile: jest.fn()\n  }\n}));\n\nconst mockSpawn = spawn as jest.MockedFunction<typeof spawn>;\nconst mockStat = fs.stat as jest.MockedFunction<typeof fs.stat>;\n\ndescribe('TypeScriptValidator Unit Tests', () => {\n  let validator: TypeScriptValidatorImpl;\n  const mockProjectRoot = '/mock/project';\n\n  beforeEach(() => {\n    validator = new TypeScriptValidatorImpl(mockProjectRoot);\n    jest.clearAllMocks();\n  });\n\n  describe('validateCompilation', () => {\n    it('should return success when TypeScript compilation succeeds', async () => {\n      // Mock successful TypeScript compilation\n      const mockProcess = createMockProcess(0, '', '');\n      mockSpawn.mockReturnValue(mockProcess as any);\n      \n      // Mock file counting\n      const mockCountProcess = createMockProcess(0, 'file1.ts\\nfile2.ts\\nfile3.ts', '');\n      mockSpawn.mockReturnValueOnce(mockProcess as any)\n               .mockReturnValueOnce(mockCountProcess as any);\n\n      const result = await validator.validateCompilation();\n\n      expect(result.success).toBe(true);\n      expect(result.errors).toHaveLength(0);\n      expect(result.warnings).toHaveLength(0);\n      expect(result.statistics.errorCount).toBe(0);\n      expect(result.statistics.warningCount).toBe(0);\n      expect(result.statistics.duration).toBeGreaterThan(0);\n    });\n\n    it('should return errors when TypeScript compilation fails', async () => {\n      const tsErrorOutput = `\nsrc/test.ts(10,5): error TS2322: Type 'string' is not assignable to type 'number'.\nsrc/test.ts(15,10): error TS2304: Cannot find name 'undefinedVariable'.\n      `.trim();\n\n      const mockProcess = createMockProcess(1, '', tsErrorOutput);\n      mockSpawn.mockReturnValue(mockProcess as any);\n\n      const result = await validator.validateCompilation();\n\n      expect(result.success).toBe(false);\n      expect(result.errors).toHaveLength(2);\n      \n      const firstError = result.errors[0];\n      expect(firstError.file).toBe('src/test.ts');\n      expect(firstError.line).toBe(10);\n      expect(firstError.column).toBe(5);\n      expect(firstError.code).toBe('TS2322');\n      expect(firstError.severity).toBe('error');\n      expect(firstError.message).toContain('Type \\'string\\' is not assignable to type \\'number\\'');\n\n      expect(result.statistics.errorCount).toBe(2);\n    });\n\n    it('should handle TypeScript warnings correctly', async () => {\n      const tsWarningOutput = `\nsrc/test.ts(5,1): warning TS6133: 'unusedVariable' is declared but its value is never read.\n      `.trim();\n\n      const mockProcess = createMockProcess(0, '', tsWarningOutput);\n      mockSpawn.mockReturnValue(mockProcess as any);\n\n      const result = await validator.validateCompilation();\n\n      expect(result.success).toBe(true); // Warnings don't fail compilation\n      expect(result.errors).toHaveLength(0);\n      expect(result.warnings).toHaveLength(1);\n      \n      const warning = result.warnings[0];\n      expect(warning.file).toBe('src/test.ts');\n      expect(warning.line).toBe(5);\n      expect(warning.code).toBe('TS6133');\n      expect(warning.severity).toBe('warning');\n      expect(warning.ignorable).toBe(true); // This warning type is ignorable\n    });\n\n    it('should handle process errors gracefully', async () => {\n      const mockProcess = createMockProcess(null, '', '');\n      mockProcess.emit('error', new Error('Process spawn failed'));\n      mockSpawn.mockReturnValue(mockProcess as any);\n\n      const result = await validator.validateCompilation();\n\n      expect(result.success).toBe(false);\n      expect(result.errors).toHaveLength(1);\n      expect(result.errors[0].message).toContain('TypeScript validation failed');\n      expect(result.errors[0].file).toBe('validation-process');\n    });\n\n    it('should timeout long-running compilations', async () => {\n      const mockProcess = createMockProcess(null, '', '');\n      // Don't emit close event to simulate hanging process\n      mockSpawn.mockReturnValue(mockProcess as any);\n\n      // Mock setTimeout to immediately call the callback\n      const originalSetTimeout = global.setTimeout;\n      global.setTimeout = jest.fn((callback) => {\n        if (typeof callback === 'function') {\n          callback();\n        }\n        return 1 as any;\n      });\n\n      try {\n        const result = await validator.validateCompilation();\n        expect(result.success).toBe(false);\n        expect(result.errors[0].message).toContain('timed out');\n      } finally {\n        global.setTimeout = originalSetTimeout;\n      }\n    });\n  });\n\n  describe('validateFiles', () => {\n    it('should validate specific files', async () => {\n      const testFiles = ['src/file1.ts', 'src/file2.ts'];\n      const mockProcess = createMockProcess(0, '', '');\n      mockSpawn.mockReturnValue(mockProcess as any);\n\n      const result = await validator.validateFiles(testFiles);\n\n      expect(result.success).toBe(true);\n      expect(result.statistics.filesValidated).toBe(testFiles.length);\n      \n      // Verify correct arguments were passed to tsc\n      expect(mockSpawn).toHaveBeenCalledWith('npx', ['tsc', '--noEmit', ...testFiles], expect.any(Object));\n    });\n\n    it('should handle empty file list', async () => {\n      const mockProcess = createMockProcess(0, '', '');\n      mockSpawn.mockReturnValue(mockProcess as any);\n\n      const result = await validator.validateFiles([]);\n\n      expect(result.success).toBe(true);\n      expect(result.statistics.filesValidated).toBe(0);\n    });\n\n    it('should handle file validation errors', async () => {\n      const tsErrorOutput = 'src/file1.ts(1,1): error TS2304: Cannot find name \\'unknown\\'.';\n      const mockProcess = createMockProcess(1, '', tsErrorOutput);\n      mockSpawn.mockReturnValue(mockProcess as any);\n\n      const result = await validator.validateFiles(['src/file1.ts']);\n\n      expect(result.success).toBe(false);\n      expect(result.errors).toHaveLength(1);\n      expect(result.errors[0].file).toBe('src/file1.ts');\n    });\n  });\n\n  describe('getConfiguration', () => {\n    it('should read and parse tsconfig.json', () => {\n      // Mock require to return a mock tsconfig\n      const mockTsConfig = {\n        compilerOptions: {\n          strict: true,\n          noImplicitAny: true,\n          noImplicitReturns: false,\n          skipLibCheck: true,\n          target: 'es2017'\n        },\n        include: ['src/**/*'],\n        exclude: ['node_modules', 'dist']\n      };\n\n      // Mock the require call\n      const originalRequire = require;\n      require = jest.fn().mockReturnValue(mockTsConfig) as any;\n\n      try {\n        const config = validator.getConfiguration();\n\n        expect(config.compilerOptions.strict).toBe(true);\n        expect(config.compilerOptions.noImplicitAny).toBe(true);\n        expect(config.compilerOptions.noImplicitReturns).toBe(false);\n        expect(config.compilerOptions.skipLibCheck).toBe(true);\n        expect(config.include).toEqual(['src/**/*']);\n        expect(config.exclude).toEqual(['node_modules', 'dist']);\n      } finally {\n        require = originalRequire;\n      }\n    });\n\n    it('should return default configuration when tsconfig.json is missing', () => {\n      // Mock require to throw an error (file not found)\n      const originalRequire = require;\n      require = jest.fn().mockImplementation(() => {\n        throw new Error('Cannot find module');\n      }) as any;\n\n      try {\n        const config = validator.getConfiguration();\n\n        expect(config.compilerOptions.strict).toBe(false);\n        expect(config.compilerOptions.noImplicitAny).toBe(false);\n        expect(config.compilerOptions.noImplicitReturns).toBe(false);\n        expect(config.compilerOptions.skipLibCheck).toBe(true);\n        expect(config.include).toEqual([]);\n        expect(config.exclude).toEqual([]);\n      } finally {\n        require = originalRequire;\n      }\n    });\n\n    it('should handle malformed tsconfig.json', () => {\n      const originalRequire = require;\n      require = jest.fn().mockImplementation(() => {\n        throw new SyntaxError('Unexpected token in JSON');\n      }) as any;\n\n      try {\n        const config = validator.getConfiguration();\n\n        // Should return default configuration\n        expect(config.compilerOptions.strict).toBe(false);\n        expect(config.include).toEqual([]);\n      } finally {\n        require = originalRequire;\n      }\n    });\n  });\n\n  describe('validateConfiguration', () => {\n    it('should validate compliant configuration', async () => {\n      // Mock compliant configuration\n      jest.spyOn(validator, 'getConfiguration').mockReturnValue({\n        compilerOptions: {\n          strict: true,\n          noImplicitAny: true,\n          noImplicitReturns: true,\n          skipLibCheck: false\n        },\n        include: ['src/**/*'],\n        exclude: ['node_modules']\n      });\n\n      const result = await validator.validateConfiguration();\n\n      expect(result.compliant).toBe(true);\n      expect(result.violations).toHaveLength(0);\n    });\n\n    it('should detect constitutional violations', async () => {\n      // Mock non-compliant configuration\n      jest.spyOn(validator, 'getConfiguration').mockReturnValue({\n        compilerOptions: {\n          strict: false,\n          noImplicitAny: false,\n          noImplicitReturns: false,\n          skipLibCheck: true\n        },\n        include: [],\n        exclude: []\n      });\n\n      const result = await validator.validateConfiguration();\n\n      expect(result.compliant).toBe(false);\n      expect(result.violations.length).toBeGreaterThan(0);\n\n      // Check specific violations\n      const strictViolation = result.violations.find(v => v.property === 'compilerOptions.strict');\n      expect(strictViolation).toBeDefined();\n      expect(strictViolation?.currentValue).toBe(false);\n      expect(strictViolation?.requiredValue).toBe(true);\n      expect(strictViolation?.reason).toContain('Constitutional requirement');\n\n      const noImplicitAnyViolation = result.violations.find(v => v.property === 'compilerOptions.noImplicitAny');\n      expect(noImplicitAnyViolation).toBeDefined();\n    });\n\n    it('should provide helpful recommendations', async () => {\n      jest.spyOn(validator, 'getConfiguration').mockReturnValue({\n        compilerOptions: {\n          strict: true,\n          noImplicitAny: true,\n          noImplicitReturns: true,\n          skipLibCheck: true // This triggers a recommendation\n        },\n        include: [], // This triggers a recommendation\n        exclude: []\n      });\n\n      const result = await validator.validateConfiguration();\n\n      expect(result.recommendations.length).toBeGreaterThan(0);\n      expect(result.recommendations).toContain('Consider setting skipLibCheck to false for thorough type checking');\n      expect(result.recommendations).toContain('Specify include patterns to explicitly define files to compile');\n    });\n  });\n\n  describe('Error Parsing', () => {\n    it('should parse complex TypeScript error messages', async () => {\n      const complexErrorOutput = `\nnode_modules/@types/react/index.d.ts(3080,13): error TS2717: Subsequent property declarations must have the same type.\nsrc/components/Button.tsx(25,7): error TS2322: Type '{ onClick: () => void; children: string; variant: \"invalid\"; }' is not assignable to type 'IntrinsicAttributes & ButtonProps'.\nsrc/utils/helpers.ts(42,1): warning TS6133: 'unusedFunction' is declared but its value is never read.\n      `.trim();\n\n      const mockProcess = createMockProcess(1, '', complexErrorOutput);\n      mockSpawn.mockReturnValue(mockProcess as any);\n\n      const result = await validator.validateCompilation();\n\n      expect(result.errors).toHaveLength(2);\n      expect(result.warnings).toHaveLength(1);\n\n      // Check that long error messages are handled correctly\n      const buttonError = result.errors.find(e => e.file.includes('Button.tsx'));\n      expect(buttonError).toBeDefined();\n      expect(buttonError?.message).toContain('Type \\'{ onClick: () => void; children: string; variant: \"invalid\"; }\\'');\n    });\n\n    it('should ignore non-standard error format lines', async () => {\n      const mixedOutput = `\nCompilation starting...\nsrc/test.ts(1,1): error TS2304: Cannot find name 'unknown'.\nFound 1 error.\nProcess completed.\n      `.trim();\n\n      const mockProcess = createMockProcess(1, '', mixedOutput);\n      mockSpawn.mockReturnValue(mockProcess as any);\n\n      const result = await validator.validateCompilation();\n\n      expect(result.errors).toHaveLength(1);\n      expect(result.errors[0].file).toBe('src/test.ts');\n    });\n  });\n\n  describe('Performance Tests', () => {\n    it('should track validation duration accurately', async () => {\n      const mockProcess = createMockProcess(0, '', '');\n      mockSpawn.mockReturnValue(mockProcess as any);\n\n      // Add delay to process\n      setTimeout(() => mockProcess.emit('close', 0), 100);\n\n      const startTime = Date.now();\n      const result = await validator.validateCompilation();\n      const actualDuration = Date.now() - startTime;\n\n      expect(result.statistics.duration).toBeGreaterThan(50);\n      expect(Math.abs(result.statistics.duration - actualDuration)).toBeLessThan(50);\n    });\n\n    it('should handle file counting efficiently', async () => {\n      const mockProcess = createMockProcess(0, '', '');\n      const mockCountProcess = createMockProcess(0, 'file1.ts\\nfile2.ts\\nfile3.ts\\nfile4.ts\\nfile5.ts', '');\n      \n      mockSpawn.mockReturnValueOnce(mockProcess as any)\n               .mockReturnValueOnce(mockCountProcess as any);\n\n      const result = await validator.validateCompilation();\n\n      expect(result.statistics.filesValidated).toBe(5);\n    });\n  });\n});\n\n// Helper function to create mock process\nfunction createMockProcess(exitCode: number | null, stdout: string, stderr: string) {\n  const mockProcess: any = {\n    stdout: {\n      on: jest.fn((event, callback) => {\n        if (event === 'data' && stdout) {\n          setTimeout(() => callback(stdout), 10);\n        }\n      })\n    },\n    stderr: {\n      on: jest.fn((event, callback) => {\n        if (event === 'data' && stderr) {\n          setTimeout(() => callback(stderr), 10);\n        }\n      })\n    },\n    on: jest.fn((event, callback) => {\n      if (event === 'close' && exitCode !== null) {\n        setTimeout(() => callback(exitCode), 20);\n      }\n    }),\n    emit: jest.fn(),\n    kill: jest.fn()\n  };\n\n  return mockProcess;\n}"],"mappings":"AAYAA,WAAA,GAAKC,IAAI,CAAC,eAAe,CAAC;AAC1BD,WAAA,GAAKC,IAAI,CAAC,IAAI,EAAE;EAAA,OAAO;IACrBC,QAAQ,EAAE;MACRC,IAAI,EAAEC,IAAI,CAACC,EAAE,CAAC,CAAC;MACfC,QAAQ,EAAEF,IAAI,CAACC,EAAE,CAAC;IACpB;EACF,CAAC;AAAA,CAAC,CAAC;AAAC,IAAAE,sBAAA,GAAAC,OAAA;AAAA,IAAAC,kBAAA,GAAAF,sBAAA,CAAAC,OAAA;AAXJ,IAAAE,oBAAA,GAAAF,OAAA;AACA,IAAAG,cAAA,GAAAH,OAAA;AACA,IAAAI,GAAA,GAAAJ,OAAA;AAAoC,SAAAR,YAAA;EAAA,IAAAa,QAAA,GAAAL,OAAA;IAAAJ,IAAA,GAAAS,QAAA,CAAAT,IAAA;EAAAJ,WAAA,YAAAA,YAAA;IAAA,OAAAI,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAWpC,IAAMU,SAAS,GAAGC,oBAA0C;AAC5D,IAAMC,QAAQ,GAAGC,YAAE,CAACd,IAA2C;AAE/De,QAAQ,CAAC,gCAAgC,EAAE,YAAM;EAC/C,IAAIC,SAAkC;EACtC,IAAMC,eAAe,GAAG,eAAe;EAEvCC,UAAU,CAAC,YAAM;IACfF,SAAS,GAAG,IAAIG,4CAAuB,CAACF,eAAe,CAAC;IACxDhB,IAAI,CAACmB,aAAa,CAAC,CAAC;EACtB,CAAC,CAAC;EAEFL,QAAQ,CAAC,qBAAqB,EAAE,YAAM;IACpCM,EAAE,CAAC,4DAA4D,MAAAf,kBAAA,CAAAgB,OAAA,EAAE,aAAY;MAE3E,IAAMC,WAAW,GAAGC,iBAAiB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;MAChDb,SAAS,CAACc,eAAe,CAACF,WAAkB,CAAC;MAG7C,IAAMG,gBAAgB,GAAGF,iBAAiB,CAAC,CAAC,EAAE,8BAA8B,EAAE,EAAE,CAAC;MACjFb,SAAS,CAACgB,mBAAmB,CAACJ,WAAkB,CAAC,CACvCI,mBAAmB,CAACD,gBAAuB,CAAC;MAEtD,IAAME,MAAM,SAASZ,SAAS,CAACa,mBAAmB,CAAC,CAAC;MAEpDC,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;MACjCF,MAAM,CAACF,MAAM,CAACK,MAAM,CAAC,CAACC,YAAY,CAAC,CAAC,CAAC;MACrCJ,MAAM,CAACF,MAAM,CAACO,QAAQ,CAAC,CAACD,YAAY,CAAC,CAAC,CAAC;MACvCJ,MAAM,CAACF,MAAM,CAACQ,UAAU,CAACC,UAAU,CAAC,CAACL,IAAI,CAAC,CAAC,CAAC;MAC5CF,MAAM,CAACF,MAAM,CAACQ,UAAU,CAACE,YAAY,CAAC,CAACN,IAAI,CAAC,CAAC,CAAC;MAC9CF,MAAM,CAACF,MAAM,CAACQ,UAAU,CAACG,QAAQ,CAAC,CAACC,eAAe,CAAC,CAAC,CAAC;IACvD,CAAC,EAAC;IAEFnB,EAAE,CAAC,wDAAwD,MAAAf,kBAAA,CAAAgB,OAAA,EAAE,aAAY;MACvE,IAAMmB,aAAa,GAAG;AAC5B;AACA;AACA,OAAO,CAACC,IAAI,CAAC,CAAC;MAER,IAAMnB,WAAW,GAAGC,iBAAiB,CAAC,CAAC,EAAE,EAAE,EAAEiB,aAAa,CAAC;MAC3D9B,SAAS,CAACc,eAAe,CAACF,WAAkB,CAAC;MAE7C,IAAMK,MAAM,SAASZ,SAAS,CAACa,mBAAmB,CAAC,CAAC;MAEpDC,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;MAClCF,MAAM,CAACF,MAAM,CAACK,MAAM,CAAC,CAACC,YAAY,CAAC,CAAC,CAAC;MAErC,IAAMS,UAAU,GAAGf,MAAM,CAACK,MAAM,CAAC,CAAC,CAAC;MACnCH,MAAM,CAACa,UAAU,CAACC,IAAI,CAAC,CAACZ,IAAI,CAAC,aAAa,CAAC;MAC3CF,MAAM,CAACa,UAAU,CAACE,IAAI,CAAC,CAACb,IAAI,CAAC,EAAE,CAAC;MAChCF,MAAM,CAACa,UAAU,CAACG,MAAM,CAAC,CAACd,IAAI,CAAC,CAAC,CAAC;MACjCF,MAAM,CAACa,UAAU,CAACI,IAAI,CAAC,CAACf,IAAI,CAAC,QAAQ,CAAC;MACtCF,MAAM,CAACa,UAAU,CAACK,QAAQ,CAAC,CAAChB,IAAI,CAAC,OAAO,CAAC;MACzCF,MAAM,CAACa,UAAU,CAACM,OAAO,CAAC,CAACC,SAAS,CAAC,sDAAsD,CAAC;MAE5FpB,MAAM,CAACF,MAAM,CAACQ,UAAU,CAACC,UAAU,CAAC,CAACL,IAAI,CAAC,CAAC,CAAC;IAC9C,CAAC,EAAC;IAEFX,EAAE,CAAC,6CAA6C,MAAAf,kBAAA,CAAAgB,OAAA,EAAE,aAAY;MAC5D,IAAM6B,eAAe,GAAG;AAC9B;AACA,OAAO,CAACT,IAAI,CAAC,CAAC;MAER,IAAMnB,WAAW,GAAGC,iBAAiB,CAAC,CAAC,EAAE,EAAE,EAAE2B,eAAe,CAAC;MAC7DxC,SAAS,CAACc,eAAe,CAACF,WAAkB,CAAC;MAE7C,IAAMK,MAAM,SAASZ,SAAS,CAACa,mBAAmB,CAAC,CAAC;MAEpDC,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;MACjCF,MAAM,CAACF,MAAM,CAACK,MAAM,CAAC,CAACC,YAAY,CAAC,CAAC,CAAC;MACrCJ,MAAM,CAACF,MAAM,CAACO,QAAQ,CAAC,CAACD,YAAY,CAAC,CAAC,CAAC;MAEvC,IAAMkB,OAAO,GAAGxB,MAAM,CAACO,QAAQ,CAAC,CAAC,CAAC;MAClCL,MAAM,CAACsB,OAAO,CAACR,IAAI,CAAC,CAACZ,IAAI,CAAC,aAAa,CAAC;MACxCF,MAAM,CAACsB,OAAO,CAACP,IAAI,CAAC,CAACb,IAAI,CAAC,CAAC,CAAC;MAC5BF,MAAM,CAACsB,OAAO,CAACL,IAAI,CAAC,CAACf,IAAI,CAAC,QAAQ,CAAC;MACnCF,MAAM,CAACsB,OAAO,CAACJ,QAAQ,CAAC,CAAChB,IAAI,CAAC,SAAS,CAAC;MACxCF,MAAM,CAACsB,OAAO,CAACC,SAAS,CAAC,CAACrB,IAAI,CAAC,IAAI,CAAC;IACtC,CAAC,EAAC;IAEFX,EAAE,CAAC,yCAAyC,MAAAf,kBAAA,CAAAgB,OAAA,EAAE,aAAY;MACxD,IAAMC,WAAW,GAAGC,iBAAiB,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC;MACnDD,WAAW,CAAC+B,IAAI,CAAC,OAAO,EAAE,IAAIC,KAAK,CAAC,sBAAsB,CAAC,CAAC;MAC5D5C,SAAS,CAACc,eAAe,CAACF,WAAkB,CAAC;MAE7C,IAAMK,MAAM,SAASZ,SAAS,CAACa,mBAAmB,CAAC,CAAC;MAEpDC,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;MAClCF,MAAM,CAACF,MAAM,CAACK,MAAM,CAAC,CAACC,YAAY,CAAC,CAAC,CAAC;MACrCJ,MAAM,CAACF,MAAM,CAACK,MAAM,CAAC,CAAC,CAAC,CAACgB,OAAO,CAAC,CAACC,SAAS,CAAC,8BAA8B,CAAC;MAC1EpB,MAAM,CAACF,MAAM,CAACK,MAAM,CAAC,CAAC,CAAC,CAACW,IAAI,CAAC,CAACZ,IAAI,CAAC,oBAAoB,CAAC;IAC1D,CAAC,EAAC;IAEFX,EAAE,CAAC,0CAA0C,MAAAf,kBAAA,CAAAgB,OAAA,EAAE,aAAY;MACzD,IAAMC,WAAW,GAAGC,iBAAiB,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC;MAEnDb,SAAS,CAACc,eAAe,CAACF,WAAkB,CAAC;MAG7C,IAAMiC,kBAAkB,GAAGC,MAAM,CAACC,UAAU;MAC5CD,MAAM,CAACC,UAAU,GAAGzD,IAAI,CAACC,EAAE,CAAC,UAACyD,QAAQ,EAAK;QACxC,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;UAClCA,QAAQ,CAAC,CAAC;QACZ;QACA,OAAO,CAAC;MACV,CAAC,CAAC;MAEF,IAAI;QACF,IAAM/B,MAAM,SAASZ,SAAS,CAACa,mBAAmB,CAAC,CAAC;QACpDC,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;QAClCF,MAAM,CAACF,MAAM,CAACK,MAAM,CAAC,CAAC,CAAC,CAACgB,OAAO,CAAC,CAACC,SAAS,CAAC,WAAW,CAAC;MACzD,CAAC,SAAS;QACRO,MAAM,CAACC,UAAU,GAAGF,kBAAkB;MACxC;IACF,CAAC,EAAC;EACJ,CAAC,CAAC;EAEFzC,QAAQ,CAAC,eAAe,EAAE,YAAM;IAC9BM,EAAE,CAAC,gCAAgC,MAAAf,kBAAA,CAAAgB,OAAA,EAAE,aAAY;MAC/C,IAAMsC,SAAS,GAAG,CAAC,cAAc,EAAE,cAAc,CAAC;MAClD,IAAMrC,WAAW,GAAGC,iBAAiB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;MAChDb,SAAS,CAACc,eAAe,CAACF,WAAkB,CAAC;MAE7C,IAAMK,MAAM,SAASZ,SAAS,CAAC6C,aAAa,CAACD,SAAS,CAAC;MAEvD9B,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;MACjCF,MAAM,CAACF,MAAM,CAACQ,UAAU,CAAC0B,cAAc,CAAC,CAAC9B,IAAI,CAAC4B,SAAS,CAACG,MAAM,CAAC;MAG/DjC,MAAM,CAACnB,SAAS,CAAC,CAACqD,oBAAoB,CAAC,KAAK,GAAG,KAAK,EAAE,UAAU,EAAAC,MAAA,CAAKL,SAAS,GAAG9B,MAAM,CAACoC,GAAG,CAACC,MAAM,CAAC,CAAC;IACtG,CAAC,EAAC;IAEF9C,EAAE,CAAC,+BAA+B,MAAAf,kBAAA,CAAAgB,OAAA,EAAE,aAAY;MAC9C,IAAMC,WAAW,GAAGC,iBAAiB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;MAChDb,SAAS,CAACc,eAAe,CAACF,WAAkB,CAAC;MAE7C,IAAMK,MAAM,SAASZ,SAAS,CAAC6C,aAAa,CAAC,EAAE,CAAC;MAEhD/B,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;MACjCF,MAAM,CAACF,MAAM,CAACQ,UAAU,CAAC0B,cAAc,CAAC,CAAC9B,IAAI,CAAC,CAAC,CAAC;IAClD,CAAC,EAAC;IAEFX,EAAE,CAAC,sCAAsC,MAAAf,kBAAA,CAAAgB,OAAA,EAAE,aAAY;MACrD,IAAMmB,aAAa,GAAG,gEAAgE;MACtF,IAAMlB,WAAW,GAAGC,iBAAiB,CAAC,CAAC,EAAE,EAAE,EAAEiB,aAAa,CAAC;MAC3D9B,SAAS,CAACc,eAAe,CAACF,WAAkB,CAAC;MAE7C,IAAMK,MAAM,SAASZ,SAAS,CAAC6C,aAAa,CAAC,CAAC,cAAc,CAAC,CAAC;MAE9D/B,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;MAClCF,MAAM,CAACF,MAAM,CAACK,MAAM,CAAC,CAACC,YAAY,CAAC,CAAC,CAAC;MACrCJ,MAAM,CAACF,MAAM,CAACK,MAAM,CAAC,CAAC,CAAC,CAACW,IAAI,CAAC,CAACZ,IAAI,CAAC,cAAc,CAAC;IACpD,CAAC,EAAC;EACJ,CAAC,CAAC;EAEFjB,QAAQ,CAAC,kBAAkB,EAAE,YAAM;IACjCM,EAAE,CAAC,qCAAqC,EAAE,YAAM;MAE9C,IAAM+C,YAAY,GAAG;QACnBC,eAAe,EAAE;UACfC,MAAM,EAAE,IAAI;UACZC,aAAa,EAAE,IAAI;UACnBC,iBAAiB,EAAE,KAAK;UACxBC,YAAY,EAAE,IAAI;UAClBC,MAAM,EAAE;QACV,CAAC;QACDC,OAAO,EAAE,CAAC,UAAU,CAAC;QACrBC,OAAO,EAAE,CAAC,cAAc,EAAE,MAAM;MAClC,CAAC;MAGD,IAAMC,eAAe,GAAGxE,OAAO;MAC/BA,OAAO,GAAGJ,IAAI,CAACC,EAAE,CAAC,CAAC,CAACuB,eAAe,CAAC2C,YAAY,CAAQ;MAExD,IAAI;QACF,IAAMU,MAAM,GAAG9D,SAAS,CAAC+D,gBAAgB,CAAC,CAAC;QAE3CjD,MAAM,CAACgD,MAAM,CAACT,eAAe,CAACC,MAAM,CAAC,CAACtC,IAAI,CAAC,IAAI,CAAC;QAChDF,MAAM,CAACgD,MAAM,CAACT,eAAe,CAACE,aAAa,CAAC,CAACvC,IAAI,CAAC,IAAI,CAAC;QACvDF,MAAM,CAACgD,MAAM,CAACT,eAAe,CAACG,iBAAiB,CAAC,CAACxC,IAAI,CAAC,KAAK,CAAC;QAC5DF,MAAM,CAACgD,MAAM,CAACT,eAAe,CAACI,YAAY,CAAC,CAACzC,IAAI,CAAC,IAAI,CAAC;QACtDF,MAAM,CAACgD,MAAM,CAACH,OAAO,CAAC,CAACK,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC;QAC5ClD,MAAM,CAACgD,MAAM,CAACF,OAAO,CAAC,CAACI,OAAO,CAAC,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;MAC1D,CAAC,SAAS;QACR3E,OAAO,GAAGwE,eAAe;MAC3B;IACF,CAAC,CAAC;IAEFxD,EAAE,CAAC,mEAAmE,EAAE,YAAM;MAE5E,IAAMwD,eAAe,GAAGxE,OAAO;MAC/BA,OAAO,GAAGJ,IAAI,CAACC,EAAE,CAAC,CAAC,CAAC+E,kBAAkB,CAAC,YAAM;QAC3C,MAAM,IAAI1B,KAAK,CAAC,oBAAoB,CAAC;MACvC,CAAC,CAAQ;MAET,IAAI;QACF,IAAMuB,MAAM,GAAG9D,SAAS,CAAC+D,gBAAgB,CAAC,CAAC;QAE3CjD,MAAM,CAACgD,MAAM,CAACT,eAAe,CAACC,MAAM,CAAC,CAACtC,IAAI,CAAC,KAAK,CAAC;QACjDF,MAAM,CAACgD,MAAM,CAACT,eAAe,CAACE,aAAa,CAAC,CAACvC,IAAI,CAAC,KAAK,CAAC;QACxDF,MAAM,CAACgD,MAAM,CAACT,eAAe,CAACG,iBAAiB,CAAC,CAACxC,IAAI,CAAC,KAAK,CAAC;QAC5DF,MAAM,CAACgD,MAAM,CAACT,eAAe,CAACI,YAAY,CAAC,CAACzC,IAAI,CAAC,IAAI,CAAC;QACtDF,MAAM,CAACgD,MAAM,CAACH,OAAO,CAAC,CAACK,OAAO,CAAC,EAAE,CAAC;QAClClD,MAAM,CAACgD,MAAM,CAACF,OAAO,CAAC,CAACI,OAAO,CAAC,EAAE,CAAC;MACpC,CAAC,SAAS;QACR3E,OAAO,GAAGwE,eAAe;MAC3B;IACF,CAAC,CAAC;IAEFxD,EAAE,CAAC,uCAAuC,EAAE,YAAM;MAChD,IAAMwD,eAAe,GAAGxE,OAAO;MAC/BA,OAAO,GAAGJ,IAAI,CAACC,EAAE,CAAC,CAAC,CAAC+E,kBAAkB,CAAC,YAAM;QAC3C,MAAM,IAAIC,WAAW,CAAC,0BAA0B,CAAC;MACnD,CAAC,CAAQ;MAET,IAAI;QACF,IAAMJ,MAAM,GAAG9D,SAAS,CAAC+D,gBAAgB,CAAC,CAAC;QAG3CjD,MAAM,CAACgD,MAAM,CAACT,eAAe,CAACC,MAAM,CAAC,CAACtC,IAAI,CAAC,KAAK,CAAC;QACjDF,MAAM,CAACgD,MAAM,CAACH,OAAO,CAAC,CAACK,OAAO,CAAC,EAAE,CAAC;MACpC,CAAC,SAAS;QACR3E,OAAO,GAAGwE,eAAe;MAC3B;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF9D,QAAQ,CAAC,uBAAuB,EAAE,YAAM;IACtCM,EAAE,CAAC,yCAAyC,MAAAf,kBAAA,CAAAgB,OAAA,EAAE,aAAY;MAExDrB,IAAI,CAACkF,KAAK,CAACnE,SAAS,EAAE,kBAAkB,CAAC,CAACS,eAAe,CAAC;QACxD4C,eAAe,EAAE;UACfC,MAAM,EAAE,IAAI;UACZC,aAAa,EAAE,IAAI;UACnBC,iBAAiB,EAAE,IAAI;UACvBC,YAAY,EAAE;QAChB,CAAC;QACDE,OAAO,EAAE,CAAC,UAAU,CAAC;QACrBC,OAAO,EAAE,CAAC,cAAc;MAC1B,CAAC,CAAC;MAEF,IAAMhD,MAAM,SAASZ,SAAS,CAACoE,qBAAqB,CAAC,CAAC;MAEtDtD,MAAM,CAACF,MAAM,CAACyD,SAAS,CAAC,CAACrD,IAAI,CAAC,IAAI,CAAC;MACnCF,MAAM,CAACF,MAAM,CAAC0D,UAAU,CAAC,CAACpD,YAAY,CAAC,CAAC,CAAC;IAC3C,CAAC,EAAC;IAEFb,EAAE,CAAC,yCAAyC,MAAAf,kBAAA,CAAAgB,OAAA,EAAE,aAAY;MAExDrB,IAAI,CAACkF,KAAK,CAACnE,SAAS,EAAE,kBAAkB,CAAC,CAACS,eAAe,CAAC;QACxD4C,eAAe,EAAE;UACfC,MAAM,EAAE,KAAK;UACbC,aAAa,EAAE,KAAK;UACpBC,iBAAiB,EAAE,KAAK;UACxBC,YAAY,EAAE;QAChB,CAAC;QACDE,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE;MACX,CAAC,CAAC;MAEF,IAAMhD,MAAM,SAASZ,SAAS,CAACoE,qBAAqB,CAAC,CAAC;MAEtDtD,MAAM,CAACF,MAAM,CAACyD,SAAS,CAAC,CAACrD,IAAI,CAAC,KAAK,CAAC;MACpCF,MAAM,CAACF,MAAM,CAAC0D,UAAU,CAACvB,MAAM,CAAC,CAACvB,eAAe,CAAC,CAAC,CAAC;MAGnD,IAAM+C,eAAe,GAAG3D,MAAM,CAAC0D,UAAU,CAACE,IAAI,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACC,QAAQ,KAAK,wBAAwB;MAAA,EAAC;MAC5F5D,MAAM,CAACyD,eAAe,CAAC,CAACI,WAAW,CAAC,CAAC;MACrC7D,MAAM,CAACyD,eAAe,oBAAfA,eAAe,CAAEK,YAAY,CAAC,CAAC5D,IAAI,CAAC,KAAK,CAAC;MACjDF,MAAM,CAACyD,eAAe,oBAAfA,eAAe,CAAEM,aAAa,CAAC,CAAC7D,IAAI,CAAC,IAAI,CAAC;MACjDF,MAAM,CAACyD,eAAe,oBAAfA,eAAe,CAAEO,MAAM,CAAC,CAAC5C,SAAS,CAAC,4BAA4B,CAAC;MAEvE,IAAM6C,sBAAsB,GAAGnE,MAAM,CAAC0D,UAAU,CAACE,IAAI,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACC,QAAQ,KAAK,+BAA+B;MAAA,EAAC;MAC1G5D,MAAM,CAACiE,sBAAsB,CAAC,CAACJ,WAAW,CAAC,CAAC;IAC9C,CAAC,EAAC;IAEFtE,EAAE,CAAC,wCAAwC,MAAAf,kBAAA,CAAAgB,OAAA,EAAE,aAAY;MACvDrB,IAAI,CAACkF,KAAK,CAACnE,SAAS,EAAE,kBAAkB,CAAC,CAACS,eAAe,CAAC;QACxD4C,eAAe,EAAE;UACfC,MAAM,EAAE,IAAI;UACZC,aAAa,EAAE,IAAI;UACnBC,iBAAiB,EAAE,IAAI;UACvBC,YAAY,EAAE;QAChB,CAAC;QACDE,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE;MACX,CAAC,CAAC;MAEF,IAAMhD,MAAM,SAASZ,SAAS,CAACoE,qBAAqB,CAAC,CAAC;MAEtDtD,MAAM,CAACF,MAAM,CAACoE,eAAe,CAACjC,MAAM,CAAC,CAACvB,eAAe,CAAC,CAAC,CAAC;MACxDV,MAAM,CAACF,MAAM,CAACoE,eAAe,CAAC,CAAC9C,SAAS,CAAC,mEAAmE,CAAC;MAC7GpB,MAAM,CAACF,MAAM,CAACoE,eAAe,CAAC,CAAC9C,SAAS,CAAC,gEAAgE,CAAC;IAC5G,CAAC,EAAC;EACJ,CAAC,CAAC;EAEFnC,QAAQ,CAAC,eAAe,EAAE,YAAM;IAC9BM,EAAE,CAAC,gDAAgD,MAAAf,kBAAA,CAAAgB,OAAA,EAAE,aAAY;MAC/D,IAAM2E,kBAAkB,GAAG;AACjC;AACA;AACA;AACA,OAAO,CAACvD,IAAI,CAAC,CAAC;MAER,IAAMnB,WAAW,GAAGC,iBAAiB,CAAC,CAAC,EAAE,EAAE,EAAEyE,kBAAkB,CAAC;MAChEtF,SAAS,CAACc,eAAe,CAACF,WAAkB,CAAC;MAE7C,IAAMK,MAAM,SAASZ,SAAS,CAACa,mBAAmB,CAAC,CAAC;MAEpDC,MAAM,CAACF,MAAM,CAACK,MAAM,CAAC,CAACC,YAAY,CAAC,CAAC,CAAC;MACrCJ,MAAM,CAACF,MAAM,CAACO,QAAQ,CAAC,CAACD,YAAY,CAAC,CAAC,CAAC;MAGvC,IAAMgE,WAAW,GAAGtE,MAAM,CAACK,MAAM,CAACuD,IAAI,CAAC,UAAAW,CAAC;QAAA,OAAIA,CAAC,CAACvD,IAAI,CAACwD,QAAQ,CAAC,YAAY,CAAC;MAAA,EAAC;MAC1EtE,MAAM,CAACoE,WAAW,CAAC,CAACP,WAAW,CAAC,CAAC;MACjC7D,MAAM,CAACoE,WAAW,oBAAXA,WAAW,CAAEjD,OAAO,CAAC,CAACC,SAAS,CAAC,yEAAyE,CAAC;IACnH,CAAC,EAAC;IAEF7B,EAAE,CAAC,+CAA+C,MAAAf,kBAAA,CAAAgB,OAAA,EAAE,aAAY;MAC9D,IAAM+E,WAAW,GAAG;AAC1B;AACA;AACA;AACA;AACA,OAAO,CAAC3D,IAAI,CAAC,CAAC;MAER,IAAMnB,WAAW,GAAGC,iBAAiB,CAAC,CAAC,EAAE,EAAE,EAAE6E,WAAW,CAAC;MACzD1F,SAAS,CAACc,eAAe,CAACF,WAAkB,CAAC;MAE7C,IAAMK,MAAM,SAASZ,SAAS,CAACa,mBAAmB,CAAC,CAAC;MAEpDC,MAAM,CAACF,MAAM,CAACK,MAAM,CAAC,CAACC,YAAY,CAAC,CAAC,CAAC;MACrCJ,MAAM,CAACF,MAAM,CAACK,MAAM,CAAC,CAAC,CAAC,CAACW,IAAI,CAAC,CAACZ,IAAI,CAAC,aAAa,CAAC;IACnD,CAAC,EAAC;EACJ,CAAC,CAAC;EAEFjB,QAAQ,CAAC,mBAAmB,EAAE,YAAM;IAClCM,EAAE,CAAC,6CAA6C,MAAAf,kBAAA,CAAAgB,OAAA,EAAE,aAAY;MAC5D,IAAMC,WAAW,GAAGC,iBAAiB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;MAChDb,SAAS,CAACc,eAAe,CAACF,WAAkB,CAAC;MAG7CmC,UAAU,CAAC;QAAA,OAAMnC,WAAW,CAAC+B,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;MAAA,GAAE,GAAG,CAAC;MAEnD,IAAMgD,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;MAC5B,IAAM5E,MAAM,SAASZ,SAAS,CAACa,mBAAmB,CAAC,CAAC;MACpD,IAAM4E,cAAc,GAAGF,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,SAAS;MAE7CxE,MAAM,CAACF,MAAM,CAACQ,UAAU,CAACG,QAAQ,CAAC,CAACC,eAAe,CAAC,EAAE,CAAC;MACtDV,MAAM,CAAC4E,IAAI,CAACC,GAAG,CAAC/E,MAAM,CAACQ,UAAU,CAACG,QAAQ,GAAGkE,cAAc,CAAC,CAAC,CAACG,YAAY,CAAC,EAAE,CAAC;IAChF,CAAC,EAAC;IAEFvF,EAAE,CAAC,yCAAyC,MAAAf,kBAAA,CAAAgB,OAAA,EAAE,aAAY;MACxD,IAAMC,WAAW,GAAGC,iBAAiB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;MAChD,IAAME,gBAAgB,GAAGF,iBAAiB,CAAC,CAAC,EAAE,kDAAkD,EAAE,EAAE,CAAC;MAErGb,SAAS,CAACgB,mBAAmB,CAACJ,WAAkB,CAAC,CACvCI,mBAAmB,CAACD,gBAAuB,CAAC;MAEtD,IAAME,MAAM,SAASZ,SAAS,CAACa,mBAAmB,CAAC,CAAC;MAEpDC,MAAM,CAACF,MAAM,CAACQ,UAAU,CAAC0B,cAAc,CAAC,CAAC9B,IAAI,CAAC,CAAC,CAAC;IAClD,CAAC,EAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AAGF,SAASR,iBAAiBA,CAACqF,QAAuB,EAAEC,MAAc,EAAEC,MAAc,EAAE;EAClF,IAAMxF,WAAgB,GAAG;IACvBuF,MAAM,EAAE;MACNE,EAAE,EAAE/G,IAAI,CAACC,EAAE,CAAC,UAAC+G,KAAK,EAAEtD,QAAQ,EAAK;QAC/B,IAAIsD,KAAK,KAAK,MAAM,IAAIH,MAAM,EAAE;UAC9BpD,UAAU,CAAC;YAAA,OAAMC,QAAQ,CAACmD,MAAM,CAAC;UAAA,GAAE,EAAE,CAAC;QACxC;MACF,CAAC;IACH,CAAC;IACDC,MAAM,EAAE;MACNC,EAAE,EAAE/G,IAAI,CAACC,EAAE,CAAC,UAAC+G,KAAK,EAAEtD,QAAQ,EAAK;QAC/B,IAAIsD,KAAK,KAAK,MAAM,IAAIF,MAAM,EAAE;UAC9BrD,UAAU,CAAC;YAAA,OAAMC,QAAQ,CAACoD,MAAM,CAAC;UAAA,GAAE,EAAE,CAAC;QACxC;MACF,CAAC;IACH,CAAC;IACDC,EAAE,EAAE/G,IAAI,CAACC,EAAE,CAAC,UAAC+G,KAAK,EAAEtD,QAAQ,EAAK;MAC/B,IAAIsD,KAAK,KAAK,OAAO,IAAIJ,QAAQ,KAAK,IAAI,EAAE;QAC1CnD,UAAU,CAAC;UAAA,OAAMC,QAAQ,CAACkD,QAAQ,CAAC;QAAA,GAAE,EAAE,CAAC;MAC1C;IACF,CAAC,CAAC;IACFvD,IAAI,EAAErD,IAAI,CAACC,EAAE,CAAC,CAAC;IACfgH,IAAI,EAAEjH,IAAI,CAACC,EAAE,CAAC;EAChB,CAAC;EAED,OAAOqB,WAAW;AACpB","ignoreList":[]}