{"version":3,"names":["_logger","require","mockConsoleLog","jest","spyOn","console","mockImplementation","mockConsoleWarn","mockConsoleError","describe","beforeEach","clearAllMocks","afterAll","mockRestore","test","logger","Logger","expect","toBeInstanceOf","message","info","toHaveBeenCalledWith","undefined","context","operation","duration","warn","error","code","webLogger","nativeLogger"],"sources":["logger-test.ts"],"sourcesContent":["import { Logger } from \"@/lib/data/supabase/supabase/logger\";\n\n// Mock console methods\nconst mockConsoleLog = jest.spyOn(console, 'log').mockImplementation();\nconst mockConsoleWarn = jest.spyOn(console, 'warn').mockImplementation();\nconst mockConsoleError = jest.spyOn(console, 'error').mockImplementation();\n\ndescribe(\"Logger\", () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  afterAll(() => {\n    mockConsoleLog.mockRestore();\n    mockConsoleWarn.mockRestore();\n    mockConsoleError.mockRestore();\n  });\n\n  test(\"creates logger with service name\", () => {\n    const logger = new Logger(\"TestService\");\n    expect(logger).toBeInstanceOf(Logger);\n  });\n\n  test(\"logs info messages with service prefix\", () => {\n    const logger = new Logger(\"TestService\");\n    const message = \"Test info message\";\n    \n    logger.info(message);\n    \n    expect(mockConsoleLog).toHaveBeenCalledWith(\n      \"[TestService] Test info message\",\n      undefined\n    );\n  });\n\n  test(\"logs info messages with context\", () => {\n    const logger = new Logger(\"TestService\");\n    const message = \"Test info message\";\n    const context = { operation: \"test\", duration: 123 };\n    \n    logger.info(message, context);\n    \n    expect(mockConsoleLog).toHaveBeenCalledWith(\n      \"[TestService] Test info message\",\n      context\n    );\n  });\n\n  test(\"logs warning messages\", () => {\n    const logger = new Logger(\"TestService\");\n    const message = \"Test warning message\";\n    const context = { operation: \"test\" };\n    \n    logger.warn(message, context);\n    \n    expect(mockConsoleWarn).toHaveBeenCalledWith(\n      \"[TestService] Test warning message\",\n      context\n    );\n  });\n\n  test(\"logs error messages\", () => {\n    const logger = new Logger(\"TestService\");\n    const message = \"Test error message\";\n    const context = { \n      error: { \n        message: \"Something went wrong\", \n        code: \"ERR_TEST\" \n      } \n    };\n    \n    logger.error(message, context);\n    \n    expect(mockConsoleError).toHaveBeenCalledWith(\n      \"[TestService] Test error message\",\n      context\n    );\n  });\n\n  test(\"handles undefined context gracefully\", () => {\n    const logger = new Logger(\"TestService\");\n    \n    logger.info(\"Info without context\");\n    logger.warn(\"Warning without context\");\n    logger.error(\"Error without context\");\n    \n    expect(mockConsoleLog).toHaveBeenCalledWith(\n      \"[TestService] Info without context\",\n      undefined\n    );\n    expect(mockConsoleWarn).toHaveBeenCalledWith(\n      \"[TestService] Warning without context\",\n      undefined\n    );\n    expect(mockConsoleError).toHaveBeenCalledWith(\n      \"[TestService] Error without context\",\n      undefined\n    );\n  });\n\n  test(\"formats different service names correctly\", () => {\n    const webLogger = new Logger(\"SupabaseWebService\");\n    const nativeLogger = new Logger(\"SupabaseNativeService\");\n    \n    webLogger.info(\"Web message\");\n    nativeLogger.info(\"Native message\");\n    \n    expect(mockConsoleLog).toHaveBeenCalledWith(\n      \"[SupabaseWebService] Web message\",\n      undefined\n    );\n    expect(mockConsoleLog).toHaveBeenCalledWith(\n      \"[SupabaseNativeService] Native message\",\n      undefined\n    );\n  });\n});"],"mappings":"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","ignoreList":[]}