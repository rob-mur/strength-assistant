{"version":3,"names":["_Exercise","require","_state","_initializer","_reactNative","_LoggingUtils","_RepositoryUtils","getFirebaseModule","Platform","OS","FirebaseExerciseRepo","exports","_classCallCheck2","default","initialized","ensureInitialized","_createClass2","key","value","initializeFirebaseServices","db","getDb","Error","RepositoryLogger","logSuccess","error","logError","_addExercise","_asyncToGenerator2","userId","exercise","ExerciseValidator","validateExerciseInput","sanitizedName","sanitizeExerciseName","name","newExercise","created_at","Date","toISOString","path","RepositoryUtils","getExercisesCollectionPath","firebaseModule","collection","addDoc","exercisesCollection","add","addExercise","_x","_x2","apply","arguments","getExercises","_this","exercises$","observable","exercisesQuery","createExercisesQuery","unsubscribe","onSnapshot","snapshot","exercises","processSnapshot","set","_unsubscribe","subscribeToExercises","callback","_this2","_deleteExercise","exerciseId","validateExerciseId","doc","deleteDoc","exerciseDoc","delete","deleteExercise","_x3","_x4","_getExerciseById","get","find","id","undefined","getExerciseById","_x5","_x6","isSyncing","isOnline","_navigator$onLine","navigator","onLine","getPendingChangesCount","_forceSync","Promise","resolve","forceSync","hasErrors","getErrorMessage","query","orderBy","forEach","data","validateExerciseData","push","user_id","getInstance","instance"],"sources":["FirebaseExerciseRepo.ts"],"sourcesContent":["import { Exercise, ExerciseInput, ExerciseValidator } from \"../models/Exercise\";\nimport { IExerciseRepo } from \"./IExerciseRepo\";\nimport { Observable, observable } from \"@legendapp/state\";\nimport { initializeFirebaseServices, getDb } from \"../data/firebase/initializer\";\nimport { Platform } from \"react-native\";\nimport { RepositoryLogger } from \"./utils/LoggingUtils\";\nimport { RepositoryUtils } from \"./utils/RepositoryUtils\";\n\n// Platform-specific Firebase types and functions - use runtime detection\n\n// Import modular Firestore functions for web\nconst getFirebaseModule = () => {\n\tif (Platform.OS === \"web\") {\n\t\t// eslint-disable-next-line @typescript-eslint/no-require-imports\n\t\treturn require(\"../data/firebase/firebase.web\");\n\t} else {\n\t\t// For native, we use React Native Firebase which has different API\n\t\treturn null;\n\t}\n};\n\n/**\n * Firebase implementation of ExerciseRepo\n * Uses Firebase Firestore for data persistence with real-time updates\n */\nexport class FirebaseExerciseRepo implements IExerciseRepo {\n\tprivate static instance: FirebaseExerciseRepo;\n\tprivate initialized = false;\n\n\tprivate constructor() {\n\t\tthis.ensureInitialized();\n\t}\n\n\tpublic static getInstance(): FirebaseExerciseRepo {\n\t\tif (!FirebaseExerciseRepo.instance) {\n\t\t\tFirebaseExerciseRepo.instance = new FirebaseExerciseRepo();\n\t\t}\n\t\treturn FirebaseExerciseRepo.instance;\n\t}\n\n\tprivate ensureInitialized(): void {\n\t\tif (!this.initialized) {\n\t\t\ttry {\n\t\t\t\tinitializeFirebaseServices();\n\n\t\t\t\t// Validate that Firebase is actually ready\n\t\t\t\tconst db = getDb();\n\t\t\t\tif (!db) {\n\t\t\t\t\tthrow new Error(\"Firebase initialization completed but Firestore instance is not available\");\n\t\t\t\t}\n\n\t\t\t\tthis.initialized = true;\n\t\t\t\tRepositoryLogger.logSuccess(\"FirebaseExerciseRepo\", \"initialize\");\n\t\t\t} catch (error: any) {\n\t\t\t\tRepositoryLogger.logError(\"FirebaseExerciseRepo\", \"initialize Firebase services\", error);\n\t\t\t\tthis.initialized = false; // Ensure we retry on next call\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Add a new exercise to Firebase Firestore\n\t */\n\tasync addExercise(userId: string, exercise: ExerciseInput): Promise<void> {\n\t\tthis.ensureInitialized();\n\n\t\ttry {\n\t\t\t// Validate and sanitize input\n\t\t\tExerciseValidator.validateExerciseInput(exercise);\n\t\t\tconst sanitizedName = ExerciseValidator.sanitizeExerciseName(exercise.name);\n\n\t\t\tconst db = getDb();\n\t\t\tif (!db) {\n\t\t\t\tthrow new Error(\"Firebase Firestore instance is not available. Ensure Firebase is properly initialized.\");\n\t\t\t}\n\n\t\t\tconst newExercise = {\n\t\t\t\tname: sanitizedName,\n\t\t\t\tcreated_at: new Date().toISOString()\n\t\t\t};\n\n\t\t\tconst path = RepositoryUtils.getExercisesCollectionPath(userId);\n\n\t\t\tif (Platform.OS === \"web\") {\n\t\t\t\t// Use modular SDK for web\n\t\t\t\tconst firebaseModule = getFirebaseModule();\n\t\t\t\tif (!firebaseModule) {\n\t\t\t\t\tthrow new Error(\"Firebase web module not available\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst { collection, addDoc } = firebaseModule;\n\t\t\t\tconst exercisesCollection = collection(db, path);\n\t\t\t\tawait addDoc(exercisesCollection, newExercise);\n\t\t\t} else {\n\t\t\t\t// Use React Native Firebase for native platforms\n\t\t\t\tconst exercisesCollection = db.collection(path);\n\t\t\t\tawait exercisesCollection.add(newExercise);\n\t\t\t}\n\n\t\t\tRepositoryLogger.logSuccess(\"FirebaseExerciseRepo\", \"addExercise\");\n\t\t} catch (error: any) {\n\t\t\tRepositoryLogger.logError(\"FirebaseExerciseRepo\", \"add exercise\", error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Get all exercises as an Observable\n\t */\n\tgetExercises(userId: string): Observable<Exercise[]> {\n\t\tthis.ensureInitialized();\n\n\t\tconst exercises$ = observable<Exercise[]>([]);\n\n\t\ttry {\n\t\t\tconst exercisesQuery = this.createExercisesQuery(userId);\n\n\t\t\t// Set up real-time listener\n\t\t\tconst unsubscribe = exercisesQuery.onSnapshot((snapshot: any) => {\n\t\t\t\tconst exercises = this.processSnapshot(snapshot, userId);\n\t\t\t\texercises$.set(exercises);\n\t\t\t});\n\n\t\t\t// Store unsubscribe function for cleanup\n\t\t\t(exercises$ as any)._unsubscribe = unsubscribe;\n\n\t\t\tRepositoryLogger.logSuccess(\"FirebaseExerciseRepo\", \"getExercises\");\n\t\t} catch (error: any) {\n\t\t\tRepositoryLogger.logError(\"FirebaseExerciseRepo\", \"get exercises\", error);\n\t\t}\n\n\t\treturn exercises$;\n\t}\n\n\t/**\n\t * Subscribe to real-time exercise updates\n\t */\n\tsubscribeToExercises(userId: string, callback: (exercises: Exercise[]) => void): () => void {\n\t\tthis.ensureInitialized();\n\n\t\ttry {\n\t\t\tconst exercisesQuery = this.createExercisesQuery(userId);\n\t\t\t\n\t\t\tlet unsubscribe: () => void;\n\t\t\t\n\t\t\tif (Platform.OS === \"web\") {\n\t\t\t\t// Use modular SDK for web\n\t\t\t\tconst firebaseModule = getFirebaseModule();\n\t\t\t\tif (!firebaseModule) {\n\t\t\t\t\tthrow new Error(\"Firebase web module not available\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst { onSnapshot } = firebaseModule;\n\t\t\t\tunsubscribe = onSnapshot(exercisesQuery, (snapshot: any) => {\n\t\t\t\t\tconst exercises = this.processSnapshot(snapshot, userId);\n\t\t\t\t\tcallback(exercises);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Use React Native Firebase for native platforms\n\t\t\t\tunsubscribe = exercisesQuery.onSnapshot((snapshot: any) => {\n\t\t\t\t\tconst exercises = this.processSnapshot(snapshot, userId);\n\t\t\t\t\tcallback(exercises);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tRepositoryLogger.logSuccess(\"FirebaseExerciseRepo\", \"subscribeToExercises\");\n\n\t\t\treturn unsubscribe;\n\t\t} catch (error: any) {\n\t\t\tRepositoryLogger.logError(\"FirebaseExerciseRepo\", \"subscribe to exercises\", error);\n\t\t\t// Return no-op function on error\n\t\t\treturn () => { };\n\t\t}\n\t}\n\n\t/**\n\t * Delete an exercise from Firebase Firestore\n\t */\n\tasync deleteExercise(userId: string, exerciseId: string): Promise<void> {\n\t\tthis.ensureInitialized();\n\n\t\ttry {\n\t\t\t// Validate exerciseId\n\t\t\tRepositoryUtils.validateExerciseId(exerciseId);\n\n\t\t\tconst db = getDb();\n\t\t\tif (!db) {\n\t\t\t\tthrow new Error(\"Firebase Firestore instance is not available. Ensure Firebase is properly initialized.\");\n\t\t\t}\n\n\t\t\tconst path = RepositoryUtils.getExercisesCollectionPath(userId);\n\n\t\t\tif (Platform.OS === \"web\") {\n\t\t\t\t// Use modular SDK for web\n\t\t\t\tconst firebaseModule = getFirebaseModule();\n\t\t\t\tif (!firebaseModule) {\n\t\t\t\t\tthrow new Error(\"Firebase web module not available\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst { doc, deleteDoc } = firebaseModule;\n\t\t\t\tconst exerciseDoc = doc(db, path, exerciseId);\n\t\t\t\tawait deleteDoc(exerciseDoc);\n\t\t\t} else {\n\t\t\t\t// Use React Native Firebase for native platforms\n\t\t\t\tconst exerciseDoc = db.collection(path).doc(exerciseId);\n\t\t\t\tawait exerciseDoc.delete();\n\t\t\t}\n\n\t\t\tRepositoryLogger.logSuccess(\"FirebaseExerciseRepo\", \"deleteExercise\");\n\t\t} catch (error: any) {\n\t\t\tRepositoryLogger.logError(\"FirebaseExerciseRepo\", \"delete exercise\", error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\n\t/**\n\t * Get a specific exercise by ID for a user\n\t */\n\tasync getExerciseById(exerciseId: string, userId: string): Promise<Exercise | undefined> {\n\t\ttry {\n\t\t\tconst exercises$ = this.getExercises(userId);\n\t\t\tconst exercises = exercises$.get();\n\t\t\treturn exercises.find(exercise => exercise.id === exerciseId);\n\t\t} catch (error: any) {\n\t\t\tRepositoryLogger.logError(\"FirebaseExerciseRepo\", \"get exercise by ID\", error);\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t// Offline-first capabilities (Firebase doesn't directly support these, so we provide defaults)\n\t/**\n\t * Check if the repository is currently syncing data\n\t */\n\tisSyncing(): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Check if the repository is currently online\n\t */\n\tisOnline(): boolean {\n\t\treturn navigator.onLine ?? true;\n\t}\n\n\t/**\n\t * Get the count of pending changes that need to be synced\n\t */\n\tgetPendingChangesCount(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Force synchronization of pending changes\n\t */\n\tasync forceSync(): Promise<void> {\n\t\t// Firebase handles sync automatically, no-op\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Check if there are any sync errors\n\t */\n\thasErrors(): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Get the current error message if any\n\t */\n\tgetErrorMessage(): string | null {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Create an exercises query for the given user\n\t */\n\tprivate createExercisesQuery(userId: string) {\n\t\tconst db = getDb();\n\t\tif (!db) {\n\t\t\tthrow new Error(\"Firebase Firestore instance is not available. Ensure Firebase is properly initialized.\");\n\t\t}\n\t\t\n\t\tconst path = RepositoryUtils.getExercisesCollectionPath(userId);\n\t\tif (Platform.OS === \"web\") {\n\t\t\t// Use modular SDK for web\n\t\t\tconst firebaseModule = getFirebaseModule();\n\t\t\tif (!firebaseModule) {\n\t\t\t\tthrow new Error(\"Firebase web module not available\");\n\t\t\t}\n\t\t\t\n\t\t\tconst { collection, query, orderBy } = firebaseModule;\n\t\t\tconst exercisesCollection = collection(db, path);\n\t\t\treturn query(exercisesCollection, orderBy(\"created_at\", \"desc\"));\n\t\t} else {\n\t\t\t// Use React Native Firebase for native platforms\n\t\t\tconst exercisesCollection = db.collection(path);\n\t\t\treturn exercisesCollection.orderBy(\"created_at\", \"desc\");\n\t\t}\n\t}\n\n\t/**\n\t * Process snapshot data and convert to Exercise array\n\t */\n\tprivate processSnapshot(snapshot: any, userId: string): Exercise[] {\n\t\tconst exercises: Exercise[] = [];\n\t\tsnapshot.forEach((doc: any) => {\n\t\t\tconst data = doc.data();\n\t\t\tif (RepositoryUtils.validateExerciseData(data)) {\n\t\t\t\texercises.push({\n\t\t\t\t\tid: doc.id,\n\t\t\t\t\tname: data.name,\n\t\t\t\t\tuser_id: userId,\n\t\t\t\t\tcreated_at: data.created_at\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn exercises;\n\t}\n\n}\n"],"mappings":"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","ignoreList":[]}