3738c974b19b517e021bba765f6f5f34
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _slicedToArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["left", "right", "title", "description", "onPress", "theme", "style", "containerStyle", "contentStyle", "titleStyle", "titleNumberOfLines", "descriptionNumberOfLines", "titleEllipsizeMode", "descriptionEllipsizeMode", "descriptionStyle", "descriptionMaxFontSizeMultiplier", "titleMaxFontSizeMultiplier", "testID"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _color = _interopRequireDefault(require("color"));
var _utils = require("./utils");
var _theming = require("../../core/theming");
var _forwardRef = require("../../utils/forwardRef");
var _TouchableRipple = _interopRequireDefault(require("../TouchableRipple/TouchableRipple"));
var _Text = _interopRequireDefault(require("../Typography/Text"));
function _interopRequireDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}
function _interopRequireWildcard(e, t) {
  if ("function" == typeof WeakMap) var r = new WeakMap(),
    n = new WeakMap();
  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {
    if (!t && e && e.__esModule) return e;
    var o,
      i,
      f = {
        __proto__: null,
        default: e
      };
    if (null === e || "object" != typeof e && "function" != typeof e) return f;
    if (o = t ? n : r) {
      if (o.has(e)) return o.get(e);
      o.set(e, f);
    }
    for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]);
    return f;
  })(e, t);
}
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
var ListItem = function ListItem(_ref, ref) {
  var left = _ref.left,
    right = _ref.right,
    title = _ref.title,
    description = _ref.description,
    onPress = _ref.onPress,
    themeOverrides = _ref.theme,
    style = _ref.style,
    containerStyle = _ref.containerStyle,
    contentStyle = _ref.contentStyle,
    titleStyle = _ref.titleStyle,
    _ref$titleNumberOfLin = _ref.titleNumberOfLines,
    titleNumberOfLines = _ref$titleNumberOfLin === void 0 ? 1 : _ref$titleNumberOfLin,
    _ref$descriptionNumbe = _ref.descriptionNumberOfLines,
    descriptionNumberOfLines = _ref$descriptionNumbe === void 0 ? 2 : _ref$descriptionNumbe,
    titleEllipsizeMode = _ref.titleEllipsizeMode,
    descriptionEllipsizeMode = _ref.descriptionEllipsizeMode,
    descriptionStyle = _ref.descriptionStyle,
    descriptionMaxFontSizeMultiplier = _ref.descriptionMaxFontSizeMultiplier,
    titleMaxFontSizeMultiplier = _ref.titleMaxFontSizeMultiplier,
    testID = _ref.testID,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var _React$useState = React.useState(false),
    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
    alignToTop = _React$useState2[0],
    setAlignToTop = _React$useState2[1];
  var onDescriptionTextLayout = function onDescriptionTextLayout(event) {
    if (!theme.isV3) {
      return;
    }
    var nativeEvent = event.nativeEvent;
    setAlignToTop(nativeEvent.lines.length >= 2);
  };
  var renderDescription = function renderDescription(descriptionColor, description) {
    return typeof description === 'function' ? description({
      selectable: false,
      ellipsizeMode: descriptionEllipsizeMode,
      color: descriptionColor,
      fontSize: styles.description.fontSize
    }) : React.createElement(_Text.default, {
      selectable: false,
      numberOfLines: descriptionNumberOfLines,
      ellipsizeMode: descriptionEllipsizeMode,
      style: [styles.description, {
        color: descriptionColor
      }, descriptionStyle],
      onTextLayout: onDescriptionTextLayout,
      maxFontSizeMultiplier: descriptionMaxFontSizeMultiplier
    }, description);
  };
  var renderTitle = function renderTitle() {
    var titleColor = theme.isV3 ? theme.colors.onSurface : (0, _color.default)(theme.colors.text).alpha(0.87).rgb().string();
    return typeof title === 'function' ? title({
      selectable: false,
      ellipsizeMode: titleEllipsizeMode,
      color: titleColor,
      fontSize: styles.title.fontSize
    }) : React.createElement(_Text.default, {
      selectable: false,
      ellipsizeMode: titleEllipsizeMode,
      numberOfLines: titleNumberOfLines,
      style: [styles.title, {
        color: titleColor
      }, titleStyle],
      maxFontSizeMultiplier: titleMaxFontSizeMultiplier
    }, title);
  };
  var descriptionColor = theme.isV3 ? theme.colors.onSurfaceVariant : (0, _color.default)(theme.colors.text).alpha(0.54).rgb().string();
  return React.createElement(_TouchableRipple.default, _extends({}, rest, {
    ref: ref,
    style: [theme.isV3 ? styles.containerV3 : styles.container, style],
    onPress: onPress,
    theme: theme,
    testID: testID
  }), React.createElement(_reactNative.View, {
    style: [theme.isV3 ? styles.rowV3 : styles.row, containerStyle]
  }, left ? left({
    color: descriptionColor,
    style: (0, _utils.getLeftStyles)(alignToTop, description, theme.isV3)
  }) : null, React.createElement(_reactNative.View, {
    style: [theme.isV3 ? styles.itemV3 : styles.item, styles.content, contentStyle],
    testID: `${testID}-content`
  }, renderTitle(), description ? renderDescription(descriptionColor, description) : null), right ? right({
    color: descriptionColor,
    style: (0, _utils.getRightStyles)(alignToTop, description, theme.isV3)
  }) : null));
};
ListItem.displayName = 'List.Item';
var Component = (0, _forwardRef.forwardRef)(ListItem);
var styles = _reactNative.StyleSheet.create({
  container: {
    padding: 8
  },
  containerV3: {
    paddingVertical: 8,
    paddingRight: 24
  },
  row: {
    width: '100%',
    flexDirection: 'row'
  },
  rowV3: {
    width: '100%',
    flexDirection: 'row',
    marginVertical: 6
  },
  title: {
    fontSize: 16
  },
  description: {
    fontSize: 14
  },
  item: {
    marginVertical: 6,
    paddingLeft: 8
  },
  itemV3: {
    paddingLeft: 16
  },
  content: {
    flexShrink: 1,
    flexGrow: 1,
    justifyContent: 'center'
  }
});
var _default = exports.default = Component;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,