736871d82fcdfa396dffc11874bd6804
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
function _interopRequireWildcard(e, t) {
  if ("function" == typeof WeakMap) var r = new WeakMap(),
    n = new WeakMap();
  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {
    if (!t && e && e.__esModule) return e;
    var o,
      i,
      f = {
        __proto__: null,
        default: e
      };
    if (null === e || "object" != typeof e && "function" != typeof e) return f;
    if (o = t ? n : r) {
      if (o.has(e)) return o.get(e);
      o.set(e, f);
    }
    for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]);
    return f;
  })(e, t);
}
var PortalManager = function (_React$PureComponent) {
  function PortalManager() {
    var _this;
    (0, _classCallCheck2.default)(this, PortalManager);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, PortalManager, [].concat(args));
    _this.state = {
      portals: []
    };
    _this.mount = function (key, children) {
      _this.setState(function (state) {
        return {
          portals: [].concat((0, _toConsumableArray2.default)(state.portals), [{
            key: key,
            children: children
          }])
        };
      });
    };
    _this.update = function (key, children) {
      return _this.setState(function (state) {
        return {
          portals: state.portals.map(function (item) {
            if (item.key === key) {
              return Object.assign({}, item, {
                children: children
              });
            }
            return item;
          })
        };
      });
    };
    _this.unmount = function (key) {
      return _this.setState(function (state) {
        return {
          portals: state.portals.filter(function (item) {
            return item.key !== key;
          })
        };
      });
    };
    return _this;
  }
  (0, _inherits2.default)(PortalManager, _React$PureComponent);
  return (0, _createClass2.default)(PortalManager, [{
    key: "render",
    value: function render() {
      return this.state.portals.map(function (_ref) {
        var key = _ref.key,
          children = _ref.children;
        return React.createElement(_reactNative.View, {
          key: key,
          collapsable: false,
          pointerEvents: "box-none",
          style: _reactNative.StyleSheet.absoluteFill
        }, children);
      });
    }
  }]);
}(React.PureComponent);
exports.default = PortalManager;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsImUiLCJ0IiwiV2Vha01hcCIsInIiLCJuIiwiX19lc01vZHVsZSIsIm8iLCJpIiwiZiIsIl9fcHJvdG9fXyIsImRlZmF1bHQiLCJoYXMiLCJnZXQiLCJzZXQiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIlBvcnRhbE1hbmFnZXIiLCJfUmVhY3QkUHVyZUNvbXBvbmVudCIsIl90aGlzIiwiX2NsYXNzQ2FsbENoZWNrMiIsIl9sZW4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJhcmdzIiwiQXJyYXkiLCJfa2V5IiwiX2NhbGxTdXBlciIsImNvbmNhdCIsInN0YXRlIiwicG9ydGFscyIsIm1vdW50Iiwia2V5IiwiY2hpbGRyZW4iLCJzZXRTdGF0ZSIsIl90b0NvbnN1bWFibGVBcnJheTIiLCJ1cGRhdGUiLCJtYXAiLCJpdGVtIiwiYXNzaWduIiwidW5tb3VudCIsImZpbHRlciIsIl9pbmhlcml0czIiLCJfY3JlYXRlQ2xhc3MyIiwidmFsdWUiLCJyZW5kZXIiLCJfcmVmIiwiY3JlYXRlRWxlbWVudCIsIlZpZXciLCJjb2xsYXBzYWJsZSIsInBvaW50ZXJFdmVudHMiLCJzdHlsZSIsIlN0eWxlU2hlZXQiLCJhYnNvbHV0ZUZpbGwiLCJQdXJlQ29tcG9uZW50IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1BvcnRhbC9Qb3J0YWxNYW5hZ2VyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQUEsS0FBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBQWdELFNBQUFELHdCQUFBRyxDQUFBLEVBQUFDLENBQUE7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