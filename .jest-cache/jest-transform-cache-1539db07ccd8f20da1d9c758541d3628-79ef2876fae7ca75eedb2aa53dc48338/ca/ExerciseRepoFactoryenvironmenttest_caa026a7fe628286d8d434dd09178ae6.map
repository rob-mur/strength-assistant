{"version":3,"names":["_getJestObj","mock","FirebaseExerciseRepo","getInstance","jest","fn","mockReturnValue","type","SupabaseExerciseRepo","default","expoConfig","extra","_ExerciseRepoFactory","require","_require","describe","originalEnv","process","env","beforeEach","Object","assign","ExerciseRepoFactory","resetInstances","clearAllMocks","afterEach","test","USE_SUPABASE_DATA","firebaseInstance","expect","toBe","supabaseInstance","getCurrentDataSource","testCases","forEach","value","expectedResult","toLowerCase","Constants","useSupabaseData","originalRequire","mockRequire","mockImplementation","module","Error","global"],"sources":["ExerciseRepoFactory-environment-test.ts"],"sourcesContent":["import { ExerciseRepoFactory } from '@/lib/repo/ExerciseRepoFactory';\n\n// Mock the repository implementations\njest.mock('@/lib/repo/FirebaseExerciseRepo', () => ({\n\tFirebaseExerciseRepo: {\n\t\tgetInstance: jest.fn().mockReturnValue({ type: 'firebase' })\n\t}\n}));\n\njest.mock('@/lib/repo/SupabaseExerciseRepo', () => ({\n\tSupabaseExerciseRepo: {\n\t\tgetInstance: jest.fn().mockReturnValue({ type: 'supabase' })\n\t}\n}));\n\n// Mock Expo Constants\njest.mock('expo-constants', () => ({\n\tdefault: {\n\t\texpoConfig: {\n\t\t\textra: {}\n\t\t}\n\t}\n}));\n\ndescribe('ExerciseRepoFactory - Environment Variable Handling', () => {\n\tconst originalEnv = process.env;\n\n\tbeforeEach(() => {\n\t\t// Reset environment variables\n\t\tprocess.env = { ...originalEnv };\n\t\t\n\t\t// Reset factory instances\n\t\tExerciseRepoFactory.resetInstances();\n\t\t\n\t\t// Clear all mocks\n\t\tjest.clearAllMocks();\n\t});\n\n\tafterEach(() => {\n\t\tprocess.env = originalEnv;\n\t});\n\n\tdescribe('Dynamic environment variable changes', () => {\n\t\ttest('switches from Firebase to Supabase when env var changes', () => {\n\t\t\t// Start with Firebase\n\t\t\tprocess.env.USE_SUPABASE_DATA = 'false';\n\t\t\tconst firebaseInstance = ExerciseRepoFactory.getInstance();\n\t\t\texpect((firebaseInstance as any).type).toBe('firebase');\n\n\t\t\t// Reset factory to simulate environment change\n\t\t\tExerciseRepoFactory.resetInstances();\n\n\t\t\t// Change to Supabase\n\t\t\tprocess.env.USE_SUPABASE_DATA = 'true';\n\t\t\tconst supabaseInstance = ExerciseRepoFactory.getInstance();\n\t\t\texpect((supabaseInstance as any).type).toBe('supabase');\n\t\t});\n\n\t\ttest('switches from Supabase to Firebase when env var changes', () => {\n\t\t\t// Start with Supabase\n\t\t\tprocess.env.USE_SUPABASE_DATA = 'true';\n\t\t\tconst supabaseInstance = ExerciseRepoFactory.getInstance();\n\t\t\texpect((supabaseInstance as any).type).toBe('supabase');\n\n\t\t\t// Reset factory to simulate environment change\n\t\t\tExerciseRepoFactory.resetInstances();\n\n\t\t\t// Change to Firebase\n\t\t\tprocess.env.USE_SUPABASE_DATA = 'false';\n\t\t\tconst firebaseInstance = ExerciseRepoFactory.getInstance();\n\t\t\texpect((firebaseInstance as any).type).toBe('firebase');\n\t\t});\n\n\t\ttest('handles undefined to true transition', () => {\n\t\t\t// Start with undefined (defaults to Firebase)\n\t\t\tdelete process.env.USE_SUPABASE_DATA;\n\t\t\tconst firebaseInstance = ExerciseRepoFactory.getInstance();\n\t\t\texpect((firebaseInstance as any).type).toBe('firebase');\n\n\t\t\t// Reset factory and change to true\n\t\t\tExerciseRepoFactory.resetInstances();\n\t\t\tprocess.env.USE_SUPABASE_DATA = 'true';\n\t\t\tconst supabaseInstance = ExerciseRepoFactory.getInstance();\n\t\t\texpect((supabaseInstance as any).type).toBe('supabase');\n\t\t});\n\n\t\ttest('handles true to undefined transition', () => {\n\t\t\t// Start with true\n\t\t\tprocess.env.USE_SUPABASE_DATA = 'true';\n\t\t\tconst supabaseInstance = ExerciseRepoFactory.getInstance();\n\t\t\texpect((supabaseInstance as any).type).toBe('supabase');\n\n\t\t\t// Reset factory and remove env var\n\t\t\tExerciseRepoFactory.resetInstances();\n\t\t\tdelete process.env.USE_SUPABASE_DATA;\n\t\t\tconst firebaseInstance = ExerciseRepoFactory.getInstance();\n\t\t\texpect((firebaseInstance as any).type).toBe('firebase');\n\t\t});\n\t});\n\n\tdescribe('getCurrentDataSource with environment changes', () => {\n\t\ttest('reflects environment variable changes', () => {\n\t\t\t// Start with Firebase\n\t\t\tprocess.env.USE_SUPABASE_DATA = 'false';\n\t\t\texpect(ExerciseRepoFactory.getCurrentDataSource()).toBe('firebase');\n\n\t\t\t// Change to Supabase (without resetting instances)\n\t\t\tprocess.env.USE_SUPABASE_DATA = 'true';\n\t\t\texpect(ExerciseRepoFactory.getCurrentDataSource()).toBe('supabase');\n\n\t\t\t// Change back to Firebase\n\t\t\tprocess.env.USE_SUPABASE_DATA = 'false';\n\t\t\texpect(ExerciseRepoFactory.getCurrentDataSource()).toBe('firebase');\n\n\t\t\t// Test undefined\n\t\t\tdelete process.env.USE_SUPABASE_DATA;\n\t\t\texpect(ExerciseRepoFactory.getCurrentDataSource()).toBe('firebase');\n\t\t});\n\t});\n\n\tdescribe('Edge cases and error conditions', () => {\n\t\ttest('handles malformed environment variable values', () => {\n\t\t\tconst testCases = [\n\t\t\t\t'TRUE',    // uppercase should work\n\t\t\t\t'True',    // mixed case should work  \n\t\t\t\t'false',   // lowercase false\n\t\t\t\t'FALSE',   // uppercase false\n\t\t\t\t'yes',     // non-boolean string should default to false\n\t\t\t\t'no',      // non-boolean string should default to false\n\t\t\t\t'1',       // numeric string should default to false\n\t\t\t\t'0',       // numeric string should default to false\n\t\t\t\t'',        // empty string should default to false\n\t\t\t];\n\n\t\t\ttestCases.forEach((value) => {\n\t\t\t\tExerciseRepoFactory.resetInstances();\n\t\t\t\tprocess.env.USE_SUPABASE_DATA = value;\n\t\t\t\t\n\t\t\t\tconst expectedResult = value.toLowerCase() === 'true' ? 'supabase' : 'firebase';\n\t\t\t\texpect(ExerciseRepoFactory.getCurrentDataSource()).toBe(expectedResult);\n\t\t\t});\n\t\t});\n\n\t\ttest('prefers process.env over Expo Constants when both are set', () => {\n\t\t\t// Set Expo Constants to use Supabase\n\t\t\tconst Constants = require('expo-constants').default;\n\t\t\tConstants.expoConfig.extra.useSupabaseData = true;\n\n\t\t\t// Set process.env to use Firebase\n\t\t\tprocess.env.USE_SUPABASE_DATA = 'false';\n\n\t\t\t// Should prefer process.env\n\t\t\texpect(ExerciseRepoFactory.getCurrentDataSource()).toBe('firebase');\n\t\t});\n\n\t\ttest('falls back to Expo Constants when process.env is undefined', () => {\n\t\t\t// Remove process.env\n\t\t\tdelete process.env.USE_SUPABASE_DATA;\n\n\t\t\t// Set Expo Constants to use Supabase\n\t\t\tconst Constants = require('expo-constants').default;\n\t\t\tConstants.expoConfig.extra.useSupabaseData = true;\n\n\t\t\t// Should use Expo Constants\n\t\t\texpect(ExerciseRepoFactory.getCurrentDataSource()).toBe('supabase');\n\t\t});\n\n\t\ttest('handles missing Expo Constants gracefully', () => {\n\t\t\t// Remove process.env\n\t\t\tdelete process.env.USE_SUPABASE_DATA;\n\n\t\t\t// Clear Expo Constants\n\t\t\tconst Constants = require('expo-constants').default;\n\t\t\tConstants.expoConfig.extra = {};\n\n\t\t\t// Should default to Firebase\n\t\t\texpect(ExerciseRepoFactory.getCurrentDataSource()).toBe('firebase');\n\t\t});\n\t});\n\n\tdescribe('Dynamic require behavior', () => {\n\t\ttest('handles Expo Constants require errors', () => {\n\t\t\t// Mock require to throw an error\n\t\t\tconst originalRequire = require;\n\t\t\tconst mockRequire = jest.fn().mockImplementation((module: string) => {\n\t\t\t\tif (module === 'expo-constants') {\n\t\t\t\t\tthrow new Error('Module not found');\n\t\t\t\t}\n\t\t\t\treturn originalRequire(module);\n\t\t\t});\n\n\t\t\t// Replace global require temporarily\n\t\t\t(global as any).require = mockRequire;\n\n\t\t\t// Remove process.env to force Expo Constants fallback\n\t\t\tdelete process.env.USE_SUPABASE_DATA;\n\n\t\t\ttry {\n\t\t\t\t// Should handle error gracefully and default to Firebase\n\t\t\t\texpect(ExerciseRepoFactory.getCurrentDataSource()).toBe('firebase');\n\t\t\t} finally {\n\t\t\t\t// Restore original require\n\t\t\t\t(global as any).require = originalRequire;\n\t\t\t}\n\t\t});\n\t});\n});"],"mappings":"AAGAA,WAAA,GAAKC,IAAI,CAAC,iCAAiC,EAAE;EAAA,OAAO;IACnDC,oBAAoB,EAAE;MACrBC,WAAW,EAAEC,IAAI,CAACC,EAAE,CAAC,CAAC,CAACC,eAAe,CAAC;QAAEC,IAAI,EAAE;MAAW,CAAC;IAC5D;EACD,CAAC;AAAA,CAAC,CAAC;AAEHP,WAAA,GAAKC,IAAI,CAAC,iCAAiC,EAAE;EAAA,OAAO;IACnDO,oBAAoB,EAAE;MACrBL,WAAW,EAAEC,IAAI,CAACC,EAAE,CAAC,CAAC,CAACC,eAAe,CAAC;QAAEC,IAAI,EAAE;MAAW,CAAC;IAC5D;EACD,CAAC;AAAA,CAAC,CAAC;AAGHP,WAAA,GAAKC,IAAI,CAAC,gBAAgB,EAAE;EAAA,OAAO;IAClCQ,OAAO,EAAE;MACRC,UAAU,EAAE;QACXC,KAAK,EAAE,CAAC;MACT;IACD;EACD,CAAC;AAAA,CAAC,CAAC;AAtBH,IAAAC,oBAAA,GAAAC,OAAA;AAAqE,SAAAb,YAAA;EAAA,IAAAc,QAAA,GAAAD,OAAA;IAAAT,IAAA,GAAAU,QAAA,CAAAV,IAAA;EAAAJ,WAAA,YAAAA,YAAA;IAAA,OAAAI,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAwBrEW,QAAQ,CAAC,qDAAqD,EAAE,YAAM;EACrE,IAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG;EAE/BC,UAAU,CAAC,YAAM;IAEhBF,OAAO,CAACC,GAAG,GAAAE,MAAA,CAAAC,MAAA,KAAQL,WAAW,CAAE;IAGhCM,wCAAmB,CAACC,cAAc,CAAC,CAAC;IAGpCnB,IAAI,CAACoB,aAAa,CAAC,CAAC;EACrB,CAAC,CAAC;EAEFC,SAAS,CAAC,YAAM;IACfR,OAAO,CAACC,GAAG,GAAGF,WAAW;EAC1B,CAAC,CAAC;EAEFD,QAAQ,CAAC,sCAAsC,EAAE,YAAM;IACtDW,IAAI,CAAC,yDAAyD,EAAE,YAAM;MAErET,OAAO,CAACC,GAAG,CAACS,iBAAiB,GAAG,OAAO;MACvC,IAAMC,gBAAgB,GAAGN,wCAAmB,CAACnB,WAAW,CAAC,CAAC;MAC1D0B,MAAM,CAAED,gBAAgB,CAASrB,IAAI,CAAC,CAACuB,IAAI,CAAC,UAAU,CAAC;MAGvDR,wCAAmB,CAACC,cAAc,CAAC,CAAC;MAGpCN,OAAO,CAACC,GAAG,CAACS,iBAAiB,GAAG,MAAM;MACtC,IAAMI,gBAAgB,GAAGT,wCAAmB,CAACnB,WAAW,CAAC,CAAC;MAC1D0B,MAAM,CAAEE,gBAAgB,CAASxB,IAAI,CAAC,CAACuB,IAAI,CAAC,UAAU,CAAC;IACxD,CAAC,CAAC;IAEFJ,IAAI,CAAC,yDAAyD,EAAE,YAAM;MAErET,OAAO,CAACC,GAAG,CAACS,iBAAiB,GAAG,MAAM;MACtC,IAAMI,gBAAgB,GAAGT,wCAAmB,CAACnB,WAAW,CAAC,CAAC;MAC1D0B,MAAM,CAAEE,gBAAgB,CAASxB,IAAI,CAAC,CAACuB,IAAI,CAAC,UAAU,CAAC;MAGvDR,wCAAmB,CAACC,cAAc,CAAC,CAAC;MAGpCN,OAAO,CAACC,GAAG,CAACS,iBAAiB,GAAG,OAAO;MACvC,IAAMC,gBAAgB,GAAGN,wCAAmB,CAACnB,WAAW,CAAC,CAAC;MAC1D0B,MAAM,CAAED,gBAAgB,CAASrB,IAAI,CAAC,CAACuB,IAAI,CAAC,UAAU,CAAC;IACxD,CAAC,CAAC;IAEFJ,IAAI,CAAC,sCAAsC,EAAE,YAAM;MAElD,OAAOT,OAAO,CAACC,GAAG,CAACS,iBAAiB;MACpC,IAAMC,gBAAgB,GAAGN,wCAAmB,CAACnB,WAAW,CAAC,CAAC;MAC1D0B,MAAM,CAAED,gBAAgB,CAASrB,IAAI,CAAC,CAACuB,IAAI,CAAC,UAAU,CAAC;MAGvDR,wCAAmB,CAACC,cAAc,CAAC,CAAC;MACpCN,OAAO,CAACC,GAAG,CAACS,iBAAiB,GAAG,MAAM;MACtC,IAAMI,gBAAgB,GAAGT,wCAAmB,CAACnB,WAAW,CAAC,CAAC;MAC1D0B,MAAM,CAAEE,gBAAgB,CAASxB,IAAI,CAAC,CAACuB,IAAI,CAAC,UAAU,CAAC;IACxD,CAAC,CAAC;IAEFJ,IAAI,CAAC,sCAAsC,EAAE,YAAM;MAElDT,OAAO,CAACC,GAAG,CAACS,iBAAiB,GAAG,MAAM;MACtC,IAAMI,gBAAgB,GAAGT,wCAAmB,CAACnB,WAAW,CAAC,CAAC;MAC1D0B,MAAM,CAAEE,gBAAgB,CAASxB,IAAI,CAAC,CAACuB,IAAI,CAAC,UAAU,CAAC;MAGvDR,wCAAmB,CAACC,cAAc,CAAC,CAAC;MACpC,OAAON,OAAO,CAACC,GAAG,CAACS,iBAAiB;MACpC,IAAMC,gBAAgB,GAAGN,wCAAmB,CAACnB,WAAW,CAAC,CAAC;MAC1D0B,MAAM,CAAED,gBAAgB,CAASrB,IAAI,CAAC,CAACuB,IAAI,CAAC,UAAU,CAAC;IACxD,CAAC,CAAC;EACH,CAAC,CAAC;EAEFf,QAAQ,CAAC,+CAA+C,EAAE,YAAM;IAC/DW,IAAI,CAAC,uCAAuC,EAAE,YAAM;MAEnDT,OAAO,CAACC,GAAG,CAACS,iBAAiB,GAAG,OAAO;MACvCE,MAAM,CAACP,wCAAmB,CAACU,oBAAoB,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,UAAU,CAAC;MAGnEb,OAAO,CAACC,GAAG,CAACS,iBAAiB,GAAG,MAAM;MACtCE,MAAM,CAACP,wCAAmB,CAACU,oBAAoB,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,UAAU,CAAC;MAGnEb,OAAO,CAACC,GAAG,CAACS,iBAAiB,GAAG,OAAO;MACvCE,MAAM,CAACP,wCAAmB,CAACU,oBAAoB,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,UAAU,CAAC;MAGnE,OAAOb,OAAO,CAACC,GAAG,CAACS,iBAAiB;MACpCE,MAAM,CAACP,wCAAmB,CAACU,oBAAoB,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,UAAU,CAAC;IACpE,CAAC,CAAC;EACH,CAAC,CAAC;EAEFf,QAAQ,CAAC,iCAAiC,EAAE,YAAM;IACjDW,IAAI,CAAC,+CAA+C,EAAE,YAAM;MAC3D,IAAMO,SAAS,GAAG,CACjB,MAAM,EACN,MAAM,EACN,OAAO,EACP,OAAO,EACP,KAAK,EACL,IAAI,EACJ,GAAG,EACH,GAAG,EACH,EAAE,CACF;MAEDA,SAAS,CAACC,OAAO,CAAC,UAACC,KAAK,EAAK;QAC5Bb,wCAAmB,CAACC,cAAc,CAAC,CAAC;QACpCN,OAAO,CAACC,GAAG,CAACS,iBAAiB,GAAGQ,KAAK;QAErC,IAAMC,cAAc,GAAGD,KAAK,CAACE,WAAW,CAAC,CAAC,KAAK,MAAM,GAAG,UAAU,GAAG,UAAU;QAC/ER,MAAM,CAACP,wCAAmB,CAACU,oBAAoB,CAAC,CAAC,CAAC,CAACF,IAAI,CAACM,cAAc,CAAC;MACxE,CAAC,CAAC;IACH,CAAC,CAAC;IAEFV,IAAI,CAAC,2DAA2D,EAAE,YAAM;MAEvE,IAAMY,SAAS,GAAGzB,OAAO,CAAC,gBAAgB,CAAC,CAACJ,OAAO;MACnD6B,SAAS,CAAC5B,UAAU,CAACC,KAAK,CAAC4B,eAAe,GAAG,IAAI;MAGjDtB,OAAO,CAACC,GAAG,CAACS,iBAAiB,GAAG,OAAO;MAGvCE,MAAM,CAACP,wCAAmB,CAACU,oBAAoB,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,UAAU,CAAC;IACpE,CAAC,CAAC;IAEFJ,IAAI,CAAC,4DAA4D,EAAE,YAAM;MAExE,OAAOT,OAAO,CAACC,GAAG,CAACS,iBAAiB;MAGpC,IAAMW,SAAS,GAAGzB,OAAO,CAAC,gBAAgB,CAAC,CAACJ,OAAO;MACnD6B,SAAS,CAAC5B,UAAU,CAACC,KAAK,CAAC4B,eAAe,GAAG,IAAI;MAGjDV,MAAM,CAACP,wCAAmB,CAACU,oBAAoB,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,UAAU,CAAC;IACpE,CAAC,CAAC;IAEFJ,IAAI,CAAC,2CAA2C,EAAE,YAAM;MAEvD,OAAOT,OAAO,CAACC,GAAG,CAACS,iBAAiB;MAGpC,IAAMW,SAAS,GAAGzB,OAAO,CAAC,gBAAgB,CAAC,CAACJ,OAAO;MACnD6B,SAAS,CAAC5B,UAAU,CAACC,KAAK,GAAG,CAAC,CAAC;MAG/BkB,MAAM,CAACP,wCAAmB,CAACU,oBAAoB,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,UAAU,CAAC;IACpE,CAAC,CAAC;EACH,CAAC,CAAC;EAEFf,QAAQ,CAAC,0BAA0B,EAAE,YAAM;IAC1CW,IAAI,CAAC,uCAAuC,EAAE,YAAM;MAEnD,IAAMc,eAAe,GAAG3B,OAAO;MAC/B,IAAM4B,WAAW,GAAGrC,IAAI,CAACC,EAAE,CAAC,CAAC,CAACqC,kBAAkB,CAAC,UAACC,MAAc,EAAK;QACpE,IAAIA,MAAM,KAAK,gBAAgB,EAAE;UAChC,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;QACpC;QACA,OAAOJ,eAAe,CAACG,MAAM,CAAC;MAC/B,CAAC,CAAC;MAGDE,MAAM,CAAShC,OAAO,GAAG4B,WAAW;MAGrC,OAAOxB,OAAO,CAACC,GAAG,CAACS,iBAAiB;MAEpC,IAAI;QAEHE,MAAM,CAACP,wCAAmB,CAACU,oBAAoB,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,UAAU,CAAC;MACpE,CAAC,SAAS;QAERe,MAAM,CAAShC,OAAO,GAAG2B,eAAe;MAC1C;IACD,CAAC,CAAC;EACH,CAAC,CAAC;AACH,CAAC,CAAC","ignoreList":[]}