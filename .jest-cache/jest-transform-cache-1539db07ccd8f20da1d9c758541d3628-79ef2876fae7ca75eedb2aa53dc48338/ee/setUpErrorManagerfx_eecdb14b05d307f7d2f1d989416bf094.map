{"version":3,"names":["_NativeErrorManager","_interopRequireDefault","require","_Platform","_CodedError","__DEV__","Platform","OS","NativeErrorManager","onNewException","onNewWarning","addListener","_ref","message","console","error","_ref2","warn","globalThis","ExpoModulesCore_CodedError","CodedError"],"sources":["setUpErrorManager.fx.ts"],"sourcesContent":["import NativeErrorManager from './NativeErrorManager';\nimport Platform from '../Platform';\nimport { CodedError } from '../errors/CodedError';\n\nif (__DEV__ && Platform.OS === 'android' && NativeErrorManager) {\n  const onNewException = 'ExpoModulesCoreErrorManager.onNewException';\n  const onNewWarning = 'ExpoModulesCoreErrorManager.onNewWarning';\n\n  NativeErrorManager.addListener(onNewException, ({ message }: { message: string }) => {\n    console.error(message);\n  });\n\n  NativeErrorManager.addListener(onNewWarning, ({ message }: { message: string }) => {\n    console.warn(message);\n  });\n}\n\ndeclare namespace globalThis {\n  let ExpoModulesCore_CodedError: undefined | typeof CodedError;\n}\n\n// We have to export `CodedError` via global object to use in later in the C++ code.\nglobalThis.ExpoModulesCore_CodedError = CodedError;\n"],"mappings":";AAAA,IAAAA,mBAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,SAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,WAAA,GAAAF,OAAA;AAEA,IAAIG,OAAO,IAAIC,iBAAQ,CAACC,EAAE,KAAK,SAAS,IAAIC,2BAAkB,EAAE;EAC9D,IAAMC,cAAc,GAAG,4CAA4C;EACnE,IAAMC,YAAY,GAAG,0CAA0C;EAE/DF,2BAAkB,CAACG,WAAW,CAACF,cAAc,EAAE,UAAAG,IAAA,EAAsC;IAAA,IAAnCC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IACvDC,OAAO,CAACC,KAAK,CAACF,OAAO,CAAC;EACxB,CAAC,CAAC;EAEFL,2BAAkB,CAACG,WAAW,CAACD,YAAY,EAAE,UAAAM,KAAA,EAAsC;IAAA,IAAnCH,OAAO,GAAAG,KAAA,CAAPH,OAAO;IACrDC,OAAO,CAACG,IAAI,CAACJ,OAAO,CAAC;EACvB,CAAC,CAAC;AACJ;AAOAK,UAAU,CAACC,0BAA0B,GAAGC,sBAAU","ignoreList":[]}