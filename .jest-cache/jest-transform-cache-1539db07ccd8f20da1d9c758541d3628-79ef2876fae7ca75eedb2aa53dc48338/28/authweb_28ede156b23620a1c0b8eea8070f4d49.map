{"version":3,"names":["_auth","require","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","_firebase","_firebaseCore","_callSuper","t","o","e","_getPrototypeOf2","default","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","valueOf","AuthWebService","_FirebaseService","_classCallCheck2","_inherits2","_createClass2","value","init","initialized","logInfo","startTime","Date","now","operation","app","getFirebaseApp","config","appName","name","authInstance","getAuth","duration","setupEmulator","error","logError","message","stack","isEmulatorEnabled","host","getEmulatorHost","port","emulatorUrl","emulator","_delegate","_config","connectAuthEmulator","disableWarnings","logWarn","getAuthInstance","assertInitialized","Error","isReady","FirebaseService","authService","initAuth","signInAnonymouslyWeb","_signInAnonymouslyWeb","arguments","_asyncToGenerator2","result","signInAnonymously","user","createAccountWeb","_x","_x2","_createAccountWeb","email","password","createUserWithEmailAndPassword","signInWeb","_x3","_x4","_signInWeb","signInWithEmailAndPassword","signOutWeb","_signOutWeb","signOut","onAuthStateChangedWeb","callback","onAuthStateChanged"],"sources":["auth.web.ts"],"sourcesContent":["import {\n\tAuth,\n\tgetAuth,\n\tconnectAuthEmulator,\n\tsignInAnonymously,\n\tcreateUserWithEmailAndPassword,\n\tsignInWithEmailAndPassword,\n\tsignOut,\n\tonAuthStateChanged,\n\tUser,\n} from \"firebase/auth\";\nimport { getFirebaseApp } from \"./firebase.web\";\nimport { FirebaseService } from \"./firebase-core\";\n\nclass AuthWebService extends FirebaseService {\n\tprivate authInstance: Auth | undefined;\n\n\tconstructor() {\n\t\tsuper(\"Firebase Auth\");\n\t}\n\n\tinit(): void {\n\t\tif (this.initialized) {\n\t\t\tthis.logInfo(\"Already initialized, skipping\");\n\t\t\treturn;\n\t\t}\n\n\t\tconst startTime = Date.now();\n\t\tthis.logInfo(\"Initializing Firebase Auth...\", { operation: \"init\" });\n\n\t\ttry {\n\t\t\tconst app = getFirebaseApp();\n\t\t\tthis.logInfo(\"Got firebase app\", {\n\t\t\t\toperation: \"init\",\n\t\t\t\tconfig: { appName: app.name }\n\t\t\t});\n\n\t\t\tthis.authInstance = getAuth(app);\n\t\t\tthis.logInfo(\"Firebase Auth initialized successfully\", {\n\t\t\t\toperation: \"init\",\n\t\t\t\tduration: Date.now() - startTime\n\t\t\t});\n\n\t\t\tthis.setupEmulator();\n\t\t\tthis.initialized = true;\n\n\t\t\tthis.logInfo(\"Auth initialization complete\", {\n\t\t\t\toperation: \"init\",\n\t\t\t\tduration: Date.now() - startTime\n\t\t\t});\n\t\t} catch (error: any) {\n\t\t\tthis.logError(\"Failed to initialize Firebase Auth\", {\n\t\t\t\toperation: \"init\",\n\t\t\t\tduration: Date.now() - startTime,\n\t\t\t\terror: {\n\t\t\t\t\tmessage: error.message,\n\t\t\t\t\tstack: error.stack\n\t\t\t\t}\n\t\t\t});\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate setupEmulator(): void {\n\t\tif (!this.authInstance) return;\n\n\t\tif (this.isEmulatorEnabled()) {\n\t\t\tconst host = this.getEmulatorHost();\n\t\t\tconst port = 9099;\n\t\t\tconst emulatorUrl = `http://${host}:${port}`;\n\n\t\t\tthis.logInfo(\"Development mode detected, connecting to auth emulator\", {\n\t\t\t\toperation: \"emulator_setup\",\n\t\t\t\temulator: { host, port }\n\t\t\t});\n\n\t\t\ttry {\n\t\t\t\t// Check if emulator is already connected (prevents double connection errors)\n\t\t\t\tif (!(this.authInstance as any)._delegate?._config?.emulator) {\n\t\t\t\t\tconnectAuthEmulator(this.authInstance, emulatorUrl, { disableWarnings: true });\n\t\t\t\t\tthis.logInfo(\"Successfully connected to Auth emulator\", {\n\t\t\t\t\t\toperation: \"emulator_setup\",\n\t\t\t\t\t\temulator: { host, port }\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.logInfo(\"Auth emulator already connected\", {\n\t\t\t\t\t\toperation: \"emulator_setup\",\n\t\t\t\t\t\temulator: { host, port }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (error: any) {\n\t\t\t\t// In Chrome test environment, emulator connection failures should not block the app\n\t\t\t\tthis.logError(\"Failed to connect to emulator\", {\n\t\t\t\t\toperation: \"emulator_setup\",\n\t\t\t\t\temulator: { host, port },\n\t\t\t\t\terror: {\n\t\t\t\t\t\tmessage: error.message\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.logWarn(\"Continuing without emulator for Chrome testing compatibility\");\n\t\t\t}\n\t\t} else {\n\t\t\tthis.logInfo(\"Production mode, using production Auth\", {\n\t\t\t\toperation: \"emulator_setup\"\n\t\t\t});\n\t\t}\n\t}\n\n\tgetAuthInstance(): Auth {\n\t\tthis.assertInitialized(\"getAuthInstance()\");\n\t\tif (!this.authInstance) {\n\t\t\tthrow new Error(\"Auth instance not available\");\n\t\t}\n\t\treturn this.authInstance;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.initialized && !!this.authInstance;\n\t}\n}\n\nconst authService = new AuthWebService();\n\nexport function initAuth(): void {\n\tauthService.init();\n}\n\nexport function getAuthInstance(): Auth {\n\treturn authService.getAuthInstance();\n}\n\n// Auth methods\nexport async function signInAnonymouslyWeb(): Promise<User> {\n\tconst authInstance = getAuthInstance();\n\tconst result = await signInAnonymously(authInstance);\n\treturn result.user;\n}\n\nexport async function createAccountWeb(email: string, password: string): Promise<User> {\n\tconst authInstance = getAuthInstance();\n\tconst result = await createUserWithEmailAndPassword(authInstance, email, password);\n\treturn result.user;\n}\n\nexport async function signInWeb(email: string, password: string): Promise<User> {\n\tconst authInstance = getAuthInstance();\n\tconst result = await signInWithEmailAndPassword(authInstance, email, password);\n\treturn result.user;\n}\n\nexport async function signOutWeb(): Promise<void> {\n\tconst authInstance = getAuthInstance();\n\tawait signOut(authInstance);\n}\n\nexport function onAuthStateChangedWeb(callback: (user: User | null) => void): () => void {\n\tconst authInstance = getAuthInstance();\n\treturn onAuthStateChanged(authInstance, callback);\n}\n\nexport * from \"firebase/auth\";\n"],"mappings":"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","ignoreList":[]}