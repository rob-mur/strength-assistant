{"version":3,"names":["_ConstitutionalAmendmentManager","require","describe","manager","beforeEach","ConstitutionalAmendmentManagerImpl","it","requirements","getCurrentRequirements","expect","version","toBe","requirementsBySection","toBeDefined","prohibitionsBySection","activeEnforcements","testingRequirements","toContain","testingProhibitions","length","toBeGreaterThan","preCommitHook","find","e","type","active","configuration","onFailure","_asyncToGenerator2","default","amendment","id","title","description","section","newRequirements","newProhibitions","enforcementMechanisms","rationale","expectedImpact","trackingInfo","proposeAmendment","amendmentId","status","createdAt","toBeInstanceOf","Date","updatedAt","reviews","toEqual","amendment1","amendment2","tracking1","tracking2","beforeTime","afterTime","getTime","toBeGreaterThanOrEqual","toBeLessThanOrEqual","tracking","review","reviewerId","reviewedAt","decision","comments","suggestions","updatedTracking","reviewAmendment","toHaveLength","review1","review2","finalTracking","rejects","toThrow","originalTracking","Promise","resolve","setTimeout","secondTracking","approvedAmendmentId","unapprovedAmendmentId","approvedAmendment","command","unapprovedAmendment","enforcementConfig","enactAmendment","mechanisms","Array","isArray","gracePeriodDays","monitoring","enableMetrics","reportingInterval","alertThresholds","violationCount","timeWindow","requirements1","requirements2","not","requirements3","expectedSections","enforcement","toMatch","target","identifier","aspects","result","validateCompliance","compliant","violations","score","recommendations","validatedAt","testViolations","filter","v","requirement","includes","severity","recommendation","hasTypeScriptRecommendation","some","r","toBeLessThan","targets","toBeUndefined"],"sources":["ConstitutionalAmendmentManager.test.ts"],"sourcesContent":["/**\n * Unit Tests: Constitutional Amendment Manager\n * \n * Comprehensive unit tests for the ConstitutionalAmendmentManager implementation\n * to ensure all amendment lifecycle methods behave correctly.\n */\n\nimport { ConstitutionalAmendmentManagerImpl } from '../../src/constitution/ConstitutionalAmendmentManager';\nimport {\n  ConstitutionalAmendment,\n  AmendmentReview,\n  ComplianceTarget,\n  ConstitutionalSection,\n  ReviewDecision,\n  AmendmentStatus\n} from '../../specs/001-we-are-actually/contracts/constitutional-amendment';\n\ndescribe('ConstitutionalAmendmentManager Unit Tests', () => {\n  let manager: ConstitutionalAmendmentManagerImpl;\n\n  beforeEach(() => {\n    manager = new ConstitutionalAmendmentManagerImpl();\n  });\n\n  describe('Constructor and Initial State', () => {\n    it('should initialize with current constitutional requirements', () => {\n      const requirements = manager.getCurrentRequirements();\n\n      expect(requirements.version).toBe('2.5.0');\n      expect(requirements.requirementsBySection).toBeDefined();\n      expect(requirements.prohibitionsBySection).toBeDefined();\n      expect(requirements.activeEnforcements).toBeDefined();\n    });\n\n    it('should have TypeScript testing requirements in initial state', () => {\n      const requirements = manager.getCurrentRequirements();\n      const testingRequirements = requirements.requirementsBySection['Testing (NON-NEGOTIABLE)'];\n\n      expect(testingRequirements).toContain('TypeScript compilation MUST succeed before test execution');\n      expect(testingRequirements).toContain('devbox run test MUST pass completely before any commit');\n      expect(testingRequirements).toContain('Pre-commit hooks MUST validate TypeScript compilation');\n    });\n\n    it('should have TypeScript testing prohibitions in initial state', () => {\n      const requirements = manager.getCurrentRequirements();\n      const testingProhibitions = requirements.prohibitionsBySection['Testing (NON-NEGOTIABLE)'];\n\n      expect(testingProhibitions).toContain('Committing code that breaks TypeScript compilation');\n      expect(testingProhibitions).toContain('Implementation before test');\n      expect(testingProhibitions).toContain('Skipping RED phase');\n    });\n\n    it('should have active enforcement mechanisms configured', () => {\n      const requirements = manager.getCurrentRequirements();\n      \n      expect(requirements.activeEnforcements.length).toBeGreaterThan(0);\n      \n      const preCommitHook = requirements.activeEnforcements.find(e => e.type === 'pre-commit-hook');\n      expect(preCommitHook).toBeDefined();\n      expect(preCommitHook?.active).toBe(true);\n      expect(preCommitHook?.configuration.onFailure).toBe('block');\n    });\n  });\n\n  describe('proposeAmendment', () => {\n    it('should create tracking info for new amendments', async () => {\n      const amendment: ConstitutionalAmendment = {\n        id: 'test-amendment-001',\n        title: 'Test Amendment',\n        description: 'Test amendment description',\n        section: 'Testing (NON-NEGOTIABLE)' as ConstitutionalSection,\n        newRequirements: ['Test requirement'],\n        newProhibitions: ['Test prohibition'],\n        enforcementMechanisms: [],\n        rationale: 'Test rationale',\n        expectedImpact: 'Test impact'\n      };\n\n      const trackingInfo = await manager.proposeAmendment(amendment);\n\n      expect(trackingInfo.amendmentId).toBe(amendment.id);\n      expect(trackingInfo.status).toBe('proposed');\n      expect(trackingInfo.createdAt).toBeInstanceOf(Date);\n      expect(trackingInfo.updatedAt).toBeInstanceOf(Date);\n      expect(trackingInfo.reviews).toEqual([]);\n      expect(trackingInfo.version).toBe('2.5.0');\n    });\n\n    it('should handle multiple amendments with unique tracking', async () => {\n      const amendment1: ConstitutionalAmendment = {\n        id: 'amendment-001',\n        title: 'First Amendment',\n        description: 'First test amendment',\n        section: 'Testing (NON-NEGOTIABLE)',\n        newRequirements: ['Requirement 1'],\n        newProhibitions: ['Prohibition 1'],\n        enforcementMechanisms: [],\n        rationale: 'Rationale 1',\n        expectedImpact: 'Impact 1'\n      };\n\n      const amendment2: ConstitutionalAmendment = {\n        id: 'amendment-002',\n        title: 'Second Amendment',\n        description: 'Second test amendment',\n        section: 'Simplicity',\n        newRequirements: ['Requirement 2'],\n        newProhibitions: ['Prohibition 2'],\n        enforcementMechanisms: [],\n        rationale: 'Rationale 2',\n        expectedImpact: 'Impact 2'\n      };\n\n      const tracking1 = await manager.proposeAmendment(amendment1);\n      const tracking2 = await manager.proposeAmendment(amendment2);\n\n      expect(tracking1.amendmentId).toBe('amendment-001');\n      expect(tracking2.amendmentId).toBe('amendment-002');\n      expect(tracking1.createdAt).toBeInstanceOf(Date);\n      expect(tracking2.createdAt).toBeInstanceOf(Date);\n    });\n\n    it('should set timestamps correctly', async () => {\n      const beforeTime = new Date();\n      \n      const amendment: ConstitutionalAmendment = {\n        id: 'timestamp-test',\n        title: 'Timestamp Test',\n        description: 'Testing timestamp behavior',\n        section: 'Testing (NON-NEGOTIABLE)',\n        newRequirements: [],\n        newProhibitions: [],\n        enforcementMechanisms: [],\n        rationale: 'Test timestamps',\n        expectedImpact: 'Verify timing'\n      };\n\n      const trackingInfo = await manager.proposeAmendment(amendment);\n      const afterTime = new Date();\n\n      expect(trackingInfo.createdAt.getTime()).toBeGreaterThanOrEqual(beforeTime.getTime());\n      expect(trackingInfo.createdAt.getTime()).toBeLessThanOrEqual(afterTime.getTime());\n      expect(trackingInfo.updatedAt.getTime()).toBe(trackingInfo.createdAt.getTime());\n    });\n  });\n\n  describe('reviewAmendment', () => {\n    let amendmentId: string;\n\n    beforeEach(async () => {\n      const amendment: ConstitutionalAmendment = {\n        id: 'review-test-amendment',\n        title: 'Review Test Amendment',\n        description: 'Amendment for testing review functionality',\n        section: 'Testing (NON-NEGOTIABLE)',\n        newRequirements: ['Review test requirement'],\n        newProhibitions: ['Review test prohibition'],\n        enforcementMechanisms: [],\n        rationale: 'Test review process',\n        expectedImpact: 'Validate review workflow'\n      };\n\n      const tracking = await manager.proposeAmendment(amendment);\n      amendmentId = tracking.amendmentId;\n    });\n\n    it('should process approval reviews correctly', async () => {\n      const review: AmendmentReview = {\n        reviewerId: 'reviewer-001',\n        reviewedAt: new Date(),\n        decision: 'approve' as ReviewDecision,\n        comments: 'Amendment looks good',\n        suggestions: ['Consider performance impact']\n      };\n\n      const updatedTracking = await manager.reviewAmendment(amendmentId, review);\n\n      expect(updatedTracking.status).toBe('approved');\n      expect(updatedTracking.reviews).toHaveLength(1);\n      expect(updatedTracking.reviews[0]).toEqual(review);\n      expect(updatedTracking.updatedAt.getTime()).toBeGreaterThanOrEqual(updatedTracking.createdAt.getTime());\n    });\n\n    it('should process rejection reviews correctly', async () => {\n      const review: AmendmentReview = {\n        reviewerId: 'reviewer-002',\n        reviewedAt: new Date(),\n        decision: 'reject' as ReviewDecision,\n        comments: 'Amendment scope too broad',\n        suggestions: ['Narrow the scope', 'Focus on specific issues']\n      };\n\n      const updatedTracking = await manager.reviewAmendment(amendmentId, review);\n\n      expect(updatedTracking.status).toBe('rejected');\n      expect(updatedTracking.reviews[0].decision).toBe('reject');\n      expect(updatedTracking.reviews[0].comments).toBe('Amendment scope too broad');\n    });\n\n    it('should process change request reviews correctly', async () => {\n      const review: AmendmentReview = {\n        reviewerId: 'reviewer-003',\n        reviewedAt: new Date(),\n        decision: 'request-changes' as ReviewDecision,\n        comments: 'Need more specific enforcement mechanisms',\n        suggestions: ['Add detailed enforcement steps', 'Define success metrics']\n      };\n\n      const updatedTracking = await manager.reviewAmendment(amendmentId, review);\n\n      expect(updatedTracking.status).toBe('under-review');\n      expect(updatedTracking.reviews[0].decision).toBe('request-changes');\n    });\n\n    it('should handle multiple reviews', async () => {\n      const review1: AmendmentReview = {\n        reviewerId: 'reviewer-001',\n        reviewedAt: new Date(),\n        decision: 'request-changes',\n        comments: 'First review comments'\n      };\n\n      const review2: AmendmentReview = {\n        reviewerId: 'reviewer-002',\n        reviewedAt: new Date(),\n        decision: 'approve',\n        comments: 'Second review comments'\n      };\n\n      await manager.reviewAmendment(amendmentId, review1);\n      const finalTracking = await manager.reviewAmendment(amendmentId, review2);\n\n      expect(finalTracking.reviews).toHaveLength(2);\n      expect(finalTracking.status).toBe('approved'); // Last review determines status\n      expect(finalTracking.reviews[0].reviewerId).toBe('reviewer-001');\n      expect(finalTracking.reviews[1].reviewerId).toBe('reviewer-002');\n    });\n\n    it('should throw error for non-existent amendment', async () => {\n      const review: AmendmentReview = {\n        reviewerId: 'reviewer-404',\n        reviewedAt: new Date(),\n        decision: 'approve',\n        comments: 'This should fail'\n      };\n\n      await expect(manager.reviewAmendment('non-existent-id', review))\n        .rejects.toThrow('Amendment non-existent-id not found');\n    });\n\n    it('should update timestamps on review', async () => {\n      const originalTracking = await manager.reviewAmendment(amendmentId, {\n        reviewerId: 'reviewer-001',\n        reviewedAt: new Date(),\n        decision: 'approve',\n        comments: 'Initial review'\n      });\n\n      // Wait a bit to ensure timestamp difference\n      await new Promise(resolve => setTimeout(resolve, 10));\n\n      const secondTracking = await manager.reviewAmendment(amendmentId, {\n        reviewerId: 'reviewer-002',\n        reviewedAt: new Date(),\n        decision: 'approve',\n        comments: 'Second review'\n      });\n\n      expect(secondTracking.updatedAt.getTime()).toBeGreaterThanOrEqual(originalTracking.updatedAt.getTime());\n    });\n  });\n\n  describe('enactAmendment', () => {\n    let approvedAmendmentId: string;\n    let unapprovedAmendmentId: string;\n\n    beforeEach(async () => {\n      // Create approved amendment\n      const approvedAmendment: ConstitutionalAmendment = {\n        id: 'approved-amendment',\n        title: 'Approved Amendment',\n        description: 'Amendment for enactment testing',\n        section: 'Testing (NON-NEGOTIABLE)',\n        newRequirements: ['Enactment test requirement'],\n        newProhibitions: ['Enactment test prohibition'],\n        enforcementMechanisms: [\n          {\n            type: 'pre-commit-hook',\n            description: 'Test enforcement',\n            configuration: {\n              command: 'test-command',\n              onFailure: 'block'\n            }\n          }\n        ],\n        rationale: 'Test enactment',\n        expectedImpact: 'Validate enactment process'\n      };\n\n      await manager.proposeAmendment(approvedAmendment);\n      await manager.reviewAmendment(approvedAmendment.id, {\n        reviewerId: 'test-reviewer',\n        reviewedAt: new Date(),\n        decision: 'approve',\n        comments: 'Approved for testing'\n      });\n      approvedAmendmentId = approvedAmendment.id;\n\n      // Create unapproved amendment\n      const unapprovedAmendment: ConstitutionalAmendment = {\n        id: 'unapproved-amendment',\n        title: 'Unapproved Amendment',\n        description: 'Amendment that should not be enacted',\n        section: 'Testing (NON-NEGOTIABLE)',\n        newRequirements: [],\n        newProhibitions: [],\n        enforcementMechanisms: [],\n        rationale: 'Test rejection',\n        expectedImpact: 'Should fail enactment'\n      };\n\n      await manager.proposeAmendment(unapprovedAmendment);\n      unapprovedAmendmentId = unapprovedAmendment.id;\n    });\n\n    it('should enact approved amendments successfully', async () => {\n      const enforcementConfig = await manager.enactAmendment(approvedAmendmentId);\n\n      expect(enforcementConfig.amendmentId).toBe(approvedAmendmentId);\n      expect(enforcementConfig.mechanisms).toBeDefined();\n      expect(Array.isArray(enforcementConfig.mechanisms)).toBe(true);\n      expect(enforcementConfig.gracePeriodDays).toBe(0); // Immediate enforcement\n      expect(enforcementConfig.monitoring).toBeDefined();\n      expect(enforcementConfig.monitoring.enableMetrics).toBe(true);\n      expect(enforcementConfig.monitoring.reportingInterval).toBe('daily');\n      expect(enforcementConfig.monitoring.alertThresholds.violationCount).toBe(1);\n    });\n\n    it('should update amendment status to enacted', async () => {\n      await manager.enactAmendment(approvedAmendmentId);\n\n      // We can't directly access the internal state, but we can verify\n      // that the enactment process completed without error\n      expect(true).toBe(true); // Placeholder assertion\n    });\n\n    it('should throw error for unapproved amendments', async () => {\n      await expect(manager.enactAmendment(unapprovedAmendmentId))\n        .rejects.toThrow('Amendment unapproved-amendment must be approved before enactment');\n    });\n\n    it('should throw error for non-existent amendments', async () => {\n      await expect(manager.enactAmendment('non-existent-amendment'))\n        .rejects.toThrow('Amendment non-existent-amendment not found');\n    });\n\n    it('should configure zero-tolerance enforcement for TypeScript', async () => {\n      const enforcementConfig = await manager.enactAmendment(approvedAmendmentId);\n\n      expect(enforcementConfig.gracePeriodDays).toBe(0);\n      expect(enforcementConfig.monitoring.alertThresholds.violationCount).toBe(1);\n      expect(enforcementConfig.monitoring.alertThresholds.timeWindow).toBe('1hour');\n    });\n  });\n\n  describe('getCurrentRequirements', () => {\n    it('should return immutable copy of requirements', () => {\n      const requirements1 = manager.getCurrentRequirements();\n      const requirements2 = manager.getCurrentRequirements();\n\n      expect(requirements1).toEqual(requirements2);\n      expect(requirements1).not.toBe(requirements2); // Different objects\n\n      // Modifying returned object should not affect internal state\n      requirements1.version = 'modified';\n      const requirements3 = manager.getCurrentRequirements();\n      expect(requirements3.version).toBe('2.5.0');\n    });\n\n    it('should include all constitutional sections', () => {\n      const requirements = manager.getCurrentRequirements();\n\n      const expectedSections: ConstitutionalSection[] = [\n        'Testing (NON-NEGOTIABLE)',\n        'Simplicity',\n        'Architecture',\n        'Observability',\n        'Versioning'\n      ];\n\n      for (const section of expectedSections) {\n        expect(requirements.requirementsBySection[section]).toBeDefined();\n        expect(requirements.prohibitionsBySection[section]).toBeDefined();\n        expect(Array.isArray(requirements.requirementsBySection[section])).toBe(true);\n        expect(Array.isArray(requirements.prohibitionsBySection[section])).toBe(true);\n      }\n    });\n\n    it('should have consistent enforcement mechanisms', () => {\n      const requirements = manager.getCurrentRequirements();\n\n      for (const enforcement of requirements.activeEnforcements) {\n        expect(enforcement.type).toBeDefined();\n        expect(enforcement.configuration).toBeDefined();\n        expect(typeof enforcement.active).toBe('boolean');\n        expect(enforcement.configuration.onFailure).toMatch(/^(block|warn|report)$/);\n      }\n    });\n  });\n\n  describe('validateCompliance', () => {\n    it('should validate codebase TypeScript compliance', async () => {\n      const target: ComplianceTarget = {\n        type: 'codebase',\n        identifier: 'test-codebase',\n        aspects: ['typescript']\n      };\n\n      const result = await manager.validateCompliance(target);\n\n      expect(result).toBeDefined();\n      expect(typeof result.compliant).toBe('boolean');\n      expect(Array.isArray(result.violations)).toBe(true);\n      expect(typeof result.score).toBe('number');\n      expect(result.score).toBeGreaterThanOrEqual(0);\n      expect(result.score).toBeLessThanOrEqual(100);\n      expect(Array.isArray(result.recommendations)).toBe(true);\n      expect(result.validatedAt).toBeInstanceOf(Date);\n    });\n\n    it('should validate testing compliance', async () => {\n      const target: ComplianceTarget = {\n        type: 'codebase',\n        identifier: 'test-testing',\n        aspects: ['testing']\n      };\n\n      const result = await manager.validateCompliance(target);\n\n      expect(result).toBeDefined();\n      // Should check devbox run test compliance\n      if (!result.compliant) {\n        const testViolations = result.violations.filter(v => \n          v.requirement.includes('devbox run test')\n        );\n        \n        if (testViolations.length > 0) {\n          expect(testViolations[0].severity).toBe('critical');\n        }\n      }\n    });\n\n    it('should provide appropriate recommendations for violations', async () => {\n      const target: ComplianceTarget = {\n        type: 'codebase',\n        identifier: 'test-recommendations',\n        aspects: ['typescript', 'testing']\n      };\n\n      const result = await manager.validateCompliance(target);\n\n      if (result.violations.length > 0) {\n        expect(result.recommendations.length).toBeGreaterThan(0);\n        \n        for (const recommendation of result.recommendations) {\n          expect(typeof recommendation).toBe('string');\n          expect(recommendation.length).toBeGreaterThan(0);\n        }\n\n        // Should include TypeScript-specific recommendations\n        const hasTypeScriptRecommendation = result.recommendations.some(r => \n          r.includes('TypeScript') || r.includes('compilation')\n        );\n        expect(hasTypeScriptRecommendation).toBe(true);\n      }\n    });\n\n    it('should calculate compliance score correctly', async () => {\n      const target: ComplianceTarget = {\n        type: 'codebase',\n        identifier: 'test-scoring',\n        aspects: ['typescript', 'testing']\n      };\n\n      const result = await manager.validateCompliance(target);\n\n      expect(result.score).toBeGreaterThanOrEqual(0);\n      expect(result.score).toBeLessThanOrEqual(100);\n\n      if (result.compliant) {\n        expect(result.score).toBe(100);\n        expect(result.violations).toHaveLength(0);\n      } else {\n        expect(result.score).toBeLessThan(100);\n        expect(result.violations.length).toBeGreaterThan(0);\n      }\n    });\n\n    it('should handle different compliance target types', async () => {\n      const targets: ComplianceTarget[] = [\n        { type: 'codebase', identifier: 'code', aspects: ['typescript'] },\n        { type: 'configuration', identifier: 'config', aspects: ['typescript'] },\n        { type: 'process', identifier: 'proc', aspects: ['testing'] }\n      ];\n\n      for (const target of targets) {\n        const result = await manager.validateCompliance(target);\n        expect(result).toBeDefined();\n        expect(typeof result.compliant).toBe('boolean');\n      }\n    });\n  });\n\n  describe('Edge Cases and Error Handling', () => {\n    it('should handle empty amendment fields gracefully', async () => {\n      const amendment: ConstitutionalAmendment = {\n        id: 'empty-amendment',\n        title: '',\n        description: '',\n        section: 'Testing (NON-NEGOTIABLE)',\n        newRequirements: [],\n        newProhibitions: [],\n        enforcementMechanisms: [],\n        rationale: '',\n        expectedImpact: ''\n      };\n\n      const tracking = await manager.proposeAmendment(amendment);\n      expect(tracking.amendmentId).toBe('empty-amendment');\n      expect(tracking.status).toBe('proposed');\n    });\n\n    it('should handle review without suggestions', async () => {\n      const amendment: ConstitutionalAmendment = {\n        id: 'no-suggestions-amendment',\n        title: 'No Suggestions Amendment',\n        description: 'Testing review without suggestions',\n        section: 'Testing (NON-NEGOTIABLE)',\n        newRequirements: [],\n        newProhibitions: [],\n        enforcementMechanisms: [],\n        rationale: 'Test',\n        expectedImpact: 'Test'\n      };\n\n      await manager.proposeAmendment(amendment);\n\n      const review: AmendmentReview = {\n        reviewerId: 'reviewer-minimal',\n        reviewedAt: new Date(),\n        decision: 'approve',\n        comments: 'Looks good'\n        // No suggestions field\n      };\n\n      const tracking = await manager.reviewAmendment(amendment.id, review);\n      expect(tracking.reviews[0].suggestions).toBeUndefined();\n    });\n\n    it('should handle compliance validation errors gracefully', async () => {\n      const target: ComplianceTarget = {\n        type: 'codebase',\n        identifier: 'error-test',\n        aspects: ['typescript', 'testing']\n      };\n\n      // This should not throw, even if internal validation fails\n      const result = await manager.validateCompliance(target);\n      expect(result).toBeDefined();\n      expect(typeof result.compliant).toBe('boolean');\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}