{"version":3,"names":["CodedError","exports","_Error","code","message","_this","_classCallCheck2","default","_callSuper","_inherits2","_createClass2","_wrapNativeSuper2","Error"],"sources":["CodedError.ts"],"sourcesContent":["/**\n * A general error class that should be used for all errors in Expo modules.\n * Guarantees a `code` field that can be used to differentiate between different\n * types of errors without further subclassing Error.\n */\nexport class CodedError extends Error {\n  code: string;\n  info?: any;\n\n  constructor(code: string, message: string) {\n    super(message);\n    this.code = code;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;IAKaA,UAAU,GAAAC,OAAA,CAAAD,UAAA,aAAAE,MAAA;EAIrB,SAAAF,WAAYG,IAAY,EAAEC,OAAe,EAAE;IAAA,IAAAC,KAAA;IAAA,IAAAC,gBAAA,CAAAC,OAAA,QAAAP,UAAA;IACzCK,KAAA,GAAAG,UAAA,OAAAR,UAAA,GAAMI,OAAO;IACbC,KAAA,CAAKF,IAAI,GAAGA,IAAI;IAAC,OAAAE,KAAA;EACnB;EAAC,IAAAI,UAAA,CAAAF,OAAA,EAAAP,UAAA,EAAAE,MAAA;EAAA,WAAAQ,aAAA,CAAAH,OAAA,EAAAP,UAAA;AAAA,MAAAW,iBAAA,CAAAJ,OAAA,EAP6BK,KAAK","ignoreList":[]}