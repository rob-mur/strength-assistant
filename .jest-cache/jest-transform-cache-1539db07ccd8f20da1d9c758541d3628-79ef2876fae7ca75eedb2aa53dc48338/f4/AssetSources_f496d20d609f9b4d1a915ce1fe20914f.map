{"version":3,"names":["_expoModulesCore","require","_reactNative","_AssetSourceResolver","_interopRequireDefault","_PlatformUtils","selectAssetSource","meta","_meta$fileHashes$inde","_meta$fileUris$index","_manifest2$extra","scale","AssetSourceResolver","pickScale","scales","PixelRatio","get","index","findIndex","s","hash","fileHashes","uri","fileUris","resolveUri","fileScale","fileExtension","type","encodeURIComponent","suffix","name","params","URLSearchParams","platform","Platform","OS","test","httpServerLocation","manifest2","getManifest2","devServerUrl","extra","expoGo","developer","debuggerHost","baseUrl","URL","searchParams","set","href","NativeModules","manifestBaseUrl"],"sources":["../src/AssetSources.ts"],"sourcesContent":["import type { PackagerAsset } from '@react-native/assets-registry/registry';\nimport { Platform } from 'expo-modules-core';\nimport { PixelRatio, NativeModules } from 'react-native';\n\nimport AssetSourceResolver from './AssetSourceResolver';\nimport { getManifest2, manifestBaseUrl } from './PlatformUtils';\n\n// @docsMissing\nexport type AssetMetadata = Pick<\n  PackagerAsset,\n  'httpServerLocation' | 'name' | 'hash' | 'type' | 'scales' | 'width' | 'height'\n> & {\n  uri?: string;\n  fileHashes?: string[];\n  fileUris?: string[];\n};\n\nexport type AssetSource = {\n  uri: string;\n  hash: string;\n};\n\n/**\n * Selects the best file for the given asset (ex: choosing the best scale for images) and returns\n * a { uri, hash } pair for the specific asset file.\n *\n * If the asset isn't an image with multiple scales, the first file is selected.\n */\nexport function selectAssetSource(meta: AssetMetadata): AssetSource {\n  // This logic is based on that of AssetSourceResolver, with additional support for file hashes and\n  // explicitly provided URIs\n  const scale = AssetSourceResolver.pickScale(meta.scales, PixelRatio.get());\n  const index = meta.scales.findIndex((s) => s === scale);\n  const hash = meta.fileHashes ? (meta.fileHashes[index] ?? meta.fileHashes[0]) : meta.hash;\n\n  // Allow asset processors to directly provide the URL to load\n  const uri = meta.fileUris ? (meta.fileUris[index] ?? meta.fileUris[0]) : meta.uri;\n  if (uri) {\n    return { uri: resolveUri(uri), hash };\n  }\n\n  const fileScale = scale === 1 ? '' : `@${scale}x`;\n  const fileExtension = meta.type ? `.${encodeURIComponent(meta.type)}` : '';\n  const suffix = `/${encodeURIComponent(meta.name)}${fileScale}${fileExtension}`;\n  const params = new URLSearchParams({\n    platform: Platform.OS,\n    hash: meta.hash,\n  });\n\n  // For assets with a specified absolute URL, we use the existing origin instead of prepending the\n  // development server or production CDN URL origin\n  if (/^https?:\\/\\//.test(meta.httpServerLocation)) {\n    const uri = meta.httpServerLocation + suffix + '?' + params;\n    return { uri, hash };\n  }\n\n  // For assets during development using manifest2, we use the development server's URL origin\n  const manifest2 = getManifest2();\n\n  const devServerUrl = manifest2?.extra?.expoGo?.developer\n    ? 'http://' + manifest2.extra.expoGo.debuggerHost\n    : null;\n  if (devServerUrl) {\n    const baseUrl = new URL(meta.httpServerLocation + suffix, devServerUrl);\n\n    baseUrl.searchParams.set('platform', Platform.OS);\n    baseUrl.searchParams.set('hash', meta.hash);\n    return {\n      uri: baseUrl.href,\n      hash,\n    };\n  }\n\n  // Temporary fallback for loading assets in Expo Go home\n  if (NativeModules['ExponentKernel']) {\n    return { uri: `https://classic-assets.eascdn.net/~assets/${encodeURIComponent(hash)}`, hash };\n  }\n\n  // In correctly configured apps, we arrive here if the asset is locally available on disk due to\n  // being managed by expo-updates, and `getLocalAssetUri(hash)` must return a local URI for this\n  // hash. Since the asset is local, we don't have a remote URL and specify an invalid URL (an empty\n  // string) as a placeholder.\n  return { uri: '', hash };\n}\n\n/**\n * Resolves the given URI to an absolute URI. If the given URI is already an absolute URI, it is\n * simply returned. Otherwise, if it is a relative URI, it is resolved relative to the manifest's\n * base URI.\n */\nexport function resolveUri(uri: string): string {\n  // `manifestBaseUrl` is always an absolute URL or `null`.\n  return manifestBaseUrl ? new URL(uri, manifestBaseUrl).href : uri;\n}\n"],"mappings":"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","ignoreList":[]}