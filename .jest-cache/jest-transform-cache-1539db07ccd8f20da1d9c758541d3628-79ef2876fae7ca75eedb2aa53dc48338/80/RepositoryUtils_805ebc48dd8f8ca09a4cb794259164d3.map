{"version":3,"names":["RepositoryUtils","exports","_classCallCheck2","default","_createClass2","key","value","validateExerciseData","data","undefined","name","trim","length","getExercisesCollectionPath","userId","validateExerciseId","exerciseId","Error"],"sources":["RepositoryUtils.ts"],"sourcesContent":["/**\n * Common utilities shared across repository implementations\n */\nexport class RepositoryUtils {\n  /**\n   * Validate exercise data structure\n   */\n  static validateExerciseData(data: any): boolean {\n    if (data === null || data === undefined) return false;\n    if (typeof data !== 'object') return false;\n    if (typeof data.name !== 'string') return false;\n    if (data.name.trim().length === 0) return false;\n    return true;\n  }\n\n  /**\n   * Get exercises collection path for a user\n   */\n  static getExercisesCollectionPath(userId: string): string {\n    return `users/${userId}/exercises`;\n  }\n\n  /**\n   * Validate exercise ID input\n   */\n  static validateExerciseId(exerciseId: string): void {\n    if (!exerciseId || typeof exerciseId !== 'string' || exerciseId.trim().length === 0) {\n      throw new Error('Valid exerciseId is required');\n    }\n  }\n}"],"mappings":";;;;;;;IAGaA,eAAe,GAAAC,OAAA,CAAAD,eAAA;EAAA,SAAAA,gBAAA;IAAA,IAAAE,gBAAA,CAAAC,OAAA,QAAAH,eAAA;EAAA;EAAA,WAAAI,aAAA,CAAAD,OAAA,EAAAH,eAAA;IAAAK,GAAA;IAAAC,KAAA,EAI1B,SAAOC,oBAAoBA,CAACC,IAAS,EAAW;MAC9C,IAAIA,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAKC,SAAS,EAAE,OAAO,KAAK;MACrD,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE,OAAO,KAAK;MAC1C,IAAI,OAAOA,IAAI,CAACE,IAAI,KAAK,QAAQ,EAAE,OAAO,KAAK;MAC/C,IAAIF,IAAI,CAACE,IAAI,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,KAAK;MAC/C,OAAO,IAAI;IACb;EAAC;IAAAP,GAAA;IAAAC,KAAA,EAKD,SAAOO,0BAA0BA,CAACC,MAAc,EAAU;MACxD,OAAO,SAASA,MAAM,YAAY;IACpC;EAAC;IAAAT,GAAA;IAAAC,KAAA,EAKD,SAAOS,kBAAkBA,CAACC,UAAkB,EAAQ;MAClD,IAAI,CAACA,UAAU,IAAI,OAAOA,UAAU,KAAK,QAAQ,IAAIA,UAAU,CAACL,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;QACnF,MAAM,IAAIK,KAAK,CAAC,8BAA8B,CAAC;MACjD;IACF;EAAC;AAAA","ignoreList":[]}