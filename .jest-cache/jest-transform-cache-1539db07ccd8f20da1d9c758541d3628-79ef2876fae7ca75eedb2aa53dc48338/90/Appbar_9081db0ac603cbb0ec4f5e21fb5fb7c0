9a6bef0c799facc958f1022db5dfe654
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _toConsumableArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/toConsumableArray"));
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["children", "dark", "style", "mode", "elevated", "safeAreaInsets", "theme"],
  _excluded2 = ["backgroundColor", "elevation"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Appbar = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _color = _interopRequireDefault(require("color"));
var _AppbarContent = _interopRequireDefault(require("./AppbarContent"));
var _utils = require("./utils");
var _theming = require("../../core/theming");
var _Surface = _interopRequireDefault(require("../Surface"));
function _interopRequireDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}
function _interopRequireWildcard(e, t) {
  if ("function" == typeof WeakMap) var r = new WeakMap(),
    n = new WeakMap();
  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {
    if (!t && e && e.__esModule) return e;
    var o,
      i,
      f = {
        __proto__: null,
        default: e
      };
    if (null === e || "object" != typeof e && "function" != typeof e) return f;
    if (o = t ? n : r) {
      if (o.has(e)) return o.get(e);
      o.set(e, f);
    }
    for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]);
    return f;
  })(e, t);
}
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
var Appbar = function Appbar(_ref) {
  var children = _ref.children,
    dark = _ref.dark,
    style = _ref.style,
    _ref$mode = _ref.mode,
    mode = _ref$mode === void 0 ? 'small' : _ref$mode,
    elevated = _ref.elevated,
    safeAreaInsets = _ref.safeAreaInsets,
    themeOverrides = _ref.theme,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var isV3 = theme.isV3;
  var flattenedStyle = _reactNative.StyleSheet.flatten(style);
  var _ref2 = flattenedStyle || {},
    customBackground = _ref2.backgroundColor,
    _ref2$elevation = _ref2.elevation,
    elevation = _ref2$elevation === void 0 ? isV3 ? elevated ? 2 : 0 : 4 : _ref2$elevation,
    restStyle = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);
  var backgroundColor = (0, _utils.getAppbarBackgroundColor)(theme, elevation, customBackground, elevated);
  var isMode = function isMode(modeToCompare) {
    return isV3 && mode === modeToCompare;
  };
  var isDark = false;
  if (typeof dark === 'boolean') {
    isDark = dark;
  } else if (!isV3) {
    isDark = backgroundColor === 'transparent' ? false : typeof backgroundColor === 'string' ? !(0, _color.default)(backgroundColor).isLight() : true;
  }
  var isV3CenterAlignedMode = isV3 && isMode('center-aligned');
  var shouldCenterContent = false;
  var shouldAddLeftSpacing = false;
  var shouldAddRightSpacing = false;
  if (!isV3 && _reactNative.Platform.OS === 'ios' || isV3CenterAlignedMode) {
    var hasAppbarContent = false;
    var leftItemsCount = 0;
    var rightItemsCount = 0;
    React.Children.forEach(children, function (child) {
      if (React.isValidElement(child)) {
        var isLeading = child.props.isLeading === true;
        if (child.type === _AppbarContent.default) {
          hasAppbarContent = true;
        } else if (isLeading || !hasAppbarContent) {
          leftItemsCount++;
        } else {
          rightItemsCount++;
        }
      }
    });
    shouldCenterContent = hasAppbarContent && leftItemsCount < 2 && rightItemsCount < (isV3 ? 3 : 2);
    shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;
    shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;
  }
  var spacingStyle = isV3 ? styles.v3Spacing : styles.spacing;
  var insets = {
    paddingBottom: safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom,
    paddingTop: safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.top,
    paddingLeft: safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left,
    paddingRight: safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right
  };
  return React.createElement(_Surface.default, _extends({
    style: [{
      backgroundColor: backgroundColor
    }, styles.appbar, {
      height: isV3 ? _utils.modeAppbarHeight[mode] : _utils.DEFAULT_APPBAR_HEIGHT
    }, insets, restStyle, !theme.isV3 && {
      elevation: elevation
    }],
    elevation: elevation,
    container: true
  }, rest), shouldAddLeftSpacing ? React.createElement(_reactNative.View, {
    style: spacingStyle
  }) : null, (!isV3 || isMode('small') || isMode('center-aligned')) && React.createElement(React.Fragment, null, (0, _utils.renderAppbarContent)({
    children: children,
    isDark: isDark,
    theme: theme,
    isV3: isV3,
    renderOnly: ['Appbar.BackAction'],
    shouldCenterContent: isV3CenterAlignedMode || shouldCenterContent
  }), (0, _utils.renderAppbarContent)({
    children: [].concat((0, _toConsumableArray2.default)((0, _utils.filterAppbarActions)(children, true)), (0, _toConsumableArray2.default)((0, _utils.filterAppbarActions)(children))),
    isDark: isDark,
    theme: theme,
    isV3: isV3,
    renderExcept: ['Appbar.BackAction'],
    shouldCenterContent: isV3CenterAlignedMode || shouldCenterContent
  })), (isMode('medium') || isMode('large')) && React.createElement(_reactNative.View, {
    style: [styles.columnContainer, isMode('center-aligned') && styles.centerAlignedContainer]
  }, React.createElement(_reactNative.View, {
    style: styles.controlsRow
  }, (0, _utils.renderAppbarContent)({
    children: children,
    isDark: isDark,
    isV3: isV3,
    renderOnly: ['Appbar.BackAction'],
    mode: mode
  }), (0, _utils.renderAppbarContent)({
    children: (0, _utils.filterAppbarActions)(children, true),
    isDark: isDark,
    isV3: isV3,
    renderOnly: ['Appbar.Action'],
    mode: mode
  }), React.createElement(_reactNative.View, {
    style: styles.rightActionControls
  }, (0, _utils.renderAppbarContent)({
    children: (0, _utils.filterAppbarActions)(children),
    isDark: isDark,
    isV3: isV3,
    renderExcept: ['Appbar', 'Appbar.BackAction', 'Appbar.Content', 'Appbar.Header'],
    mode: mode
  }))), (0, _utils.renderAppbarContent)({
    children: children,
    isDark: isDark,
    isV3: isV3,
    renderOnly: ['Appbar.Content'],
    mode: mode
  })), shouldAddRightSpacing ? React.createElement(_reactNative.View, {
    style: spacingStyle
  }) : null);
};
exports.Appbar = Appbar;
var styles = _reactNative.StyleSheet.create({
  appbar: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingHorizontal: 4
  },
  spacing: {
    width: 48
  },
  v3Spacing: {
    width: 52
  },
  controlsRow: {
    flex: 1,
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between'
  },
  rightActionControls: {
    flexDirection: 'row',
    flex: 1,
    justifyContent: 'flex-end'
  },
  columnContainer: {
    flexDirection: 'column',
    flex: 1,
    paddingTop: 8
  },
  centerAlignedContainer: {
    paddingTop: 0
  }
});
var _default = exports.default = Appbar;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9jb2xvciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfQXBwYmFyQ29udGVudCIsIl91dGlscyIsIl90aGVtaW5nIiwiX1N1cmZhY2UiLCJlIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ0IiwiV2Vha01hcCIsInIiLCJuIiwibyIsImkiLCJmIiwiX19wcm90b19fIiwiaGFzIiwiZ2V0Iiwic2V0IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJfZXh0ZW5kcyIsImFzc2lnbiIsImJpbmQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJhcHBseSIsIkFwcGJhciIsIl9yZWYiLCJjaGlsZHJlbiIsImRhcmsiLCJzdHlsZSIsIl9yZWYkbW9kZSIsIm1vZGUiLCJlbGV2YXRlZCIsInNhZmVBcmVhSW5zZXRzIiwidGhlbWVPdmVycmlkZXMiLCJ0aGVtZSIsInJlc3QiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMyIiwiX2V4Y2x1ZGVkIiwidXNlSW50ZXJuYWxUaGVtZSIsImlzVjMiLCJmbGF0dGVuZWRTdHlsZSIsIlN0eWxlU2hlZXQiLCJmbGF0dGVuIiwiX3JlZjIiLCJjdXN0b21CYWNrZ3JvdW5kIiwiYmFja2dyb3VuZENvbG9yIiwiX3JlZjIkZWxldmF0aW9uIiwiZWxldmF0aW9uIiwicmVzdFN0eWxlIiwiX2V4Y2x1ZGVkMiIsImdldEFwcGJhckJhY2tncm91bmRDb2xvciIsImlzTW9kZSIsIm1vZGVUb0NvbXBhcmUiLCJpc0RhcmsiLCJpc0xpZ2h0IiwiaXNWM0NlbnRlckFsaWduZWRNb2RlIiwic2hvdWxkQ2VudGVyQ29udGVudCIsInNob3VsZEFkZExlZnRTcGFjaW5nIiwic2hvdWxkQWRkUmlnaHRTcGFjaW5nIiwiUGxhdGZvcm0iLCJPUyIsImhhc0FwcGJhckNvbnRlbnQiLCJsZWZ0SXRlbXNDb3VudCIsInJpZ2h0SXRlbXNDb3VudCIsIkNoaWxkcmVuIiwiZm9yRWFjaCIsImNoaWxkIiwiaXNWYWxpZEVsZW1lbnQiLCJpc0xlYWRpbmciLCJwcm9wcyIsInR5cGUiLCJzcGFjaW5nU3R5bGUiLCJzdHlsZXMiLCJ2M1NwYWNpbmciLCJzcGFjaW5nIiwiaW5zZXRzIiwicGFkZGluZ0JvdHRvbSIsImJvdHRvbSIsInBhZGRpbmdUb3AiLCJ0b3AiLCJwYWRkaW5nTGVmdCIsImxlZnQiLCJwYWRkaW5nUmlnaHQiLCJyaWdodCIsImNyZWF0ZUVsZW1lbnQiLCJhcHBiYXIiLCJoZWlnaHQiLCJtb2RlQXBwYmFySGVpZ2h0IiwiREVGQVVMVF9BUFBCQVJfSEVJR0hUIiwiY29udGFpbmVyIiwiVmlldyIsIkZyYWdtZW50IiwicmVuZGVyQXBwYmFyQ29udGVudCIsInJlbmRlck9ubHkiLCJjb25jYXQiLCJfdG9Db25zdW1hYmxlQXJyYXkyIiwiZmlsdGVyQXBwYmFyQWN0aW9ucyIsInJlbmRlckV4Y2VwdCIsImNvbHVtbkNvbnRhaW5lciIsImNlbnRlckFsaWduZWRDb250YWluZXIiLCJjb250cm9sc1JvdyIsInJpZ2h0QWN0aW9uQ29udHJvbHMiLCJleHBvcnRzIiwiY3JlYXRlIiwiZmxleERpcmVjdGlvbiIsImFsaWduSXRlbXMiLCJwYWRkaW5nSG9yaXpvbnRhbCIsIndpZHRoIiwiZmxleCIsImp1c3RpZnlDb250ZW50IiwiX2RlZmF1bHQiXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9BcHBiYXIvQXBwYmFyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxJQUFBQSxLQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxZQUFBLEdBQUFELE9BQUE7QUFVQSxJQUFBRSxNQUFBLEdBQUFDLHNCQUFBLENBQUFILE9BQUE7QUFFQSxJQUFBSSxjQUFBLEdBQUFELHNC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