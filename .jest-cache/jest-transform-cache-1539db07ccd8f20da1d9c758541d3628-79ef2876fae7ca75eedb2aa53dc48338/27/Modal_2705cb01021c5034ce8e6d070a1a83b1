b727782760776511a2db4032fe5dffc3
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _slicedToArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/slicedToArray"));
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactNativeSafeAreaContext = require("react-native-safe-area-context");
var _useLatestCallback = _interopRequireDefault(require("use-latest-callback"));
var _Surface = _interopRequireDefault(require("./Surface"));
var _theming = require("../core/theming");
var _addEventListener = require("../utils/addEventListener");
var _BackHandler = require("../utils/BackHandler/BackHandler");
var _useAnimatedValue = _interopRequireDefault(require("../utils/useAnimatedValue"));
function _interopRequireDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}
function _interopRequireWildcard(e, t) {
  if ("function" == typeof WeakMap) var r = new WeakMap(),
    n = new WeakMap();
  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {
    if (!t && e && e.__esModule) return e;
    var o,
      i,
      f = {
        __proto__: null,
        default: e
      };
    if (null === e || "object" != typeof e && "function" != typeof e) return f;
    if (o = t ? n : r) {
      if (o.has(e)) return o.get(e);
      o.set(e, f);
    }
    for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]);
    return f;
  })(e, t);
}
var DEFAULT_DURATION = 220;
var AnimatedPressable = _reactNative.Animated.createAnimatedComponent(_reactNative.Pressable);
function Modal(_ref) {
  var _ref$dismissable = _ref.dismissable,
    dismissable = _ref$dismissable === void 0 ? true : _ref$dismissable,
    _ref$dismissableBackB = _ref.dismissableBackButton,
    dismissableBackButton = _ref$dismissableBackB === void 0 ? dismissable : _ref$dismissableBackB,
    _ref$visible = _ref.visible,
    visible = _ref$visible === void 0 ? false : _ref$visible,
    _ref$overlayAccessibi = _ref.overlayAccessibilityLabel,
    overlayAccessibilityLabel = _ref$overlayAccessibi === void 0 ? 'Close modal' : _ref$overlayAccessibi,
    _ref$onDismiss = _ref.onDismiss,
    onDismiss = _ref$onDismiss === void 0 ? function () {} : _ref$onDismiss,
    children = _ref.children,
    contentContainerStyle = _ref.contentContainerStyle,
    style = _ref.style,
    themeOverrides = _ref.theme,
    _ref$testID = _ref.testID,
    testID = _ref$testID === void 0 ? 'modal' : _ref$testID;
  var _theme$colors;
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var onDismissCallback = (0, _useLatestCallback.default)(onDismiss);
  var scale = theme.animation.scale;
  var _ref2 = (0, _reactNativeSafeAreaContext.useSafeAreaInsets)(),
    top = _ref2.top,
    bottom = _ref2.bottom;
  var opacity = (0, _useAnimatedValue.default)(visible ? 1 : 0);
  var _React$useState = React.useState(visible),
    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
    visibleInternal = _React$useState2[0],
    setVisibleInternal = _React$useState2[1];
  var showModalAnimation = React.useCallback(function () {
    _reactNative.Animated.timing(opacity, {
      toValue: 1,
      duration: scale * DEFAULT_DURATION,
      easing: _reactNative.Easing.out(_reactNative.Easing.cubic),
      useNativeDriver: true
    }).start();
  }, [opacity, scale]);
  var hideModalAnimation = React.useCallback(function () {
    _reactNative.Animated.timing(opacity, {
      toValue: 0,
      duration: scale * DEFAULT_DURATION,
      easing: _reactNative.Easing.out(_reactNative.Easing.cubic),
      useNativeDriver: true
    }).start(function (_ref3) {
      var finished = _ref3.finished;
      if (!finished) {
        return;
      }
      setVisibleInternal(false);
    });
  }, [opacity, scale]);
  React.useEffect(function () {
    if (visibleInternal === visible) {
      return;
    }
    if (!visibleInternal && visible) {
      setVisibleInternal(true);
      return showModalAnimation();
    }
    if (visibleInternal && !visible) {
      return hideModalAnimation();
    }
  }, [visible, showModalAnimation, hideModalAnimation, visibleInternal]);
  React.useEffect(function () {
    if (!visible) {
      return undefined;
    }
    var onHardwareBackPress = function onHardwareBackPress() {
      if (dismissable || dismissableBackButton) {
        onDismissCallback();
      }
      return true;
    };
    var subscription = (0, _addEventListener.addEventListener)(_BackHandler.BackHandler, 'hardwareBackPress', onHardwareBackPress);
    return function () {
      return subscription.remove();
    };
  }, [dismissable, dismissableBackButton, onDismissCallback, visible]);
  if (!visibleInternal) {
    return null;
  }
  return React.createElement(_reactNative.Animated.View, {
    pointerEvents: visible ? 'auto' : 'none',
    accessibilityViewIsModal: true,
    accessibilityLiveRegion: "polite",
    style: _reactNative.StyleSheet.absoluteFill,
    onAccessibilityEscape: onDismissCallback,
    testID: testID
  }, React.createElement(AnimatedPressable, {
    accessibilityLabel: overlayAccessibilityLabel,
    accessibilityRole: "button",
    disabled: !dismissable,
    onPress: dismissable ? onDismissCallback : undefined,
    importantForAccessibility: "no",
    style: [styles.backdrop, {
      backgroundColor: (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.backdrop,
      opacity: opacity
    }],
    testID: `${testID}-backdrop`
  }), React.createElement(_reactNative.View, {
    style: [styles.wrapper, {
      marginTop: top,
      marginBottom: bottom
    }, style],
    pointerEvents: "box-none",
    testID: `${testID}-wrapper`
  }, React.createElement(_Surface.default, {
    testID: `${testID}-surface`,
    theme: theme,
    style: [{
      opacity: opacity
    }, styles.content, contentContainerStyle],
    container: true
  }, children)));
}
var _default = exports.default = Modal;
var styles = _reactNative.StyleSheet.create({
  backdrop: {
    flex: 1
  },
  wrapper: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject, {
    justifyContent: 'center'
  }),
  content: {
    backgroundColor: 'transparent',
    justifyContent: 'center'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,