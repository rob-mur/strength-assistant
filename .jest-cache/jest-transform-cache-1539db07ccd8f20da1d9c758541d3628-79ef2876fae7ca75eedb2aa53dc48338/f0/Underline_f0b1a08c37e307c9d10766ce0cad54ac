3ef10ad1ac7321c714ba9a12d5489e46
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Underline = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _theming = require("../../../core/theming");
function _interopRequireWildcard(e, t) {
  if ("function" == typeof WeakMap) var r = new WeakMap(),
    n = new WeakMap();
  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {
    if (!t && e && e.__esModule) return e;
    var o,
      i,
      f = {
        __proto__: null,
        default: e
      };
    if (null === e || "object" != typeof e && "function" != typeof e) return f;
    if (o = t ? n : r) {
      if (o.has(e)) return o.get(e);
      o.set(e, f);
    }
    for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]);
    return f;
  })(e, t);
}
var Underline = function Underline(_ref) {
  var parentState = _ref.parentState,
    error = _ref.error,
    colors = _ref.colors,
    activeColor = _ref.activeColor,
    underlineColorCustom = _ref.underlineColorCustom,
    hasActiveOutline = _ref.hasActiveOutline,
    style = _ref.style,
    themeOverrides = _ref.theme;
  var _ref2 = (0, _theming.useInternalTheme)(themeOverrides),
    isV3 = _ref2.isV3;
  var backgroundColor = parentState.focused ? activeColor : underlineColorCustom;
  if (error) backgroundColor = colors === null || colors === void 0 ? void 0 : colors.error;
  var activeScale = isV3 ? 2 : 1;
  return React.createElement(_reactNative.Animated.View, {
    testID: "text-input-underline",
    style: [styles.underline, isV3 && styles.md3Underline, {
      backgroundColor: backgroundColor,
      transform: [{
        scaleY: (isV3 ? hasActiveOutline : parentState.focused) ? activeScale : 0.5
      }]
    }, style]
  });
};
exports.Underline = Underline;
var styles = _reactNative.StyleSheet.create({
  underline: {
    position: 'absolute',
    left: 0,
    right: 0,
    bottom: 0,
    height: 2,
    zIndex: 1
  },
  md3Underline: {
    height: 1
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl90aGVtaW5nIiwiZSIsInQiLCJXZWFrTWFwIiwiciIsIm4iLCJfX2VzTW9kdWxlIiwibyIsImkiLCJmIiwiX19wcm90b19fIiwiZGVmYXVsdCIsImhhcyIsImdldCIsInNldCIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiVW5kZXJsaW5lIiwiX3JlZiIsInBhcmVudFN0YXRlIiwiZXJyb3IiLCJjb2xvcnMiLCJhY3RpdmVDb2xvciIsInVuZGVybGluZUNvbG9yQ3VzdG9tIiwiaGFzQWN0aXZlT3V0bGluZSIsInN0eWxlIiwidGhlbWVPdmVycmlkZXMiLCJ0aGVtZSIsIl9yZWYyIiwidXNlSW50ZXJuYWxUaGVtZSIsImlzVjMiLCJiYWNrZ3JvdW5kQ29sb3IiLCJmb2N1c2VkIiwiYWN0aXZlU2NhbGUiLCJjcmVhdGVFbGVtZW50IiwiQW5pbWF0ZWQiLCJWaWV3IiwidGVzdElEIiwic3R5bGVzIiwidW5kZXJsaW5lIiwibWQzVW5kZXJsaW5lIiwidHJhbnNmb3JtIiwic2NhbGVZIiwiZXhwb3J0cyIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJwb3NpdGlvbiIsImxlZnQiLCJyaWdodCIsImJvdHRvbSIsImhlaWdodCIsInpJbmRleCJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1RleHRJbnB1dC9BZGRvbnMvVW5kZXJsaW5lLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBQUEsS0FBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBSUEsSUFBQUUsUUFBQSxHQUFBRixPQUFBO0FBQXlELFNBQUFELHdCQUFBSSxDQUFBLEVBQUFD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