# Unified Production Deployment Workflow Contract
# This contract defines the structure and behavior of the consolidated workflow

name: Production Deployment
on:
  push:
    branches: [main]

# Concurrency handling - cancel running deployments on new pushes
concurrency:
  group: production-deployment
  cancel-in-progress: true

jobs:
  build-production-apk:
    runs-on: ubuntu-latest
    outputs:
      apk-artifact-name: ${{ steps.upload.outputs.artifact-name }}
      apk-filename: build_production.apk
    steps:
      - name: Build Production APK
        # Contract: Must produce build_production.apk (not build_preview.apk)
        run: echo "Build APK with production configuration"
      
      - name: Upload APK Artifact
        id: upload
        # Contract: Must upload to GitHub release for persistence
        # Contract: Artifact name must include commit SHA for uniqueness
        run: echo "Upload build_production.apk to GitHub release"

  terraform-deploy:
    runs-on: ubuntu-latest
    needs: build-production-apk
    outputs:
      deployment-id: ${{ steps.deploy.outputs.deployment-id }}
      infrastructure-url: ${{ steps.deploy.outputs.infrastructure-url }}
    steps:
      - name: Deploy Infrastructure
        id: deploy
        # Contract: Must wait for APK build completion
        # Contract: Must use production Terraform workspace
        # Contract: Must generate unique deployment ID for tracking
        run: echo "Deploy infrastructure using Terraform"

  production-validation:
    runs-on: ubuntu-latest
    needs: [build-production-apk, terraform-deploy]
    steps:
      - name: Download Production APK
        # Contract: Must download build_production.apk from build job
        # Contract: Must use exact filename from build job output
        run: echo "Download ${{ needs.build-production-apk.outputs.apk-filename }}"
      
      - name: Run Production Validation
        # Contract: Must test against deployed infrastructure
        # Contract: Must use anonymous user testing approach
        # Contract: Must validate APK against production environment
        env:
          INFRASTRUCTURE_URL: ${{ needs.terraform-deploy.outputs.infrastructure-url }}
          DEPLOYMENT_ID: ${{ needs.terraform-deploy.outputs.deployment-id }}
        run: echo "Validate production deployment using anonymous users"

# Contract Requirements:
# 1. Job Sequencing: build → deploy → validate (explicit dependencies)
# 2. Artifact Sharing: APK artifact passed from build to validation
# 3. Failure Handling: Any job failure stops dependent jobs
# 4. Concurrency: Cancel running workflows on new pushes
# 5. Timeout: No automatic timeouts, manual cancellation only
# 6. APK Naming: Must use build_production.apk consistently
# 7. Infrastructure: Validation must test against actual deployed infrastructure
# 8. Anonymous Testing: Use anonymous users for clean test isolation