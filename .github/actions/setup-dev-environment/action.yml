name: "Setup Development Environment"
description: "Sets up the development environment with devbox, npm caching, and config files"
inputs:
  firebase-config:
    description: "Firebase web configuration JSON"
    required: false
  google-services-config:
    description: "Google services configuration JSON"
    required: false
  devbox-config:
    description: "Devbox configuration folder to use (minimal, android-build, android-testing, dev)"
    required: false
    default: "minimal"

runs:
  using: "composite"
  steps:
    - name: Check devbox.lock exists
      shell: bash
      run: |
        if [ ! -f "devbox/${{ inputs.devbox-config }}/devbox.lock" ]; then
          echo "Error: devbox.lock file not found in devbox/${{ inputs.devbox-config }}/"
          echo "Please generate it locally with: cd devbox/${{ inputs.devbox-config }} && devbox install"
          exit 1
        fi

    - name: Populate Firebase web config
      if: inputs.firebase-config != ''
      shell: bash
      run: |
        cat << 'EOF' > firebase.web.config.json
        ${{ inputs.firebase-config }}
        EOF

    - name: Populate Google services config
      if: inputs.google-services-config != ''
      shell: bash
      run: |
        cat << 'EOF' > google-services.json
        ${{ inputs.google-services-config }}
        EOF

    - name: Install devbox
      uses: jetify-com/devbox-install-action@v0.11.0
      with:
        devbox-version: 0.14.2
        project-path: devbox/${{ inputs.devbox-config }}

    - name: Validate devbox.lock is in sync
      shell: bash
      working-directory: devbox/${{ inputs.devbox-config }}
      run: |
        if ! devbox install --tidy-lockfile --quiet; then
          echo "Error: devbox.lock is out of sync with devbox.json"
          echo "Please regenerate locally with: cd devbox/${{ inputs.devbox-config }} && devbox install"
          exit 1
        fi

    - name: ðŸ“¦ Get npm cache directory path
      id: npm-cache-dir-path
      shell: bash
      working-directory: devbox/${{ inputs.devbox-config }}
      run: echo "dir=$(devbox run -- npm config get cache)" >> $GITHUB_OUTPUT

    - name: ðŸ“¦ Setup npm cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.npm-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    - name: ðŸ“¦ Install dependencies
      shell: bash
      working-directory: devbox/${{ inputs.devbox-config }}
      run: devbox run npm install
