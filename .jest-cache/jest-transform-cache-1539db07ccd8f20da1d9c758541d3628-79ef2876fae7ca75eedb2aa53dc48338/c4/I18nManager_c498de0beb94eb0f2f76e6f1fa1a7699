853e49535bd1491998b420d2692b22ee
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _NativeI18nManager = _interopRequireDefault(require("./NativeI18nManager"));
var i18nConstants = getI18nManagerConstants();
function getI18nManagerConstants() {
  if (_NativeI18nManager.default) {
    var _NativeI18nManager$ge = _NativeI18nManager.default.getConstants(),
      isRTL = _NativeI18nManager$ge.isRTL,
      doLeftAndRightSwapInRTL = _NativeI18nManager$ge.doLeftAndRightSwapInRTL,
      localeIdentifier = _NativeI18nManager$ge.localeIdentifier;
    return {
      isRTL: isRTL,
      doLeftAndRightSwapInRTL: doLeftAndRightSwapInRTL,
      localeIdentifier: localeIdentifier
    };
  }
  return {
    isRTL: false,
    doLeftAndRightSwapInRTL: true
  };
}
var _default = exports.default = {
  getConstants: function getConstants() {
    return i18nConstants;
  },
  allowRTL: function allowRTL(shouldAllow) {
    if (!_NativeI18nManager.default) {
      return;
    }
    _NativeI18nManager.default.allowRTL(shouldAllow);
  },
  forceRTL: function forceRTL(shouldForce) {
    if (!_NativeI18nManager.default) {
      return;
    }
    _NativeI18nManager.default.forceRTL(shouldForce);
  },
  swapLeftAndRightInRTL: function swapLeftAndRightInRTL(flipStyles) {
    if (!_NativeI18nManager.default) {
      return;
    }
    _NativeI18nManager.default.swapLeftAndRightInRTL(flipStyles);
  },
  isRTL: i18nConstants.isRTL,
  doLeftAndRightSwapInRTL: i18nConstants.doLeftAndRightSwapInRTL
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfTmF0aXZlSTE4bk1hbmFnZXIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsImkxOG5Db25zdGFudHMiLCJnZXRJMThuTWFuYWdlckNvbnN0YW50cyIsIk5hdGl2ZUkxOG5NYW5hZ2VyIiwiX05hdGl2ZUkxOG5NYW5hZ2VyJGdlIiwiZ2V0Q29uc3RhbnRzIiwiaXNSVEwiLCJkb0xlZnRBbmRSaWdodFN3YXBJblJUTCIsImxvY2FsZUlkZW50aWZpZXIiLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0IiwiYWxsb3dSVEwiLCJzaG91bGRBbGxvdyIsImZvcmNlUlRMIiwic2hvdWxkRm9yY2UiLCJzd2FwTGVmdEFuZFJpZ2h0SW5SVEwiLCJmbGlwU3R5bGVzIl0sInNvdXJjZXMiOlsiSTE4bk1hbmFnZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE1ldGEgUGxhdGZvcm1zLCBJbmMuIGFuZCBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93IHN0cmljdC1sb2NhbFxuICogQGZvcm1hdFxuICovXG5cbmltcG9ydCB0eXBlIHtJMThuTWFuYWdlckNvbnN0YW50c30gZnJvbSAnLi9OYXRpdmVJMThuTWFuYWdlcic7XG5cbmltcG9ydCBOYXRpdmVJMThuTWFuYWdlciBmcm9tICcuL05hdGl2ZUkxOG5NYW5hZ2VyJztcblxuY29uc3QgaTE4bkNvbnN0YW50czogSTE4bk1hbmFnZXJDb25zdGFudHMgPSBnZXRJMThuTWFuYWdlckNvbnN0YW50cygpO1xuXG5mdW5jdGlvbiBnZXRJMThuTWFuYWdlckNvbnN0YW50cygpOiBJMThuTWFuYWdlckNvbnN0YW50cyB7XG4gIGlmIChOYXRpdmVJMThuTWFuYWdlcikge1xuICAgIGNvbnN0IHtpc1JUTCwgZG9MZWZ0QW5kUmlnaHRTd2FwSW5SVEwsIGxvY2FsZUlkZW50aWZpZXJ9ID1cbiAgICAgIE5hdGl2ZUkxOG5NYW5hZ2VyLmdldENvbnN0YW50cygpO1xuICAgIHJldHVybiB7aXNSVEwsIGRvTGVmdEFuZFJpZ2h0U3dhcEluUlRMLCBsb2NhbGVJZGVudGlmaWVyfTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaXNSVEw6IGZhbHNlLFxuICAgIGRvTGVmdEFuZFJpZ2h0U3dhcEluUlRMOiB0cnVlLFxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGdldENvbnN0YW50czogKCk6IEkxOG5NYW5hZ2VyQ29uc3RhbnRzID0+IHtcbiAgICByZXR1cm4gaTE4bkNvbnN0YW50cztcbiAgfSxcblxuICBhbGxvd1JUTDogKHNob3VsZEFsbG93OiBib29sZWFuKSA9PiB7XG4gICAgaWYgKCFOYXRpdmVJMThuTWFuYWdlcikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIE5hdGl2ZUkxOG5NYW5hZ2VyLmFsbG93UlRMKHNob3VsZEFsbG93KTtcbiAgfSxcblxuICBmb3JjZVJUTDogKHNob3VsZEZvcmNlOiBib29sZWFuKSA9PiB7XG4gICAgaWYgKCFOYXRpdmVJMThuTWFuYWdlcikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIE5hdGl2ZUkxOG5NYW5hZ2VyLmZvcmNlUlRMKHNob3VsZEZvcmNlKTtcbiAgfSxcblxuICBzd2FwTGVmdEFuZFJpZ2h0SW5SVEw6IChmbGlwU3R5bGVzOiBib29sZWFuKSA9PiB7XG4gICAgaWYgKCFOYXRpdmVJMThuTWFuYWdlcikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIE5hdGl2ZUkxOG5NYW5hZ2VyLnN3YXBMZWZ0QW5kUmlnaHRJblJUTChmbGlwU3R5bGVzKTtcbiAgfSxcblxuICBpc1JUTDogaTE4bkNvbnN0YW50cy5pc1JUTCBhcyBJMThuTWFuYWdlckNvbnN0YW50c1snaXNSVEwnXSxcbiAgZG9MZWZ0QW5kUmlnaHRTd2FwSW5SVEw6XG4gICAgaTE4bkNvbnN0YW50cy5kb0xlZnRBbmRSaWdodFN3YXBJblJUTCBhcyBJMThuTWFuYWdlckNvbnN0YW50c1snZG9MZWZ0QW5kUmlnaHRTd2FwSW5SVEwnXSxcbn07XG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBWUEsSUFBQUEsa0JBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUVBLElBQU1DLGFBQW1DLEdBQUdDLHVCQUF1QixDQUFDLENBQUM7QUFFckUsU0FBU0EsdUJBQXVCQSxDQUFBLEVBQXlCO0VBQ3ZELElBQUlDLDBCQUFpQixFQUFFO0lBQ3JCLElBQUFDLHFCQUFBLEdBQ0VELDBCQUFpQixDQUFDRSxZQUFZLENBQUMsQ0FBQztNQUQzQkMsS0FBSyxHQUFBRixxQkFBQSxDQUFMRSxLQUFLO01BQUVDLHVCQUF1QixHQUFBSCxxQkFBQSxDQUF2QkcsdUJBQXVCO01BQUVDLGdCQUFnQixHQUFBSixxQkFBQSxDQUFoQkksZ0JBQWdCO0lBRXZELE9BQU87TUFBQ0YsS0FBSyxFQUFMQSxLQUFLO01BQUVDLHVCQUF1QixFQUF2QkEsdUJBQXVCO01BQUVDLGdCQUFnQixFQUFoQkE7SUFBZ0IsQ0FBQztFQUMzRDtFQUVBLE9BQU87SUFDTEYsS0FBSyxFQUFFLEtBQUs7SUFDWkMsdUJBQXVCLEVBQUU7RUFDM0IsQ0FBQztBQUNIO0FBQUMsSUFBQUUsUUFBQSxHQUFBQyxPQUFBLENBQUFDLE9BQUEsR0FFYztFQUNiTixZQUFZLEVBQUUsU0FBZEEsWUFBWUEsQ0FBQSxFQUE4QjtJQUN4QyxPQUFPSixhQUFhO0VBQ3RCLENBQUM7RUFFRFcsUUFBUSxFQUFFLFNBQVZBLFFBQVFBLENBQUdDLFdBQW9CLEVBQUs7SUFDbEMsSUFBSSxDQUFDViwwQkFBaUIsRUFBRTtNQUN0QjtJQUNGO0lBRUFBLDBCQUFpQixDQUFDUyxRQUFRLENBQUNDLFdBQVcsQ0FBQztFQUN6QyxDQUFDO0VBRURDLFFBQVEsRUFBRSxTQUFWQSxRQUFRQSxDQUFHQyxXQUFvQixFQUFLO0lBQ2xDLElBQUksQ0FBQ1osMEJBQWlCLEVBQUU7TUFDdEI7SUFDRjtJQUVBQSwwQkFBaUIsQ0FBQ1csUUFBUSxDQUFDQyxXQUFXLENBQUM7RUFDekMsQ0FBQztFQUVEQyxxQkFBcUIsRUFBRSxTQUF2QkEscUJBQXFCQSxDQUFHQyxVQUFtQixFQUFLO0lBQzlDLElBQUksQ0FBQ2QsMEJBQWlCLEVBQUU7TUFDdEI7SUFDRjtJQUVBQSwwQkFBaUIsQ0FBQ2EscUJBQXFCLENBQUNDLFVBQVUsQ0FBQztFQUNyRCxDQUFDO0VBRURYLEtBQUssRUFBRUwsYUFBYSxDQUFDSyxLQUFzQztFQUMzREMsdUJBQXVCLEVBQ3JCTixhQUFhLENBQUNNO0FBQ2xCLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=