874c635a7e2572356fc654d6948b02e3
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _utils = require("./utils");
var _theming = require("../../core/theming");
var _Icon = _interopRequireDefault(require("../Icon"));
var _TouchableRipple = _interopRequireDefault(require("../TouchableRipple/TouchableRipple"));
var _Text = _interopRequireDefault(require("../Typography/Text"));
function _interopRequireDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}
function _interopRequireWildcard(e, t) {
  if ("function" == typeof WeakMap) var r = new WeakMap(),
    n = new WeakMap();
  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {
    if (!t && e && e.__esModule) return e;
    var o,
      i,
      f = {
        __proto__: null,
        default: e
      };
    if (null === e || "object" != typeof e && "function" != typeof e) return f;
    if (o = t ? n : r) {
      if (o.has(e)) return o.get(e);
      o.set(e, f);
    }
    for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]);
    return f;
  })(e, t);
}
var MenuItem = function MenuItem(_ref) {
  var leadingIcon = _ref.leadingIcon,
    trailingIcon = _ref.trailingIcon,
    dense = _ref.dense,
    title = _ref.title,
    disabled = _ref.disabled,
    background = _ref.background,
    onPress = _ref.onPress,
    style = _ref.style,
    containerStyle = _ref.containerStyle,
    contentStyle = _ref.contentStyle,
    titleStyle = _ref.titleStyle,
    customRippleColor = _ref.rippleColor,
    _ref$testID = _ref.testID,
    testID = _ref$testID === void 0 ? 'menu-item' : _ref$testID,
    accessibilityLabel = _ref.accessibilityLabel,
    accessibilityState = _ref.accessibilityState,
    themeOverrides = _ref.theme,
    _ref$titleMaxFontSize = _ref.titleMaxFontSizeMultiplier,
    titleMaxFontSizeMultiplier = _ref$titleMaxFontSize === void 0 ? 1.5 : _ref$titleMaxFontSize,
    hitSlop = _ref.hitSlop;
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var _ref2 = (0, _utils.getMenuItemColor)({
      theme: theme,
      disabled: disabled,
      customRippleColor: customRippleColor
    }),
    titleColor = _ref2.titleColor,
    iconColor = _ref2.iconColor,
    rippleColor = _ref2.rippleColor;
  var isV3 = theme.isV3;
  var containerPadding = isV3 ? 12 : 8;
  var iconWidth = isV3 ? 24 : 40;
  var minWidth = _utils.MIN_WIDTH - (isV3 ? 12 : 16);
  var maxWidth = (0, _utils.getContentMaxWidth)({
    isV3: isV3,
    iconWidth: iconWidth,
    leadingIcon: leadingIcon,
    trailingIcon: trailingIcon
  });
  var titleTextStyle = Object.assign({
    color: titleColor
  }, isV3 ? theme.fonts.bodyLarge : {});
  var newAccessibilityState = Object.assign({}, accessibilityState, {
    disabled: disabled
  });
  return React.createElement(_TouchableRipple.default, {
    style: [styles.container, {
      paddingHorizontal: containerPadding
    }, dense && styles.md3DenseContainer, style],
    onPress: onPress,
    disabled: disabled,
    testID: testID,
    background: background,
    accessibilityLabel: accessibilityLabel,
    accessibilityRole: "menuitem",
    accessibilityState: newAccessibilityState,
    rippleColor: rippleColor,
    hitSlop: hitSlop
  }, React.createElement(_reactNative.View, {
    style: [styles.row, containerStyle]
  }, leadingIcon ? React.createElement(_reactNative.View, {
    style: [!isV3 && styles.item, {
      width: iconWidth
    }],
    pointerEvents: "box-none"
  }, React.createElement(_Icon.default, {
    source: leadingIcon,
    size: 24,
    color: iconColor
  })) : null, React.createElement(_reactNative.View, {
    style: [!isV3 && styles.item, styles.content, {
      minWidth: minWidth,
      maxWidth: maxWidth
    }, isV3 && (leadingIcon ? styles.md3LeadingIcon : styles.md3WithoutLeadingIcon), contentStyle],
    pointerEvents: "none"
  }, React.createElement(_Text.default, {
    variant: "bodyLarge",
    selectable: false,
    numberOfLines: 1,
    testID: `${testID}-title`,
    style: [!isV3 && styles.title, titleTextStyle, titleStyle],
    maxFontSizeMultiplier: titleMaxFontSizeMultiplier
  }, title)), isV3 && trailingIcon ? React.createElement(_reactNative.View, {
    style: [!isV3 && styles.item, {
      width: iconWidth
    }],
    pointerEvents: "box-none"
  }, React.createElement(_Icon.default, {
    source: trailingIcon,
    size: 24,
    color: iconColor
  })) : null));
};
MenuItem.displayName = 'Menu.Item';
var styles = _reactNative.StyleSheet.create({
  container: {
    minWidth: _utils.MIN_WIDTH,
    maxWidth: _utils.MAX_WIDTH,
    height: 48,
    justifyContent: 'center'
  },
  md3DenseContainer: {
    height: 32
  },
  row: {
    flexDirection: 'row'
  },
  title: {
    fontSize: 16
  },
  item: {
    marginHorizontal: 8
  },
  content: {
    justifyContent: 'center'
  },
  md3LeadingIcon: {
    marginLeft: 12
  },
  md3WithoutLeadingIcon: {
    marginLeft: 4
  }
});
var _default = exports.default = MenuItem;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,