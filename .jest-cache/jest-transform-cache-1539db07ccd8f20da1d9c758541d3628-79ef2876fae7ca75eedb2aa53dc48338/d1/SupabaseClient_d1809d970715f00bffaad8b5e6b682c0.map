{"version":3,"names":["_supabase","require","SupabaseClient","exports","_classCallCheck2","default","client","_createClass2","key","value","getClient","getSupabaseClient","from","Error","get","_getCurrentUser","_asyncToGenerator2","_yield$this$getClient","auth","getUser","user","data","error","console","log","_yield$this$getClient2","signInAnonymously","anonUser","signInError","id","getCurrentUser","apply","arguments","onAuthStateChange","callback","supabaseClient"],"sources":["SupabaseClient.ts"],"sourcesContent":["import { SupabaseClient as BaseSupabaseClient, AuthChangeEvent, Session } from \"@supabase/supabase-js\";\nimport { Database } from \"../../models/supabase\";\nimport { getSupabaseClient } from \"./supabase\";\n\n/**\n * Typed Supabase client utility\n * Provides a strongly typed interface to the Supabase database\n */\nexport class SupabaseClient {\n\tprivate client: BaseSupabaseClient<Database> | null = null;\n\n\tprivate getClient(): BaseSupabaseClient<Database> {\n\t\tif (!this.client) {\n\t\t\tconst client = getSupabaseClient();\n\t\t\tif (!client || typeof client.from !== 'function') {\n\t\t\t\tthrow new Error('Invalid Supabase client: missing required methods');\n\t\t\t}\n\t\t\tthis.client = client;\n\t\t}\n\t\treturn this.client;\n\t}\n\n\t/**\n\t * Get the underlying Supabase client with full type safety\n\t */\n\tgetSupabaseClient(): BaseSupabaseClient<Database> {\n\t\treturn this.getClient();\n\t}\n\n\t/**\n\t * Get a reference to the exercises table with type safety\n\t */\n\tget exercises() {\n\t\treturn this.getClient().from('exercises');\n\t}\n\n\t/**\n\t * Get the current authenticated user\n\t * Automatically signs in anonymously if no user is authenticated (for testing)\n\t */\n\tasync getCurrentUser() {\n\t\ttry {\n\t\t\tconst { data: { user }, error } = await this.getClient().auth.getUser();\n\t\t\tif (error || !user) {\n\t\t\t\t// For tests and initial setup, automatically sign in anonymously\n\t\t\t\tconsole.log('No authenticated user found, signing in anonymously...');\n\t\t\t\tconst { data: { user: anonUser }, error: signInError } = await this.getClient().auth.signInAnonymously();\n\t\t\t\tif (signInError) {\n\t\t\t\t\tconsole.error('Anonymous sign-in failed:', signInError);\n\t\t\t\t\tthrow signInError;\n\t\t\t\t}\n\t\t\t\tconsole.log('Successfully signed in anonymously:', anonUser?.id);\n\t\t\t\treturn anonUser;\n\t\t\t}\n\t\t\treturn user;\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to get current user:', error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Subscribe to auth state changes\n\t */\n\tonAuthStateChange(callback: (event: AuthChangeEvent, session: Session | null) => void) {\n\t\treturn this.getClient().auth.onAuthStateChange(callback);\n\t}\n}\n\n// Export a singleton instance\nexport const supabaseClient = new SupabaseClient();\n"],"mappings":";;;;;;;;AAEA,IAAAA,SAAA,GAAAC,OAAA;AAA+C,IAMlCC,cAAc,GAAAC,OAAA,CAAAD,cAAA;EAAA,SAAAA,eAAA;IAAA,IAAAE,gBAAA,CAAAC,OAAA,QAAAH,cAAA;IAAA,KAClBI,MAAM,GAAwC,IAAI;EAAA;EAAA,WAAAC,aAAA,CAAAF,OAAA,EAAAH,cAAA;IAAAM,GAAA;IAAAC,KAAA,EAE1D,SAAQC,SAASA,CAAA,EAAiC;MACjD,IAAI,CAAC,IAAI,CAACJ,MAAM,EAAE;QACjB,IAAMA,MAAM,GAAG,IAAAK,2BAAiB,EAAC,CAAC;QAClC,IAAI,CAACL,MAAM,IAAI,OAAOA,MAAM,CAACM,IAAI,KAAK,UAAU,EAAE;UACjD,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;QACrE;QACA,IAAI,CAACP,MAAM,GAAGA,MAAM;MACrB;MACA,OAAO,IAAI,CAACA,MAAM;IACnB;EAAC;IAAAE,GAAA;IAAAC,KAAA,EAKD,SAAAE,iBAAiBA,CAAA,EAAiC;MACjD,OAAO,IAAI,CAACD,SAAS,CAAC,CAAC;IACxB;EAAC;IAAAF,GAAA;IAAAM,GAAA,EAKD,SAAAA,IAAA,EAAgB;MACf,OAAO,IAAI,CAACJ,SAAS,CAAC,CAAC,CAACE,IAAI,CAAC,WAAW,CAAC;IAC1C;EAAC;IAAAJ,GAAA;IAAAC,KAAA;MAAA,IAAAM,eAAA,OAAAC,kBAAA,CAAAX,OAAA,EAMD,aAAuB;QACtB,IAAI;UACH,IAAAY,qBAAA,SAAwC,IAAI,CAACP,SAAS,CAAC,CAAC,CAACQ,IAAI,CAACC,OAAO,CAAC,CAAC;YAAvDC,IAAI,GAAAH,qBAAA,CAAZI,IAAI,CAAID,IAAI;YAAIE,KAAK,GAAAL,qBAAA,CAALK,KAAK;UAC7B,IAAIA,KAAK,IAAI,CAACF,IAAI,EAAE;YAEnBG,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;YACrE,IAAAC,sBAAA,SAA+D,IAAI,CAACf,SAAS,CAAC,CAAC,CAACQ,IAAI,CAACQ,iBAAiB,CAAC,CAAC;cAAlFC,QAAQ,GAAAF,sBAAA,CAAtBJ,IAAI,CAAID,IAAI;cAAqBQ,WAAW,GAAAH,sBAAA,CAAlBH,KAAK;YACvC,IAAIM,WAAW,EAAE;cAChBL,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEM,WAAW,CAAC;cACvD,MAAMA,WAAW;YAClB;YACAL,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEG,QAAQ,oBAARA,QAAQ,CAAEE,EAAE,CAAC;YAChE,OAAOF,QAAQ;UAChB;UACA,OAAOP,IAAI;QACZ,CAAC,CAAC,OAAOE,KAAK,EAAE;UACfC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;UACnD,MAAMA,KAAK;QACZ;MACD,CAAC;MAAA,SAnBKQ,cAAcA,CAAA;QAAA,OAAAf,eAAA,CAAAgB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAdF,cAAc;IAAA;EAAA;IAAAtB,GAAA;IAAAC,KAAA,EAwBpB,SAAAwB,iBAAiBA,CAACC,QAAmE,EAAE;MACtF,OAAO,IAAI,CAACxB,SAAS,CAAC,CAAC,CAACQ,IAAI,CAACe,iBAAiB,CAACC,QAAQ,CAAC;IACzD;EAAC;AAAA;AAIK,IAAMC,cAAc,GAAAhC,OAAA,CAAAgC,cAAA,GAAG,IAAIjC,cAAc,CAAC,CAAC","ignoreList":[]}